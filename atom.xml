<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>sergiojune | 梦开始的地方</title>
  
  <subtitle>python,算法，机器学习，爬虫，数据分析</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://sergiojune.com/"/>
  <updated>2018-08-06T08:53:50.853Z</updated>
  <id>http://sergiojune.com/</id>
  
  <author>
    <name>sergiojune</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>利用python爬取网易云音乐评论，并把数据存入mysql</title>
    <link href="http://sergiojune.com/2018/08/07/python3.x%E7%88%AC%E5%8F%96%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E8%AF%84%E8%AE%BA/"/>
    <id>http://sergiojune.com/2018/08/07/python3.x爬取网易云音乐评论/</id>
    <published>2018-08-07T00:43:42.113Z</published>
    <updated>2018-08-06T08:53:50.853Z</updated>
    
    <content type="html"><![CDATA[<section class="96edit" label="Powered by bj.96weixin.com" style="font-size:16px;"><section class="editor"><section editor="bj.96weixin.com" style="margin:0 auto;padding:0;box-sizing:border-box"><section class="yead_bgc wx-bg" style="border-style: solid; -webkit-border-image: url(&quot;https://mmbiz.qpic.cn/mmbiz_png/v4vz52CcB13JzTTXXg3mC439fK28gxRK85c5jJicI6ia4ibEOx5DTicoiciamOZc6hcaLFy9S1AfhJzm8kUAHJnv4jtQ/0&quot;) 15 5 5 fill stretch; color: rgb(51, 51, 51); border-width: 10px 4px 4px; padding: 0px; box-sizing: border-box; background-color: rgb(51, 184, 108);"><section style="width: 100%; font-size: 14px; margin: 0px; line-height: 30px; padding: 0px 5px; box-sizing: border-box;" data-width="100%"><p style="padding:0;margin:0;text-align:justify">在简单学习了python爬虫后，又想继续折腾，进而找到了这个网易云音乐，因为本人平时就是用它听的歌，也喜欢看歌里的评论，所以就爬网易云音乐评论吧，那么开始吧！</p></section></section></section><p><br></p><section class="editor"><section class="editor"><section style="width:100%; text-align:center;" data-width="100%"><section style="display: inline-block; border-width: 5px; border-style: solid; -webkit-border-image: url(&quot;https://mmbiz.qpic.cn/mmbiz_png/uN1LIav7oJ94OAxhxMZuj75SnON56cqmO9jNia9DuXHjVlkiasaiaJIbrtDbmTq6hK2es1BeyapTqz6viaZhgxkxZQ/0?wx_fmt=png&quot;) 5 fill; box-sizing: border-box;"><section style="padding: 2px 10px; text-align: center; color: rgb(225, 201, 255); font-size: 16px; box-sizing: border-box;"><strong>正式进入主题</strong></section></section></section></section></section><p><br></p><p>首先还是去找目标网页并开始分析网页结构，如下</p></section><p><br></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802044488.png" title="1802044488.png" alt=""></p><p><br></p><p>上面的三个箭头都是所要找的数据，分别是评论用户，评论和点赞数，都可以用正则表达式找出来，接下来继续找怎样找到下一页的数据，还是用开发者工具，但是当点击下一页的时候，网页的url没有变，说明网页是动态加载，所以就不能在当前网页找数据了，应该在他的<strong>xhr</strong>文件里找，所以点入<strong>network</strong>看看，然后也点击下一页一看，果然有想要的</p><p><br></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802044234.png" title="1802044234.png" alt=""></p><p>看到这里，就兴奋地去敲代码了</p><p><br></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802041841.png" title="1802041841.png" alt=""></p><p><br></p><p>一点击运行，结果什么东西都没有，但是他的状态码是200，明显请求成功啊，却没有东西返回，再去network仔细看看这个网页，看到他是个post请求，也看到了需要post两个参数params和ensSecKey</p><p><br></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802043912.png" title="1802043912.png" alt="">一看到这个，密密麻麻的数字和字母，就猜应该是被加密了，不过可以复制下来看看有没有用。接下来看下他的Response，咦，这是个json，不是html结构的，所以需要用到Json库来进行解析</p><p><br></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802045600.png" title="1802045600.png" alt=""></p><p>现在开始敲代码吧，先把上面的两个参数复制过来看看。</p><p><br></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802049865.png" title="1802049865.png" alt=""></p><p>现在把每条评论的评论用户和点赞数和评论获取出来</p><p><br></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802041977.png" title="1802041977.png" alt=""></p><p>可以看到，利用json.loads()方法把数据转成python格式里的字典后就可以把想要的数据取出来了，但是，下一页怎样取？总不能每次都复制粘贴那两个参数吧？那唯一的方法就是不爬了。。怎么可能？我的继续，那我就要进行破解这两个参数了，那好继续看<strong>network，</strong>因为要加密，肯定要用js进行加密的</p><p><br></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802041200.png" title="1802041200.png" alt=""></p><p>看到刚才那个网站的发起者core.js,,然后把它文件下载下来慢慢研究</p><p><br></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802041185.png" title="1802041185.png" alt=""></p><p>保存后在经过美化，然后进行查找那个encSecKey参数（ps:JSj’e’tong’yang’de美化网址为<a href="http://www.css88.com/tool/js_beautify/），然后找到这个" _src="http://www.css88.com/tool/js_beautify/），然后找到这个" target="_blank" rel="noopener">http://www.css88.com/tool/js_beautify/），然后找到这个</a></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802042238.png" title="1802042238.png" alt=""></p><p>看到window.asrsea()方法有四个参数，先不去管这个函数，先看看他的四个参数是什什，这里没必要去研究那四个参数怎样来的，只需要知道他是什么，那么我们可以加点代码上去让他显示出来，从而利用fiddler来进行调试</p><p>加入代码如下<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802041943.png" title="1802041943.png" alt=""></p><p>可以分别获取上面的每一个参数，也把那个params获取看看，然后在fiddler上操作如下</p><p><br></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802043715.png" title="1802043715.png" alt=""><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802041150.png" title="1802041150.png" alt=""></p><p>完成上面的设置后刷新网页就可以在console上面找到参数信息，如果没有的话这是因为你之前浏览该网页的时候它被缓存了下来，所以要清除缓存文件（在清除浏览器记录里面有）</p><p><br></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802042410.png" title="1802042410.png" alt=""></p><p>那个rid有本歌曲的id，明显是与评论有关的，我试着连翻几页后，发现那个offset就是评论偏移数，offset就是(页数-1)<em>20，total在第一页是true，在其他页是false<br></em></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802046744.png" title="1802046744.png" alt="">同样的方法也得到第二个参数为：010001</p><p>第三个参数为：00e0b509f6259df8642dbc35662901477df22677ec152b5ff68ace615bb7b725152b3ab17a876aea8a5aa76d2e417629ec4ee341f56135fccf695280104e0312ecbda92557c93870114af6c9d05c4f7f0c3685b7a46bee255932575cce10b424d813cfe4875d3e82047b97ddef52741d546b8e289dc6935b3ece0462db0a22b8e7</p><p>第四个参数为：0CoJUm6Qyw8W8jud</p><p><br></p><p>接下来就要看window.asrsea()方法是什么操作的了，还是通过查找js文件可以看到这个<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802044023.png" title="1802044023.png" alt=""></p><p><br></p><p>通过研究i是随机获取十六个字符而b函数是<strong>AES加密</strong>，其中偏移量为<strong>0102030405060708</strong>，模式为<strong>CBC</strong>，看回d函数，其中<strong>params连续两次加密，第一次加密时，<span style="line-height: 25.6px; white-space: pre-wrap;">文本为第一个参数。密钥为第四个参数，第二次加密时文本为第一次加密的值，密钥为随机数a。而encS<span style="line-height: 25.6px; white-space: pre-wrap;">ec</span>key是一个RSA加密，他的公钥是第二个参数，模式是第三个参数，文本为那个随机字符串a</span></strong></p><p><br></p><p>终于分析完了，接着开始敲代码</p><p><br></p><p>先来个获取第一页评论的代码</p><p>这是获取两个参数的类<br></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802057877.png" title="1802057877.png" alt=""><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802058447.png" title="1802058447.png" alt=""><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802056847.png" title="1802056847.png" alt=""></p><p><br></p><p>这是解析网易云音乐和获取评论的类</p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802051937.png" title="1802051937.png" alt=""><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802052702.png" title="1802052702.png" alt=""><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802056776.png" title="1802056776.png" alt=""></p><p><br></p><p>然而一点击运行，直接给我报了个错：<strong>TypeError: can’t concat str to bytes</strong></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802049613.png" title="1802049613.png" alt=""></p><p><br></p><p>原来是因为在第二次加密的时候，那个params是个byte类型，所以把他转成字符串类型就可以了<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802052783.png" title="1802052783.png" alt=""></p><p><br></p><p>再次点击运行，结果还是报错了：<strong>json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)</strong></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802057884.png" title="1802057884.png" alt=""></p><p><br></p><p>这个报错因为我的json解析错了，回头调试一看，<strong>网页返回的东西是空的，但他的状态码是200</strong>，这是什么鬼？接着我再试了把那两个参数的值直接复制和前面一样看看，结果运行成功，这就说明我的是加密过程错了，然后我就回去看了几篇，看不出什么错误，上网百度找到了这个知乎文章<strong><a href="https://zhuanlan.zhihu.com/p/32069543" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/32069543</a></strong>，我把她的代码复制过来运行下，结果是可以的，我就继续看看我和她的区别，原来我<strong>在用那个16个随机字符的时候用错了，我在两个参数给了两个不同的，而是需要给共同一个的</strong>，看到这里，我就直接回去改了下，果然运行成功，代码我就不贴出来了，效果如下<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802059926.png" title="1802059926.png" alt=""></p><p><br></p><p>接着是获取每一页的评论，而每一页与第一个参数的offset有关，其中的公式为<strong>offse=(页数-1)20</strong>，total在第一页是true，在其他页是false</p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802051477.png" title="1802051477.png" alt=""><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802058622.png" title="1802058622.png" alt=""><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802052656.png" title="1802052656.png" alt=""></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802055375.png" title="1802055375.png" alt="">而写入数据库我用的是我这篇文章的操作</p><div>&nbsp;<a href="http://mp.weixin.qq.com/s/6sQ_ER39P2NtXaPOnGdQNA" target="_blank" rel="noopener">http://mp.weixin.qq.com/s/6sQ_ER39P2NtXaPOnGdQNA</a><br></div><p>，由于篇幅过长，就不贴出来了，感兴趣的可以去看看<br></p><p><br></p><p>接下来点运行就可以了，但是运行到第八页的时候出现了这个异常</p><p><strong>raise errorclass(errno, errval)</strong></p><p><strong>pymysql.err.InternalError: (1366, “Incorrect string value: ‘\xF0\x9F\x92\x94’ for column ‘content’ at row 1”)</strong></p><p>原因是这条评论有个识别不了的表情，之后百度参考这篇文章<a href="http://blog.csdn.net/HHTNAN/article/details/76769264?locationNum=9&amp;fps=1修改了数据库的编码方式，注意还要自己修改下创建数据库时的编码方式才可！" _src="http://blog.csdn.net/HHTNAN/article/details/76769264?locationNum=9&amp;fps=1修改了数据库的编码方式，注意还要自己修改下创建数据库时的编码方式才可！" target="_blank" rel="noopener">http://blog.csdn.net/HHTNAN/article/details/76769264?locationNum=9&amp;fps=1修改了数据库的编码方式，注意还要自己修改下创建数据库时的编码方式才可！</a></p><p>这是首页数据库效果<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802053659.png" title="1802053659.png" alt=""></p><p><br></p><p>获取完成（家驹的歌评论这么少吗？不解）<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802055481.png" title="1802055481.png" alt=""></p><p><br></p><section class="editor"><p><img src="https://mmbiz.qlogo.cn/mmbiz/QKDxrVYehicdAibIVUpquF6TQUwXFg6dYCrLBEiasLaVyObib9LjK08qQ7IzkYKROO93uxoEnMSl8zRCWiaY7JwgZWg/0?wx_fmt=jpeg" style="margin: 0px; padding: 0px; max-width: 100%;"></p></section><p>终于完成了，虽然辛苦，但是值得，在这个过程中也学会了很多东西，在写这篇文章时参考了两篇文章，一个是知乎首个回答<a href="https://www.zhihu.com/question/36081767/answer/140287795，另一个就是解密过程https://github.com/cosven/cosven.github.io/issues/30" _src="https://www.zhihu.com/question/36081767/answer/140287795，另一个就是解密过程https://github.com/cosven/cosven.github.io/issues/30" target="_blank" rel="noopener">https://www.zhihu.com/question/36081767/answer/140287795，另一个就是解密过程https://github.com/cosven/cosven.github.io/issues/30</a></p><p>大家有什么问题的话欢迎去我的公众号<strong>日常学python</strong>的后台那里问我，我知道的我都一一为你解答，最后，若你也在这篇文章学到了，可以帮我点个赞，转发下吗？谢谢支持哈！</p><p><br></p><p>ps:若需要完整代码可以在我的公众号<strong>日常学python</strong>后台回复评论即可获取，还有其他福利以后会一一分析</p><p><span style="line-height: inherit;"></span><span style="line-height: inherit;">我的公众号的二维码<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802053253.png" title="1802053253.png" _src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802053253.png" alt=""></span></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p></section>]]></content>
    
    <summary type="html">
    
      
      
        &lt;section class=&quot;96edit&quot; label=&quot;Powered by bj.96weixin.com&quot; style=&quot;font-size:16px;&quot;&gt;&lt;section class=&quot;editor&quot;&gt;&lt;section editor=&quot;bj.96weixin.com&quot;
      
    
    </summary>
    
      <category term="python" scheme="http://sergiojune.com/categories/python/"/>
    
    
      <category term="爬虫" scheme="http://sergiojune.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="requestst" scheme="http://sergiojune.com/tags/requestst/"/>
    
  </entry>
  
  <entry>
    <title>hexo搭建的博客提交文章本地预览成功但github没有显示解决方法</title>
    <link href="http://sergiojune.com/2018/08/07/hexo%E6%90%AD%E5%BB%BA%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E6%96%87%E7%AB%A0%E6%9C%AC%E5%9C%B0%E9%A2%84%E8%A7%88%E6%88%90%E5%8A%9F%E4%BD%86github%E6%B2%A1%E6%9C%89%E6%98%BE%E7%A4%BA%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://sergiojune.com/2018/08/07/hexo搭建的博客提交文章本地预览成功但github没有显示解决方法/</id>
    <published>2018-08-07T00:43:42.059Z</published>
    <updated>2018-08-06T08:53:50.827Z</updated>
    
    <content type="html"><![CDATA[<section class="96edit" label="Powered by bj.96weixin.com" style="font-size:16px;"><p>记录自己博客的一个坑！</p><p><br></p><p>前几天我写了文章，想发布在博客上，<strong>谁知道在提交上去，只可以在本地预览，却不可以在github上看到，</strong>而且github上也没有提交文章的记录。这个坑我百度了很久也没有找到，直到问到人，<strong>说需要升级git，然后升级了。</strong>果然，成功提交了！！！</p><p><br></p><p>升级git是直接在重新下载个git把原来的覆盖掉就可以了。</p><p><br></p><p>升级完成之后记得再提交一次，比如：</p><ul class=" list-paddingleft-2" style="list-style-type: disc; margin: 0px; padding: 0px 0px 0px 30px;"><li><p>hexo clean</p></li><li><p>hexo g</p></li><li><p>hexo d</p></li></ul><p>这样就可以了，如果还是不可以，可以选择清除下cookie及历史记录。</p><p><br></p><p><br></p><p>我完成了上面的之后，文章算是提交上去了，但是，我的主题没有了，<img src="http://pic.96weixin.com/upload/image2/vip/881679/1803/1803139675.png" title="1803139675.png" _src="http://pic.96weixin.com/upload/image2/vip/881679/1803/1803139675.png" alt=""></p><p>很悲催，没想到一坑还比一坑高，所以还是接着百度，看到了可能是我的<strong>github的仓库名字</strong>和我的hexo博客里的配置<strong>_config.yml</strong>​文件中的url名字不一样导致的<img src="http://pic.96weixin.com/upload/image2/vip/881679/1803/1803133008.png" title="1803133008.png" _src="http://pic.96weixin.com/upload/image2/vip/881679/1803/1803133008.png" alt=""></p><p><br></p><p>试了一下，果真是可以了。这个坑是前面那个坑乱改东西留下的，不过解决了，就好！！</p><p><br></p><p><br></p><p>生活不止眼前的bug，还有乐趣和斗志！</p><p><br></p><p><br></p><p><br></p><p><br></p></section>]]></content>
    
    <summary type="html">
    
      
      
        &lt;section class=&quot;96edit&quot; label=&quot;Powered by bj.96weixin.com&quot; style=&quot;font-size:16px;&quot;&gt;&lt;p&gt;记录自己博客的一个坑！&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;前几天我写了文章，想发布在博客上，&lt;strong&gt;
      
    
    </summary>
    
      <category term="blog" scheme="http://sergiojune.com/categories/blog/"/>
    
    
      <category term="坑" scheme="http://sergiojune.com/tags/%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>学习用python操作mysql</title>
    <link href="http://sergiojune.com/2018/08/07/%E5%AD%A6%E4%B9%A0%E7%94%A8python%E6%93%8D%E4%BD%9Cmysql/"/>
    <id>http://sergiojune.com/2018/08/07/学习用python操作mysql/</id>
    <published>2018-08-07T00:43:42.012Z</published>
    <updated>2018-08-06T08:53:50.992Z</updated>
    
    <content type="html"><![CDATA[<p style="letter-spacing: 2px;">首先祝大家新年快乐哈！学生的估计明天也要上课了，工作的估计早就去上班了，我也快要上课了，哈哈，新年这段时间一直没有写过文章，一直忙于跑亲戚和学习，感觉有点对不起关注我的粉丝。所以，今天决定抽空写一篇技术文章来给大家看看，继上篇写了入门mysql之后，还没有学习如何用python来操作数据库，那我今天就带大家来学习如何用python操操作数据库。<br></p><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;">还有文末有福利，这算是给大家的新年礼物(记得点赞哦)</p><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;"><br></p><section class="editor"><section style="margin:10px auto;"><section style="width: 100%; font-size: 18px; height: 40px; line-height: 40px; border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: rgb(30, 28, 28); text-align: center; box-sizing: border-box;" data-width="100%">进入正题</section><section style="width: 100%; margin-top: 1px; border-top-style: solid; border-top-width: 1px; border-top-color: rgb(30, 28, 28); box-sizing: border-box;" data-width="100%"></section></section></section><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;">工欲善其事，必先利其器。所以第一步，我们先下载第三方库。在这里，我用到的是pymysql库。</p><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;">下载库：在命令行输入</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="hljs nginx" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); padding: 0.5em; display: block !important; word-wrap: normal !important; word-break: normal !important; white-space: pre !important; overflow: auto !important; background: rgb(40, 43, 46);"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">1</span><span class="hljs-attribute" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">pip</span> install pymysql<br></code></pre></section><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;">下载后可检验一下是否成功下载。直接在命令行进入python然后导库即可</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="hljs ruby" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); padding: 0.5em; display: block !important; word-wrap: normal !important; word-break: normal !important; white-space: pre !important; overflow: auto !important; background: rgb(40, 43, 46);"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">1</span><span class="hljs-symbol" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">C:</span>\Users\June&gt;python<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">2</span>Python <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">3.6</span>.<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">3</span> <span class="hljs-params" style="font-size: inherit; line-height: inherit; color: rgb(255, 152, 35); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">|Anaconda, Inc.|</span> (default, Oct <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">15</span> <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">2017</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">03</span><span class="hljs-symbol" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">:</span><span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">27</span><span class="hljs-symbol" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">:</span><span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">45</span>) [MSC v.<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">1900</span> <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">64</span> bit (AMD64)] on win32<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">3</span>Type <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">“help”</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">“copyright”</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">“credits”</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">or</span> <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">“license”</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">for</span> more information.<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">4</span><span class="hljs-meta" style="font-size: inherit; line-height: inherit; color: rgb(91, 218, 237); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">&gt;&gt;</span>&gt; import pymysql<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">5</span><span class="hljs-meta" style="font-size: inherit; line-height: inherit; color: rgb(91, 218, 237); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">&gt;&gt;</span>&gt;<br></code></pre></section><p style="letter-spacing: 2px;">看到这个画面就说明下载成功了，接下来学习如何操作数据库了！！！</p><p style="letter-spacing: 2px;"><br></p><section class="editor"><section style="margin:20px auto 16px;text-align:center;"><section style="border-top-style: solid; border-top-width: 1px; border-top-color: rgb(137, 137, 137); box-sizing: border-box;"><section style="border: 1px solid rgb(137, 137, 137); height: 30px; width: 30px; border-radius: 50%; margin-left: 50px; display: block; text-align: left; margin-top: -15px; box-sizing: border-box; background-color: rgb(255, 255, 255);"><section style="height: 24px; width: 24px; line-height: 24px; border-radius: 50%; margin: 2px auto 0px; text-align: center; color: rgb(255, 255, 255); box-sizing: border-box; background-color: rgb(233, 131, 109);"><p style="line-height:1.5em;">1</p></section></section><section style="display: block; padding: 0px 8px; line-height: 24px; font-size: 18px; margin-top: -30px; text-align: center; box-sizing: border-box;"><section style="display: inline-block; padding: 0px 8px; box-sizing: border-box; background-color: rgb(254, 254, 254);"><p><span style="font-family: 微软雅黑; font-size: 16px;"><span style="letter-spacing: 2px; line-height: 25.6px; white-space: pre-wrap;">连接数据库</span></span></p></section></section></section></section></section><p><br></p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="hljs coffeescript" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); padding: 0.5em; display: block !important; word-wrap: normal !important; word-break: normal !important; white-space: pre !important; overflow: auto !important; background: rgb(40, 43, 46);"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">1</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">import</span> pymysql<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">2</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 连接数据库</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">3</span>db = pymysql.connect(host=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘127.0.0.1’</span>,user=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘root’</span>,passwd=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘your password’</span>,db=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘news’</span>,port=<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">3306</span>,charset=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘utf8’</span>)<br></code></pre></section><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;">以上的参数是必填的，</p><ul class=" list-paddingleft-2" style="list-style-type: disc; margin: 0px; padding: 0px 0px 0px 30px;"><li><p style="letter-spacing: 2px;"><strong>host</strong>: 这个是ip地址，因为我这里是本地的，所以填127.0.0.1，也可以填localhost。</p></li><li><p style="letter-spacing: 2px;"><strong>user</strong>：用户名，如果你也是本地的，就填root好了</p></li><li><p style="letter-spacing: 2px;"><strong>passwd</strong>：这个是密码，填上你自己设的密码就可以了</p></li><li><p style="letter-spacing: 2px;"><strong>db</strong>：这个是数据库名，我这里选的是news数据库</p></li><li><p style="letter-spacing: 2px;"><strong>port</strong>：这个是端口，本地的一般都是3306</p></li><li><p style="letter-spacing: 2px;"><strong>charset</strong>：这个是编码方式，要和你数据库的编码方式一致，要不会连接失败</p></li></ul><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;"><strong>连接上了，怎么验证呢？这里我们可以选择查一条数据</strong></p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="hljs python" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); padding: 0.5em; display: block !important; word-wrap: normal !important; word-break: normal !important; white-space: pre !important; overflow: auto !important; background: rgb(40, 43, 46);"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 1</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">try</span>:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 2</span> db = pymysql.connect(host=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘127.0.0.1’</span>,user=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘root’</span>,passwd=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘your password’</span>,db=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘news’</span>,port=<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">3306</span>,charset=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘utf8’</span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 3</span> <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 检验数据库是否连接成功</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 4</span> cursor = db.cursor()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 5</span> <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 这个是执行sql语句，返回的是影响的条数</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 6</span> data = cursor.execute(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘SELECT <em> FROM <code>new</code>‘</em></span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 7</span> <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 得到一条数据</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 8</span> one = cursor.fetchone()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 9</span> print(data)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">10</span> print(one)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">11</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">except</span> pymysql.Error <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">as</span> e:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">12</span> print(e)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">13</span> print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘操作数据库失败’</span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">14</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">finally</span>:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">15</span> <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 如果连接成功就要关闭数据库</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">16</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">if</span> db:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">17</span> db.close()<br></code></pre></section><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;">代码解读：因为在连接数据库中，有时会发生连接失败等异常，所以这里就进行捕捉异常，这里的异常都是在 <strong>pymsql.Error </strong>里面。上面的代码看不懂也没关系，因为我接下来会说，如果运行后有结果证明连接成功。</p><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;"><strong>在用完后，一定要记得关闭数据库连接，防止资源泄露问题。</strong></p><p style="letter-spacing: 2px;"><br></p><section class="editor"><section style="margin:20px auto 16px;text-align:center;"><section style="border-top-style: solid; border-top-width: 1px; border-top-color: rgb(137, 137, 137); box-sizing: border-box;"><section style="border: 1px solid rgb(137, 137, 137); height: 30px; width: 30px; border-radius: 50%; margin-left: 50px; display: block; text-align: left; margin-top: -15px; box-sizing: border-box; background-color: rgb(255, 255, 255);"><section style="height: 24px; width: 24px; line-height: 24px; border-radius: 50%; margin: 2px auto 0px; text-align: center; color: rgb(255, 255, 255); box-sizing: border-box; background-color: rgb(233, 131, 109);"><p style="line-height:1.5em;">2</p></section></section><section style="display: block; padding: 0px 8px; line-height: 24px; margin-top: -30px; text-align: center; box-sizing: border-box;"><section style="display: inline-block; padding: 0px 8px; box-sizing: border-box; background-color: rgb(254, 254, 254);"><p style=""><span style="font-family:微软雅黑">对数据进行查询</span></p></section></section></section></section></section><p><br></p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); padding: 0.5em; display: block !important; word-wrap: normal !important; word-break: normal !important; white-space: pre !important; overflow: auto !important; background: rgb(40, 43, 46);"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 1</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">import</span> pymysql<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 2</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">try</span>:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 3</span> conn = pymysql.connect(host=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘127.0.0.1’</span>,user=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘root’</span>,passwd=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘password’</span>,db=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘news’</span>,charset=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘utf8’</span>,port=<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">3306</span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 4</span> <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 这个是光标，用来操作数据库语句</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 5</span> cursor = conn.cursor()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 6</span> <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 执行sql语句</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 7</span> cursor.execute(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘SELECT  FROM <code>new</code>‘</span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 8</span> print(cursor.fetchone())<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 9</span> <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 关闭光标</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">10</span> cursor.close()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">11</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">except</span> pymysql.Error <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">as</span> e:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">12</span> print(e)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">13</span> print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘操作数据库失败’</span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">14</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">finally</span>:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">15</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">if</span> conn:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">16</span> conn.close()<br></code></pre></section><p style="letter-spacing: 2px;">代码解读：</p><ul class=" list-paddingleft-2" style="list-style-type: disc; margin: 0px; padding: 0px 0px 0px 30px;"><li><p style="letter-spacing: 2px;"><strong>cursor()</strong>:这个是光标，用来执行mysql语句的，用完后也是需要关闭的</p></li><li><p style="letter-spacing: 2px;"><strong>excute</strong><strong>()</strong>：这个是执行语句，执行参数的mysql语句</p></li><li><p style="letter-spacing: 2px;"><strong>fetchone()</strong>：这个是查看执行语句后的一条数据</p></li><li><p style="letter-spacing: 2px;"><strong>fetchall()</strong>：这个是查看所有数据</p></li></ul><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;">在查询数据后，返回的是一整条数据，有没有可以按字典形式来查询的呢？来试试！</p><p style="letter-spacing: 2px;"><br></p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); padding: 0.5em; display: block !important; word-wrap: normal !important; word-break: normal !important; white-space: pre !important; overflow: auto !important; background: rgb(40, 43, 46);"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">1</span>print(cursor.fetchone()[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘name’</span>])<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">2</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">3</span>Traceback (most recent call last):<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">4</span> File <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">“E:/anaconda/python_project/mysql_test/test2.py”</span>, line <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">8</span>, <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">in</span> &lt;module&gt;<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">5</span> print(cursor.fetchone()[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘name’</span>])<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">6</span>TypeError: tuple indices must be integers <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">or</span> slices, <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">not</span> str<br></code></pre></section><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;">查了之后，编译器想都不想就给了我这个错误，说这是个元组，不能这样操作。</p><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;">虽然python没有提供，但是我们可以手动转成字典来查询啊</p><p style="letter-spacing: 2px;">cursor这里有个属性：<strong>description</strong>。获取的是数据库每个栏位情况，如下：</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); padding: 0.5em; display: block !important; word-wrap: normal !important; word-break: normal !important; white-space: pre !important; overflow: auto !important; background: rgb(40, 43, 46);"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">1</span>print(cursor.description)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">2</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 下面是结果</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">3</span>((<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘id’</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">3</span>, <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">None</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">11</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">11</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">0</span>, <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">False</span>), (<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘type’</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">253</span>, <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">None</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">5</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">5</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">0</span>, <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">False</span>), (<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘title’</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">253</span>, <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">None</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">50</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">50</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">0</span>, <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">False</span>), (<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘content’</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">253</span>, <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">None</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">2000</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">2000</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">0</span>, <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">False</span>), (<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘view_count’</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">3</span>, <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">None</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">11</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">11</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">0</span>, <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">False</span>), (<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘release_time’</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">12</span>, <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">None</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">19</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">19</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">0</span>, <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">False</span>), (<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘author’</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">253</span>, <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">None</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">20</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">20</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">0</span>, <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">True</span>), (<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘from’</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">253</span>, <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">None</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">20</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">20</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">0</span>, <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">True</span>), (<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘is_valibale’</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">3</span>, <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">None</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">11</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">11</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">0</span>, <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">False</span>)<br></code></pre></section><p><br></p><p>所以，我们利用这个属性手动生成字典</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); padding: 0.5em; display: block !important; word-wrap: normal !important; word-break: normal !important; white-space: pre !important; overflow: auto !important; background: rgb(40, 43, 46);"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">1</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 将一条数据转成字典方便查找</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">2</span>new = dict(zip([x[<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">0</span>] <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">for</span> x <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">in</span> cursor.description],[x <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">for</span> x <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">in</span> cursor.fetchone()]))<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">3</span>print(new)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">4</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 下面是结果</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">5</span>{<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘id’</span>: <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">2</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘type’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘NBA’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘title’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘考辛斯跟腱撕裂赛季报销 浓眉詹皇发声祝福’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘content’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘他遭遇左脚跟腱撕裂，将缺席赛季剩下的比赛。这无疑对考辛斯和鹈鹕队都是一个重大的打击’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘view_count’</span>: <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">3560</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘release_time’</span>: datetime.datetime(<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">2018</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">1</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">27</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">12</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">10</span>), <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘author’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘xiaoylin’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘from’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘腾讯体育’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘is_valibale’</span>: <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">1</span>}<br></code></pre></section><p>这里利用zip函数和列表生成式来一行代码就生成成功了</p><p><br></p><p>用字典来查询，现在就可以了</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); padding: 0.5em; display: block !important; word-wrap: normal !important; word-break: normal !important; white-space: pre !important; overflow: auto !important; background: rgb(40, 43, 46);"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">1</span>print(new[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘title’</span>])<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">2</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 下面是结果</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">3</span>考辛斯跟腱撕裂赛季报销 浓眉詹皇发声祝福<br></code></pre></section><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;">但是，上面的只是一条数据的，如果是多条的呢？再按上面的方法就行不通了。这时就需要用到map函数了</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); padding: 0.5em; display: block !important; word-wrap: normal !important; word-break: normal !important; white-space: pre !important; overflow: auto !important; background: rgb(40, 43, 46);"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">1</span><span class="hljs-function" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">def</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">new2dict</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; color: rgb(255, 152, 35); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">(new)</span>:</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">2</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">return</span> dict(zip([x[<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">0</span>] <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">for</span> x <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">in</span> cursor.description],[x <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">for</span> x <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">in</span> new]))<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">3</span>news_list = list(map(new2dict,cursor.fetchall()))<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">4</span>print(news_list)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">5</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 下面是结果</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">6</span>[{<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘id’</span>: <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">2</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘type’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘NBA’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘title’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘考辛斯跟腱撕裂赛季报销 浓眉詹皇发声祝福’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘content’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘他遭遇左脚跟腱撕裂，将缺席赛季剩下的比赛。这无疑对考辛斯和鹈鹕队都是一个重大的打击’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘view_count’</span>: <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">3560</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘release_time’</span>: datetime.datetime(<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">2018</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">1</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">27</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">12</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">10</span>), <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘author’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘xiaoylin’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘from’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘腾讯体育’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘is_valibale’</span>: <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">1</span>}, {<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘id’</span>: <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">3</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘type’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘NBA’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘title’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘火箭挖21分大哈登得背锅 连遭浓眉大帽太尴尬’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘content’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘火箭在客场以113-115惜败于鹈鹕，4连胜终结。詹姆斯-哈登出战34分钟16投5中，其中三分球9投只有1中，罚球14罚12中，拿到23分、11助攻、5篮板但也有4次失误，其在场正负值为尴尬的-12分’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘view_count’</span>: <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">7520</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘release_time’</span>: datetime.datetime(<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">2018</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">1</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">27</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">12</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">5</span>), <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘author’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘youngcao’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘from’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘腾讯体育’</span>,<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘is_valibale’</span>: <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">1</span>}, {<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘id’</span>: <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">4</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘type’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘英超’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘title’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘足总杯-曼联4-0英乙球队晋级 桑神首秀造两球’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘content’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘2017-18赛季英格兰足总杯第4轮，曼联客场4比0击败英乙球队约维尔，顺利晋级下一轮。桑切斯迎来曼联首秀，并制造了两个入球’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘view_count’</span>: <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">6560</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘release_time’</span>: datetime.datetime(<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">2018</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">1</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">27</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">5</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">49</span>), <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘author’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘ricazhang’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘from’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘腾讯体育’</span>,<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘is_valibale’</span>: <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">1</span>}, {<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘id’</span>: <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">5</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘type’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘英超’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘title’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘这才配红魔7号！桑神首秀大腿级表演 回击嘘声质疑’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘content’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘在今天凌晨对阵约维尔的首秀也值得期待。虽然在登场的72分钟时间里没有进球，但送出1次助攻且有有6次威胁传球的数据还是十分亮眼’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘view_count’</span>: <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">2760</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘release_time’</span>: datetime.datetime(<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">2018</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">1</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">27</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">6</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">13</span>), <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘author’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘yaxinhao’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘from’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘腾讯体育’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘is_valibale’</span>: <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">1</span>}]<br></code></pre></section><p style="letter-spacing: 2px;">这里很巧妙的利用了map函数，因为多条数据就可以进行迭代了，需要操作每条数据，这样就可以想到map函数</p><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;"><strong>接下来我们再用面向对象的方法来用python进行查询数据库</strong></p><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;"><br></p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); padding: 0.5em; display: block !important; word-wrap: normal !important; word-break: normal !important; white-space: pre !important; overflow: auto !important; background: rgb(40, 43, 46);"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 1</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">import</span> pymysql<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 2</span><span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">class</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">MysqlSearch</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; color: rgb(255, 152, 35); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">(object)</span>:</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 3</span> <span class="hljs-function" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">def</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">get_conn</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; color: rgb(255, 152, 35); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">(self)</span>:</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 4</span> <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘’’连接mysql数据库’’’</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 5</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">try</span>:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 6</span> self.conn = pymysql.connect(host=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘127.0.0.1’</span>,user=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘root’</span>,passwd=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘your password’</span>,port=<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">3306</span>,charset=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘utf8’</span>,db=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘news’</span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 7</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">except</span> pymysql.Error <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">as</span> e:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 8</span> print(e)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 9</span> print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘连接数据库失败’</span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">10</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">11</span> <span class="hljs-function" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">def</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">close_conn</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; color: rgb(255, 152, 35); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">(self)</span>:</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">12</span> <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘’’关闭数据库’’’</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">13</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">try</span>:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">14</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">if</span> self.conn:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">15</span> self.conn.close()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">16</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">except</span> pymysql.Error <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">as</span> e:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">17</span> print(e)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">18</span> print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘关闭数据库失败’</span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">19</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">20</span> <span class="hljs-function" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">def</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">get_one</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; color: rgb(255, 152, 35); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">(self)</span>:</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">21</span> <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘’’查询一条数据’’’</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">22</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">try</span>:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">23</span> <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 这个是连接数据库</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">24</span> self.get_conn()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">25</span> <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 查询语句</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">26</span> sql = <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘SELECT <em> FROM <code>new</code> WHERE <code>type</code>=%s’</em></span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">27</span> <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 这个光标用来执行sql语句</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">28</span> cursor = self.conn.cursor()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">29</span> cursor.execute(sql,(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘英超’</span>,))<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">30</span> new = cursor.fetchone()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">31</span> <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 返回一个字典，让用户可以按数据类型来获取数据</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">32</span> new_dict = dict(zip([x[<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">0</span>] <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">for</span> x <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">in</span> cursor.description],new))<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">33</span> <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 关闭cursor</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">34</span> cursor.close()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">35</span> self.close_conn()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">36</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">return</span> new_dict<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">37</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">except</span> AttributeError <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">as</span> e:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">38</span> print(e)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">39</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">return</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">None</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">40</span> <span class="hljs-function" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">def</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">get_all</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; color: rgb(255, 152, 35); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">(self)</span>:</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">41</span> <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘’’获取所有结果’’’</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">42</span> sql = <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘SELECT  FROM <code>new</code> ‘</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">43</span> self.get_conn()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">44</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">try</span>:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">45</span> cursor = self.conn.cursor()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">46</span> cursor.execute(sql)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">47</span> news = cursor.fetchall()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">48</span> <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 将数据转为字典，让用户根据键来查数据</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">49</span> news_list =list(map(<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">lambda</span> x:dict(zip([x[<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">0</span>] <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">for</span> x <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">in</span> cursor.description],[d <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">for</span> d <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">in</span> x])),news))<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">50</span> <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 这样也行,连续用两个列表生成式</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">51</span> news_list = [dict(zip([x[<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">0</span>] <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">for</span> x <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">in</span> cursor.description],row)) <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">for</span> row <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">in</span> news]<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">52</span> cursor.close()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">53</span> self.close_conn()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">54</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">return</span> news_list<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">55</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">except</span> AttributeError <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">as</span> e:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">56</span> print(e)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">57</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">return</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">None</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">58</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">59</span><span class="hljs-function" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">def</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">main</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; color: rgb(255, 152, 35); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">()</span>:</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">60</span> <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 获取一条数据</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">61</span> news = MysqlSearch()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">62</span> new = news.get_one()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">63</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">if</span> new:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">64</span> print(new)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">65</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">else</span>:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">66</span> print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘操作失败’</span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">67</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">68</span> <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 获取多条数据</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">69</span> news = MysqlSearch()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">70</span> rest = news.get_all()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">71</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">if</span> rest:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">72</span> print(rest)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">73</span> print(rest[<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">7</span>][<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘type’</span>],rest[<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">7</span>][<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘title’</span>])<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">74</span> print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘类型：{0},标题：{1}’</span>.format(rest[<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">12</span>][<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘type’</span>],rest[<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">12</span>][<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘title’</span>]))<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">75</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">for</span> row <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">in</span> rest:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">76</span> print(row)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">77</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">else</span>:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">78</span> print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘没有获取到数据’</span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">79</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">80</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">if</span> <strong>name</strong> == <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘<strong>main</strong>‘</span>:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">81</span> main()<br></code></pre></section><p style="letter-spacing: 2px;">这样就可以通过实例的方法来进行查询数据库了</p><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;">我们还可以根据页数来进行查询指定的数据数</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); padding: 0.5em; display: block !important; word-wrap: normal !important; word-break: normal !important; white-space: pre !important; overflow: auto !important; background: rgb(40, 43, 46);"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 1</span> <span class="hljs-function" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">def</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">get_more</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; color: rgb(255, 152, 35); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">(self,page,page_size)</span>:</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 2</span> <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘’’查多少页的多少条数据’’’</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 3</span> offset = (page<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">-1</span>)<em>page_size<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 4</span> sql = <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘SELECT </span></em> FROM <code>new</code> LIMIT %s,%s’<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 5</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">try</span>:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 6</span> self.get_conn()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 7</span> cursor = self.conn.cursor()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 8</span> cursor.execute(sql,(offset,page_size,))<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 9</span> news = [dict(zip([x[<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">0</span>] <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">for</span> x <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">in</span> cursor.description],new)) <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">for</span> new <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">in</span> cursor.fetchall()]<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">10</span> cursor.close()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">11</span> self.close_conn()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">12</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">return</span> news<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">13</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">except</span> AttributeError <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">as</span> e:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">14</span> print(e)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">15</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">return</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">None</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">16</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">17</span><span class="hljs-function" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">def</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">main</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; color: rgb(255, 152, 35); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">()</span>:</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">18</span> <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">#获取某页的数据</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">19</span> news = MysqlSearch()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">20</span> new = news.get_more(<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">3</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">5</span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">21</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">if</span> new:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">22</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">for</span> row <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">in</span> new:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">23</span> print(row)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">24</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">else</span>:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">25</span> print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘获取数据失败’</span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">26</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">27</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">if</span> <strong>name</strong> == <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘<strong>main</strong>‘</span>:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">28</span> main()<br></code></pre></section><p style="letter-spacing: 2px;">利用的是mysql的<strong><span style="line-height: inherit;">limit</span></strong><span style="line-height: inherit;">关键字，还有其他的，比如进行排序分组的感兴趣的可以自己尝试下</span></p><p style="letter-spacing: 2px;"><span style="line-height: inherit;"><br></span></p><p style="letter-spacing: 2px;"><span style="line-height: inherit;"></span></p><section class="editor"><section style="margin:20px auto 16px;text-align:center;"><section style="border-top-style: solid; border-top-width: 1px; border-top-color: rgb(137, 137, 137); box-sizing: border-box;"><section style="border: 1px solid rgb(137, 137, 137); height: 30px; width: 30px; border-radius: 50%; margin-left: 50px; display: block; text-align: left; margin-top: -15px; box-sizing: border-box; background-color: rgb(255, 255, 255);"><section style="height: 24px; width: 24px; line-height: 24px; border-radius: 50%; margin: 2px auto 0px; text-align: center; color: rgb(255, 255, 255); box-sizing: border-box; background-color: rgb(233, 131, 109);"><p style="line-height:1.5em;">3</p></section></section><section style="display: block; padding: 0px 8px; line-height: 24px; font-size: 18px; margin-top: -30px; text-align: center; box-sizing: border-box;"><section style="display: inline-block; padding: 0px 8px; box-sizing: border-box; background-color: rgb(254, 254, 254);"><p>增加数据到数据库</p></section></section></section></section></section><p style="letter-spacing: 2px;"><span style="line-height: inherit;"></span><br></p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); padding: 0.5em; display: block !important; word-wrap: normal !important; word-break: normal !important; white-space: pre !important; overflow: auto !important; background: rgb(40, 43, 46);"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 1</span> <span class="hljs-function" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">def</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">add_one</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; color: rgb(255, 152, 35); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">(self)</span>:</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 2</span> sql = <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘INSERT INTO <code>new</code>(<code>title</code>,<code>content</code>,<code>type</code>,<code>view_count</code>,<code>release_time</code>) VALUE(%s,%s,%s,%s,%s)’</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 3</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">try</span>:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 4</span> self.get_conn()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 5</span> cursor = self.conn.cursor()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 6</span> cursor.execute(sql, (<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘title’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘content’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘type’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘1111’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘2018-02-01’</span>))<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 7</span> cursor.execute(sql, (<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘标题’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘内容’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘类型’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘0000’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘2018-02-01’</span>))<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 8</span> <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 一定需要提交事务，要不不会显示，只会占位在数据库</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"> 9</span> self.conn.commit()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">10</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">return</span> <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">1</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">11</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">except</span> AttributeError <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">as</span> e:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">12</span> print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘Error:’</span>, e)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">13</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">return</span> <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">0</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">14</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">except</span> TypeError <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">as</span> e:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">15</span> print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘Error:’</span>, e)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">16</span> <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 发生错误还提交就是把执行正确的语句提交上去</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">17</span> <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># self.conn.commit()</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">18</span> <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"># 下面这个方法是发生异常就全部不能提交,但语句执行成功的就会占位</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">19</span> self.conn.rollback()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">20</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">return</span> <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">0</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">21</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">finally</span>:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">22</span> cursor.close()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">23</span> self.close_conn()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">24</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">25</span> <span class="hljs-function" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">def</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">main</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; color: rgb(255, 152, 35); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">()</span>:</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">26</span> news = OperateSQL()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">27</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">if</span> news.add_one():<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">28</span> print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘增加数据成功’</span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">29</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">else</span>:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">30</span> print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘发生异常，请检查！！！’</span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">31</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">32</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">if</span> <strong>name</strong> == <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">‘<strong>main</strong>‘</span>:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important; white-space: inherit !important;">33</span> main()<br></code></pre></section><p style="letter-spacing: 2px;">因为是增加数据，所以需要提交事务，这就需要用到<strong>cursor.commit()</strong>来进行提交，在增加数据后，如果不提交，数据库就不会显示。</p><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;">还有修改数据和删除数据就不贴出来了，只是把上面的sql变量的语句改成修改或者删除的语句就可以了，如果你还不会，建议练习下</p><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;"><br></p><section class="editor"><p><strong>END</strong></p></section><p style="letter-spacing: 2px;">代码我放在github了，网站为<a href="https://github.com/SergioJune/gongzhonghao_code，有兴趣的可以去看看，如果可以的话希望给个star哈！" _src="https://github.com/SergioJune/gongzhonghao_code，有兴趣的可以去看看，如果可以的话希望给个star哈！" target="_blank" rel="noopener">https://github.com/SergioJune/gongzhonghao_code，有兴趣的可以去看看，如果可以的话希望给个star哈！</a></p><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;">这篇文章只适合入门的，如果需要学习更多的话可以去查看pymysql的文档<a href="http://pymysql.readthedocs.io/en/latest/" target="_blank" rel="noopener">http://pymysql.readthedocs.io/en/latest/</a> 。</p><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px; text-align: center;"><img style="border-radius: 5px; border: 1px dashed rgb(168, 164, 171); box-shadow: rgba(0, 0, 0, 0.329412) 6px 6px 5px 0px; margin-bottom: 1.4px; visibility: visible !important; width: 111.297px !important;" src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802109804.png" height="auto" border="0" alt="1802109804.png" _src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802109804.png"></p><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px; text-align: center;"><span style="font-size: 14px;">日常学python</span></p><p style="letter-spacing: 2px;"><span style="font-size: 14px;"><br></span></p><p style="letter-spacing: 2px; text-align: center;"><span style="font-size: 14px;">一个专注于python的公众号</span></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p style=&quot;letter-spacing: 2px;&quot;&gt;首先祝大家新年快乐哈！学生的估计明天也要上课了，工作的估计早就去上班了，我也快要上课了，哈哈，新年这段时间一直没有写过文章，一直忙于跑亲戚和学习，感觉有点对不起关注我的粉丝。所以，今天决定抽空写一篇技术文章来给大家看
      
    
    </summary>
    
      <category term="python" scheme="http://sergiojune.com/categories/python/"/>
    
      <category term="数据库" scheme="http://sergiojune.com/categories/python/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://sergiojune.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>我爬取了37000条球迷评论，知道了这场比赛的重要信息</title>
    <link href="http://sergiojune.com/2018/08/07/%E6%88%91%E7%88%AC%E5%8F%96%E4%BA%8637000%E6%9D%A1%E7%90%83%E8%BF%B7%E8%AF%84%E8%AE%BA%EF%BC%8C%E7%9F%A5%E9%81%93%E4%BA%86%E8%BF%99%E5%9C%BA%E6%AF%94%E8%B5%9B%E7%9A%84%E9%87%8D%E8%A6%81%E4%BF%A1%E6%81%AF/"/>
    <id>http://sergiojune.com/2018/08/07/我爬取了37000条球迷评论，知道了这场比赛的重要信息/</id>
    <published>2018-08-07T00:43:41.976Z</published>
    <updated>2018-08-06T08:53:50.922Z</updated>
    
    <content type="html"><![CDATA[<section><h1 style="font-weight: bold; font-size: 16px; line-height: 1.6em;"></h1><section class="mpa-template" data-mpa-template-id="1198548" data-mpa-color="null" data-mpa-category="fav" style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><section style="word-break: normal !important;"><p style="margin-right: auto; margin-left: auto; padding-right: 5px; padding-left: 5px; max-width: 600px; word-wrap: normal; border-width: 1px; border-style: solid; border-color: rgb(95, 170, 255); font-family: 微软雅黑; font-size: 12px; border-radius: 2em; text-align: center; letter-spacing: 2px; word-break: normal !important;"><span style="color: rgb(255, 0, 0); word-break: normal !important;">这是日常学python的第18篇原创文章</span><br style="word-break: normal !important;"></p></section></section><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><br></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><strong style="word-break: normal !important;">这次用python爬虫爬点好玩的东西</strong></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><br></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">这两天看恰好有nba决赛，是球迷的你肯定不会错过的，更何况今年的西部决赛是火箭对战勇士，今年的火箭是很强的，因为没到关键时候总会有人站出来。当然，勇士也是挺强的，毕竟不能小看库里杜兰特等四大巨头。</p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><br></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">东部的决赛我就不太知道了，一直以为是凯尔特人会苦战骑士，谁知道缺了两大主力的凯尔特人还是很强，而且还打了骑士2：0，看来这次的骑士会是凶多吉少了，不知道凯尔特人会不会成功复仇，让我们拭目以待吧！</p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><br></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">有直播就肯定有评论，所以我想爬取下球迷评论，看看他们都在聊什么！</p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><br></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><strong style="word-break: normal !important;"><span style="font-size: 20px; word-break: normal !important;">准备工作</span></strong></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">需要用到的库：</p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">&nbsp; &nbsp; requests：用于网络请求</p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">&nbsp;&nbsp;&nbsp;&nbsp;jieba：用于分词<br style="word-break: normal !important;"></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">&nbsp;&nbsp;&nbsp;&nbsp;wordcloud：制作词云图<br style="word-break: normal !important;"></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">&nbsp;&nbsp;&nbsp;&nbsp;numpy：制作背景图片<br style="word-break: normal !important;"></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><br></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">词云背景图片：</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><img data-copyright="0" data-cropselx1="0" data-cropselx2="558" data-cropsely1="0" data-cropsely2="321" data-s="300,640" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicMYDKfP5R5OTlibqRibxgnbU6xXyL3fiaYsJXoKbTqsicicarpTVrAdRiaGdlxiazzOQNWicDvuo3EOQ8PFA/640" style="height: 625px; width: 558px; word-break: normal !important;" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicMYDKfP5R5OTlibqRibxgnbU6xXyL3fiaYsJXoKbTqsicicarpTVrAdRiaGdlxiazzOQNWicDvuo3EOQ8PFA/640"></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><br></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">上面的库都是可以直接用pip进行下载的，但是wordcloud会报错，报错如下：</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><img data-copyright="0" data-s="300,640" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicMYDKfP5R5OTlibqRibxgnbURS7Iyc18YMjJZgHyFTnoI8v7DUFD2UvOvvQj1R64spx1icfn4rgqLbw/640" style="word-break: normal !important;" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicMYDKfP5R5OTlibqRibxgnbURS7Iyc18YMjJZgHyFTnoI8v7DUFD2UvOvvQj1R64spx1icfn4rgqLbw/640"></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">我们需要去官网下载whl文件进行手动安装</p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">官网：<a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/" target="_blank" rel="noopener">https://www.lfd.uci.edu/~gohlke/pythonlibs/</a></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><br></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">然后找到对应自己安装的python版本进行下载</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><img data-s="300,640" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicMYDKfP5R5OTlibqRibxgnbUbCpXibED3H4WWdpuGRNNa5HWmHE5wGV7Z6PWXwxqMCHiau3QDO5ic7r5w/640" style="word-break: normal !important;" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicMYDKfP5R5OTlibqRibxgnbUbCpXibED3H4WWdpuGRNNa5HWmHE5wGV7Z6PWXwxqMCHiau3QDO5ic7r5w/640"></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">最后在命令行下安装即可</p><section data-mpa-preserve-tpl-color="t" data-mpa-template="t" class="mpa-template" mpa-preserve="t" style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; background-image: none; background-color: initial; word-break: normal !important;">pip install “文件路径+whl文件名”<br></pre></section><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><br></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><strong style="word-break: normal !important;">接下来寻找目标网页</strong></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><br></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">文字直播地址：<a href="https://www.zhibo8.cc/zhibo/nba/2018/0517123898.htm?redirect=zhibo" target="_blank" rel="noopener">https://www.zhibo8.cc/zhibo/nba/2018/0517123898.htm?redirect=zhibo</a></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><br></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">在这个网页通过抓包（按下f12）课知道下面这个链接是返回评论信息，而且是个json</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><img data-s="300,640" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicMYDKfP5R5OTlibqRibxgnbUMac5KzIeNF3FlabmBKKoDDs9cSNdzQGWrMjibjVqbJTIkzyNW1uvSjQ/640" style="word-break: normal !important;" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicMYDKfP5R5OTlibqRibxgnbUMac5KzIeNF3FlabmBKKoDDs9cSNdzQGWrMjibjVqbJTIkzyNW1uvSjQ/640"></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><img data-s="300,640" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicMYDKfP5R5OTlibqRibxgnbUaBxv3LdlfjPicjPmaEEicXGmx4XUicAVVHZficjjeRRmjOlPjptVCuGYag/640" style="word-break: normal !important;" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicMYDKfP5R5OTlibqRibxgnbUaBxv3LdlfjPicjPmaEEicXGmx4XUicAVVHZficjjeRRmjOlPjptVCuGYag/640"></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><br></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">链接为：<span style="color: rgb(34, 34, 34); word-break: normal !important;"><a href="https://cache.zhibo8.cc/json/" target="_blank" rel="noopener">https://cache.zhibo8.cc/json/</a><strong style="word-break: normal !important;">2018/nba/0517123898_384</strong>.htm?key=0.6512348313080727</span></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><br></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">通过多次分析知道上面加粗的是直播间的信息，后面的下划线之后的是评论的页数，最后的key参数是个随机数，带不带上进行请求都没有关系</p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><br></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">用代码来获取评论信息</p><section data-mpa-preserve-tpl-color="t" data-mpa-template="t" class="mpa-template" mpa-preserve="t" style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; background-image: none; background-color: initial; word-break: normal !important;"><code class="hljs-sublime" style="margin-right: 0.15em; margin-left: 0.15em; padding: 6px; border-radius: 4px; font-size: 0.85em; background: rgb(35, 36, 31); color: rgb(248, 248, 242); display: block; overflow-x: auto; white-space: nowrap; word-break: normal !important;"><span class="hljs-sublime-function" style="background: rgba(0, 0, 0, 0); display: inline; width: 185px; text-decoration-style: solid; text-decoration-color: rgb(248, 248, 242); word-break: normal !important;"><span class="hljs-sublime-keyword" style="color: rgb(249, 38, 114); background: rgba(0, 0, 0, 0); display: inline; width: 20px; text-decoration-style: solid; text-decoration-color: rgb(249, 38, 114); word-break: normal !important;">def</span>&nbsp;<span class="hljs-sublime-title" style="color: rgb(166, 226, 46); background: rgba(0, 0, 0, 0); display: inline; width: 66px; text-decoration-style: solid; text-decoration-color: rgb(166, 226, 46); word-break: normal !important;"><strong>get_json</strong></span><span class="hljs-sublime-params" style="background: rgba(0, 0, 0, 0); display: inline; width: 86px; text-decoration-style: solid; text-decoration-color: rgb(248, 248, 242); word-break: normal !important;">(self, index)</span>:</span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp;url =&nbsp;<span class="hljs-sublime-string" style="color: rgb(230, 219, 116); background: rgba(0, 0, 0, 0); display: inline; width: 528px; text-decoration-style: solid; text-decoration-color: rgb(230, 219, 116); word-break: normal !important;">‘<a href="https://cache.zhibo8.cc/json/2018/nba/0517123898_%d.htm?key=0.1355540028791382&#39;" target="_blank" rel="noopener">https://cache.zhibo8.cc/json/2018/nba/0517123898_%d.htm?key=0.1355540028791382&#39;</a></span>&nbsp;% index<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp;response = requests.get(url)<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-sublime-keyword" style="color: rgb(249, 38, 114); background: rgba(0, 0, 0, 0); display: inline; width: 13px; text-decoration-style: solid; text-decoration-color: rgb(249, 38, 114); word-break: normal !important;">if</span>&nbsp;response.status_code ==&nbsp;<span class="hljs-sublime-number" style="color: rgb(174, 129, 255); background: rgba(0, 0, 0, 0); display: inline; width: 19px; text-decoration-style: solid; text-decoration-color: rgb(174, 129, 255); word-break: normal !important;">200</span>:<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-sublime-keyword" style="color: rgb(249, 38, 114); background: rgba(0, 0, 0, 0); display: inline; width: 20px; text-decoration-style: solid; text-decoration-color: rgb(249, 38, 114); word-break: normal !important;">for</span>&nbsp;item&nbsp;<span class="hljs-sublime-keyword" style="color: rgb(249, 38, 114); background: rgba(0, 0, 0, 0); display: inline; width: 14px; text-decoration-style: solid; text-decoration-color: rgb(249, 38, 114); word-break: normal !important;">in</span>&nbsp;response.json():<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-sublime-comment" style="color: rgb(117, 113, 94); background: rgba(0, 0, 0, 0); display: inline; width: 62px; text-decoration-style: solid; text-decoration-color: rgb(117, 113, 94); word-break: normal !important;"># 写入文件</span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.write_file(item[<span class="hljs-sublime-string" style="color: rgb(230, 219, 116); background: rgba(0, 0, 0, 0); display: inline; width: 59px; text-decoration-style: solid; text-decoration-color: rgb(230, 219, 116); word-break: normal !important;">‘content’</span>])<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.num +=&nbsp;<span class="hljs-sublime-number" style="color: rgb(174, 129, 255); background: rgba(0, 0, 0, 0); display: inline; width: 6px; text-decoration-style: solid; text-decoration-color: rgb(174, 129, 255); word-break: normal !important;">1</span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-sublime-keyword" style="color: rgb(249, 38, 114); background: rgba(0, 0, 0, 0); display: inline; width: 40px; text-decoration-style: solid; text-decoration-color: rgb(249, 38, 114); word-break: normal !important;">return</span>&nbsp;<span class="hljs-sublime-number" style="color: rgb(174, 129, 255); background: rgba(0, 0, 0, 0); display: inline; width: 7px; text-decoration-style: solid; text-decoration-color: rgb(174, 129, 255); word-break: normal !important;">1</span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-sublime-keyword" style="color: rgb(249, 38, 114); background: rgba(0, 0, 0, 0); display: inline; width: 26px; text-decoration-style: solid; text-decoration-color: rgb(249, 38, 114); word-break: normal !important;">else</span>:<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-sublime-keyword" style="color: rgb(249, 38, 114); background: rgba(0, 0, 0, 0); display: inline; width: 40px; text-decoration-style: solid; text-decoration-color: rgb(249, 38, 114); word-break: normal !important;">return</span>&nbsp;<span class="hljs-sublime-number" style="color: rgb(174, 129, 255); background: rgba(0, 0, 0, 0); display: inline; width: 7px; text-decoration-style: solid; text-decoration-color: rgb(174, 129, 255); word-break: normal !important;">0</span></code></pre></section><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><br></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">评论信息有了，接着弄张词云图</p><section data-mpa-preserve-tpl-color="t" data-mpa-template="t" class="mpa-template" mpa-preserve="t" style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; background-image: none; background-color: initial; word-break: normal !important;"><code class="hljs-sublime" style="margin-right: 0.15em; margin-left: 0.15em; padding: 6px; border-radius: 4px; font-size: 0.85em; background: rgb(35, 36, 31); color: rgb(248, 248, 242); display: block; overflow-x: auto; white-space: nowrap; word-break: normal !important;"><span class="hljs-sublime-function" style="background: rgba(0, 0, 0, 0); display: inline; width: 171px; text-decoration-style: solid; text-decoration-color: rgb(248, 248, 242); word-break: normal !important;"><span class="hljs-sublime-keyword" style="color: rgb(249, 38, 114); background: rgba(0, 0, 0, 0); display: inline; width: 20px; text-decoration-style: solid; text-decoration-color: rgb(249, 38, 114); word-break: normal !important;">def</span>&nbsp;<span class="hljs-sublime-title" style="color: rgb(166, 226, 46); background: rgba(0, 0, 0, 0); display: inline; width: 99px; text-decoration-style: solid; text-decoration-color: rgb(166, 226, 46); word-break: normal !important;"><strong>get_wordcloud</strong></span><span class="hljs-sublime-params" style="background: rgba(0, 0, 0, 0); display: inline; width: 40px; text-decoration-style: solid; text-decoration-color: rgb(248, 248, 242); word-break: normal !important;">(self)</span>:</span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-sublime-keyword" style="color: rgb(249, 38, 114); background: rgba(0, 0, 0, 0); display: inline; width: 26px; text-decoration-style: solid; text-decoration-color: rgb(249, 38, 114); word-break: normal !important;">with</span>&nbsp;open(<span class="hljs-sublime-string" style="color: rgb(230, 219, 116); background: rgba(0, 0, 0, 0); display: inline; width: 92px; text-decoration-style: solid; text-decoration-color: rgb(230, 219, 116); word-break: normal !important;">‘comments.txt’</span>,&nbsp;<span class="hljs-sublime-string" style="color: rgb(230, 219, 116); background: rgba(0, 0, 0, 0); display: inline; width: 20px; text-decoration-style: solid; text-decoration-color: rgb(230, 219, 116); word-break: normal !important;">‘r’</span>, encoding=<span class="hljs-sublime-string" style="color: rgb(230, 219, 116); background: rgba(0, 0, 0, 0); display: inline; width: 47px; text-decoration-style: solid; text-decoration-color: rgb(230, 219, 116); word-break: normal !important;">‘utf-8’</span>)&nbsp;<span class="hljs-sublime-keyword" style="color: rgb(249, 38, 114); background: rgba(0, 0, 0, 0); display: inline; width: 13px; text-decoration-style: solid; text-decoration-color: rgb(249, 38, 114); word-break: normal !important;">as</span>&nbsp;comments:<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;text = comments.read() &nbsp;<span class="hljs-sublime-comment" style="color: rgb(117, 113, 94); background: rgba(0, 0, 0, 0); display: inline; width: 62px; text-decoration-style: solid; text-decoration-color: rgb(117, 113, 94); word-break: normal !important;"># 加载数据</span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;words =&nbsp;<span class="hljs-sublime-string" style="color: rgb(230, 219, 116); background: rgba(0, 0, 0, 0); display: inline; width: 20px; text-decoration-style: solid; text-decoration-color: rgb(230, 219, 116); word-break: normal !important;">‘ ‘</span>.join(jieba.cut(text, cut_all=<span class="hljs-sublime-keyword" style="color: rgb(249, 38, 114); background: rgba(0, 0, 0, 0); display: inline; width: 27px; text-decoration-style: solid; text-decoration-color: rgb(249, 38, 114); word-break: normal !important;">True</span>)) &nbsp;<span class="hljs-sublime-comment" style="color: rgb(117, 113, 94); background: rgba(0, 0, 0, 0); display: inline; width: 121px; text-decoration-style: solid; text-decoration-color: rgb(117, 113, 94); word-break: normal !important;"># 采用结巴全分词模式</span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;image = np.array(Image.open(<span class="hljs-sublime-string" style="color: rgb(230, 219, 116); background: rgba(0, 0, 0, 0); display: inline; width: 46px; text-decoration-style: solid; text-decoration-color: rgb(230, 219, 116); word-break: normal !important;">‘1.jpg’</span>)) &nbsp;<span class="hljs-sublime-comment" style="color: rgb(117, 113, 94); background: rgba(0, 0, 0, 0); display: inline; width: 61px; text-decoration-style: solid; text-decoration-color: rgb(117, 113, 94); word-break: normal !important;"># 背景图片</span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-sublime-comment" style="color: rgb(117, 113, 94); background: rgba(0, 0, 0, 0); display: inline; width: 73px; text-decoration-style: solid; text-decoration-color: rgb(117, 113, 94); word-break: normal !important;"># 初始化词云</span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;wc = WordCloud(font_path=<span class="hljs-sublime-string" style="color: rgb(230, 219, 116); background: rgba(0, 0, 0, 0); display: inline; width: 198px; text-decoration-style: solid; text-decoration-color: rgb(230, 219, 116); word-break: normal !important;">r’C:\Windows\Fonts\simkai.ttf’</span>,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background_color=<span class="hljs-sublime-string" style="color: rgb(230, 219, 116); background: rgba(0, 0, 0, 0); display: inline; width: 46px; text-decoration-style: solid; text-decoration-color: rgb(230, 219, 116); word-break: normal !important;">‘white’</span>, mask=image,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; max_font_size=<span class="hljs-sublime-number" style="color: rgb(174, 129, 255); background: rgba(0, 0, 0, 0); display: inline; width: 20px; text-decoration-style: solid; text-decoration-color: rgb(174, 129, 255); word-break: normal !important;">100</span>, max_words=<span class="hljs-sublime-number" style="color: rgb(174, 129, 255); background: rgba(0, 0, 0, 0); display: inline; width: 27px; text-decoration-style: solid; text-decoration-color: rgb(174, 129, 255); word-break: normal !important;">2000</span>)<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;wc.generate(words) &nbsp;<span class="hljs-sublime-comment" style="color: rgb(117, 113, 94); background: rgba(0, 0, 0, 0); display: inline; width: 61px; text-decoration-style: solid; text-decoration-color: rgb(117, 113, 94); word-break: normal !important;"># 生成词云</span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;wc.to_file(<span class="hljs-sublime-string" style="color: rgb(230, 219, 116); background: rgba(0, 0, 0, 0); display: inline; width: 59px; text-decoration-style: solid; text-decoration-color: rgb(230, 219, 116); word-break: normal !important;">‘img.png’</span>) &nbsp;<span class="hljs-sublime-comment" style="color: rgb(117, 113, 94); background: rgba(0, 0, 0, 0); display: inline; width: 61px; text-decoration-style: solid; text-decoration-color: rgb(117, 113, 94); word-break: normal !important;"># 生成图片</span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;image_file = Image.open(<span class="hljs-sublime-string" style="color: rgb(230, 219, 116); background: rgba(0, 0, 0, 0); display: inline; width: 60px; text-decoration-style: solid; text-decoration-color: rgb(230, 219, 116); word-break: normal !important;">‘img.png’</span>) &nbsp;<span class="hljs-sublime-comment" style="color: rgb(117, 113, 94); background: rgba(0, 0, 0, 0); display: inline; width: 62px; text-decoration-style: solid; text-decoration-color: rgb(117, 113, 94); word-break: normal !important;"># 打开图片</span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;image_file.show()</code></pre></section><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><br></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">好了，代码完成，看下效果：</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><img data-copyright="0" data-s="300,640" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicMYDKfP5R5OTlibqRibxgnbUicbxJ0gFljMa2bKLJRic6zib2wFglvAyDxuXlWnhhnemDtdsN0icK1eIQg/640" style="word-break: normal !important;" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicMYDKfP5R5OTlibqRibxgnbUicbxJ0gFljMa2bKLJRic6zib2wFglvAyDxuXlWnhhnemDtdsN0icK1eIQg/640"></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">利用词云图一眼就可以看出球迷都在评论什么了，因为我爬取的是火箭主场对战勇士的第二场比赛，肯定讨论最多的就是勇士火箭了，紧接的就是杜兰特了，死亡之神，这场的杜兰特超神拿了38分还是输给了火箭，自然而然就是讨论他最多了。还有就是这场站出来的塔克，三分6中5，还破了个人季后赛的最高得分，讨论他也是很正常的事。还有一个很显眼的就是第三节，很多人都认为勇士是“勇三疯”，以为这场比赛勇士会在第三节爆发吧？其实这赛季的火箭第三节也是很强的，并不比勇士弱。</p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><br></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">完整代码已经上传到我的github上了，如果需要的话可以自行查看，如果觉得程序不错的话希望可以给个star哈！</p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">github：<a href="https://github.com/SergioJune/gongzhonghao_code" target="_blank" rel="noopener">https://github.com/SergioJune/gongzhonghao_code</a></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><br></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><span style="font-size: 20px; word-break: normal !important;"><strong style="word-break: normal !important;">写在最后</strong></span></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">如果这篇文章对你用的话，希望不要吝啬你的点赞哈！点赞和转发就是对我的最大支持，这样才有动力输出质量高的原创文章。</p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><br></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">「球迷的话点个赞？我看看有多少个是球迷」</p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><br></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">推荐文章：</p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;">&lt;a href=”<a href="http://mp.weixin.qq.com/s" target="_blank" rel="noopener">http://mp.weixin.qq.com/s</a>?biz=MzU0NzY0NzQyNw==&amp;mid=2247483774&amp;idx=1&amp;sn=769c06f2cf532b645d9cb9ba63b52b81&amp;chksm=fb4a7bd2cc3df2c47851c244db40b5cddccf2e21381d7742e39b9db2bdee0f12b83f870814bf&amp;scene=21#wechat_redirect” target=”_blank” _href=”<a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483774&amp;idx=1&amp;sn=769c06f2cf532b645d9cb9ba63b52b81&amp;chksm=fb4a7bd2cc3df2c47851c244db40b5cddccf2e21381d7742e39b9db2bdee0f12b83f870814bf&amp;scene=21#wechat_redirect&quot;" target="_blank" rel="noopener">http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483774&amp;idx=1&amp;sn=769c06f2cf532b645d9cb9ba63b52b81&amp;chksm=fb4a7bd2cc3df2c47851c244db40b5cddccf2e21381d7742e39b9db2bdee0f12b83f870814bf&amp;scene=21#wechat_redirect&quot;</a> style=”word-break: normal !important;”&gt;使用requests+BeautifulSoup的简单爬虫练习<br style="word-break: normal !important;"></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483720&amp;idx=1&amp;sn=4567a228e1bcca2dcb4c23f0feac39b3&amp;chksm=fb4a7be4cc3df2f234c5b7102f107e72df42a24575dd5d735fb203dddf02ca6e2d3b2b41ce28&amp;scene=21#wechat_redirect" target="_blank" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483720&amp;idx=1&amp;sn=4567a228e1bcca2dcb4c23f0feac39b3&amp;chksm=fb4a7be4cc3df2f234c5b7102f107e72df42a24575dd5d735fb203dddf02ca6e2d3b2b41ce28&amp;scene=21#wechat_redirect" style="word-break: normal !important;">python爬虫常用库之requests详解</a><br style="word-break: normal !important;"></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><br></p><p style="margin-right: 2em; margin-left: 2em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1.5px; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; text-align: center; word-break: normal !important;"><img data-copyright="0" data-s="300,640" src="https://mmbiz.qpic.cn/mmbiz_jpg/BIPpxEvceWicMYDKfP5R5OTlibqRibxgnbUibICOVW7ziao5o8nCHYeqSJXIC0TKxqQgHibtaBKl4waRIZVPD4DaE8cg/640" style="width: 145.078px; word-break: normal !important;" _src="https://mmbiz.qpic.cn/mmbiz_jpg/BIPpxEvceWicMYDKfP5R5OTlibqRibxgnbUibICOVW7ziao5o8nCHYeqSJXIC0TKxqQgHibtaBKl4waRIZVPD4DaE8cg/640"></p><p style="padding-right: 5px; padding-left: 5px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; color: rgb(51, 51, 51); text-align: center; word-break: normal !important;"><span style="font-size: 14px; word-break: normal !important;">日常学python</span></p><p style="padding-right: 5px; padding-left: 5px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; color: rgb(51, 51, 51); text-align: center; word-break: normal !important;"><span style="font-size: 14px; word-break: normal !important;">代码不止bug，还有美和乐趣</span></p><p><br></p>​</section>]]></content>
    
    <summary type="html">
    
      
      
        &lt;section&gt;&lt;h1 style=&quot;font-weight: bold; font-size: 16px; line-height: 1.6em;&quot;&gt;&lt;/h1&gt;&lt;section class=&quot;mpa-template&quot; data-mpa-template-id=&quot;119854
      
    
    </summary>
    
      <category term="python" scheme="http://sergiojune.com/categories/python/"/>
    
    
      <category term="爬虫" scheme="http://sergiojune.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="requestst" scheme="http://sergiojune.com/tags/requestst/"/>
    
  </entry>
  
  <entry>
    <title>谈谈如何抓取ajax动态网站</title>
    <link href="http://sergiojune.com/2018/08/07/%E8%B0%88%E8%B0%88%E5%A6%82%E4%BD%95%E6%8A%93%E5%8F%96ajax%E5%8A%A8%E6%80%81%E7%BD%91%E7%AB%99/"/>
    <id>http://sergiojune.com/2018/08/07/谈谈如何抓取ajax动态网站/</id>
    <published>2018-08-07T00:43:41.950Z</published>
    <updated>2018-08-06T08:53:50.894Z</updated>
    
    <content type="html"><![CDATA[<p data-mpa-powered-by="yiban.io" style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">什么是ajax呢，简单来说，就是加载一个网页完毕之后，有些信息你你还是看不到，需要你点击某个按钮才能看到数据，或者有些网页是有很多页数据的，而你在点击下一页的时候，网页的url地址没有变化，但是内容变了，这些都可以说是ajax。如果还听不懂，我给你看看百度百科的解释吧，下面就是。</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"></p><blockquote style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><p style="word-break: normal !important;">Ajax 即“Asynchronous&nbsp;Javascript&nbsp;And&nbsp;XML”（异步 JavaScript 和 XML），是指一种创建交互式网页应用的网页开发技术。</p><p style="word-break: normal !important;">Ajax = 异步&nbsp;JavaScript&nbsp;和&nbsp;XML（标准通用标记语言的子集）。</p><p style="word-break: normal !important;">Ajax 是一种用于创建快速动态网页的技术。</p><p style="word-break: normal !important;">Ajax 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。&nbsp;[</p><p style="word-break: normal !important;">通过在后台与服务器进行少量数据交换，Ajax 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。</p><p style="word-break: normal !important;">传统的网页（不使用 Ajax）如果需要更新内容，必须重载整个网页页面。</p></blockquote><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">下面说下例子，我抓取过的ajax网页最难的就是网易云音乐的评论，感兴趣的可以看看<a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483673&amp;idx=1&amp;sn=6c89eb9474d2076afb6405a9fd972e4f&amp;chksm=fb4a7bb5cc3df2a3ca3235ebe8bddf635839e5fd5a1b998b08dae521d449ee4388ae6ed7bbda&amp;scene=21#wechat_redirect" target="_blank" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483673&amp;idx=1&amp;sn=6c89eb9474d2076afb6405a9fd972e4f&amp;chksm=fb4a7bb5cc3df2a3ca3235ebe8bddf635839e5fd5a1b998b08dae521d449ee4388ae6ed7bbda&amp;scene=21#wechat_redirect" style="word-break: normal !important;">利用python爬取网易云音乐，并把数据存入mysql</a></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">这里的评论就是ajax加载的，其他的那个抓今日头条妹子图片的也算是ajax加载的，只不过我把它简单化了。还有很多，就不说了，说下我今天要说的ajax网站吧！</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><span style="font-size: 18px; word-break: normal !important;"><strong style="word-break: normal !important;"><a href="http://www.kfc.com.cn/kfccda/storelist/index.aspx" target="_blank" rel="noopener">http://www.kfc.com.cn/kfccda/storelist/index.aspx</a></strong></span></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><span style="font-size: 16px; word-break: normal !important;">这个是肯德基的门面信息</span></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><img data-s="300,640" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWibUCcSJxOmJHdMtqcKAJ9KOo6GA2uibDZJLTTkia8yelFORKAPu2xq7VtMa9LdgljuWLMt6VJUrk2ww/640" style="word-break: normal !important;" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWibUCcSJxOmJHdMtqcKAJ9KOo6GA2uibDZJLTTkia8yelFORKAPu2xq7VtMa9LdgljuWLMt6VJUrk2ww/640"></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><span style="font-size: 16px; word-break: normal !important;">这里有很多页数据，每一页的数据都是ajax加载的。如果你直接用python请求上面那个url的话，估计什么数据都拿不到，不信的话可以试试哈。这时候，我们照常打开开发者工具。先把所有请求清楚，把持续日志打上勾，然后点击下一页，你会看到</span></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><img data-s="300,640" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWibUCcSJxOmJHdMtqcKAJ9KO8ujDSZnYNN9ziaFKfU6sY8sfmtC8675bgRCIFiavOl5JNlVsFib8I4PRA/640" style="word-break: normal !important;" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWibUCcSJxOmJHdMtqcKAJ9KO8ujDSZnYNN9ziaFKfU6sY8sfmtC8675bgRCIFiavOl5JNlVsFib8I4PRA/640"></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><span style="font-size: 16px; word-break: normal !important;"></span>上面那个请求就是ajax请求的网页，里面就会有我们需要的数据，我们看看是什么样的请求</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><img data-s="300,640" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWibUCcSJxOmJHdMtqcKAJ9KO4EvNAuDAp1aeOgpEkQiccUpGH4LULXLibgzqvjNxCZ4PxR0NFMaSjmqw/640" style="word-break: normal !important;" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWibUCcSJxOmJHdMtqcKAJ9KO4EvNAuDAp1aeOgpEkQiccUpGH4LULXLibgzqvjNxCZ4PxR0NFMaSjmqw/640"></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">是个post请求，请求成功状态码为200，请求url上面也有了，下面的from data就是我们需要post的数据，很容易就可以猜到pageIndex就是页数，所以我们可以改变这个值来进行翻页。</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">这个网页就分析完了，这样就是解决ajax动态网页了，是不是觉得很简单，其实不是的，只是这个网页比较简单的，因为表单(from data)的数据并没有进行加密，如果进行加密的话估计你的找js文件看看参数是怎样加密的了，这就是我之前写的网易云音乐评论的爬取。看这些混淆的js寻找加密方法的话有时会让你很头痛，所以经常有人会选择用selenium这些来进行爬取，但是用这些会使爬虫的性能降低，所以这个方法在工作里是不允许的。所以必须学会怎样应对这些ajax。</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">贴下代码</p><section data-mpa-preserve-tpl-color="t" data-mpa-template="t" class="mpa-template" mpa-preserve="t" style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; background-image: none; background-color: initial; word-break: normal !important;"><code class="hljs-default" style="margin-right: 0.15em; margin-left: 0.15em; padding: 6px; border-radius: 4px; font-size: 0.85em; background: rgb(40, 44, 52); color: rgb(171, 178, 191); display: block; overflow-x: auto; white-space: nowrap; word-break: normal !important;"><span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 39px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">import</span>&nbsp;requests<br style="word-break: normal !important;">page =&nbsp;<span class="hljs-default-number" style="color: rgb(209, 154, 102); background: rgba(0, 0, 0, 0); display: inline; width: 7px; text-decoration-style: solid; text-decoration-color: rgb(209, 154, 102); word-break: normal !important;">1</span><br style="word-break: normal !important;"><span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 33px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">while</span>&nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 27px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">True</span>:<br style="word-break: normal !important;">&nbsp; &nbsp;url =&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 409px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘<a href="http://www.kfc.com.cn/kfccda/ashx/GetStoreList.ashx?op=cname&#39;" target="_blank" rel="noopener">http://www.kfc.com.cn/kfccda/ashx/GetStoreList.ashx?op=cname&#39;</a></span><br style="word-break: normal !important;">&nbsp; &nbsp;data = {<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 46px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘cname’</span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 38px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘广州’</span>,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 33px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘pid’</span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 13px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘’</span>,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 73px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘pageIndex’</span>: page,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 66px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘pageSize’</span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 27px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘10’</span><br style="word-break: normal !important;">&nbsp; &nbsp;}<br style="word-break: normal !important;">&nbsp; &nbsp;response = requests.post(url, data=data)<br style="word-break: normal !important;">&nbsp; &nbsp;print(response.json())<br style="word-break: normal !important;">&nbsp; &nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 13px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">if</span>&nbsp;response.json().get(<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 53px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘Table1’</span>,&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 13px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘’</span>):<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp;page +=&nbsp;<span class="hljs-default-number" style="color: rgb(209, 154, 102); background: rgba(0, 0, 0, 0); display: inline; width: 7px; text-decoration-style: solid; text-decoration-color: rgb(209, 154, 102); word-break: normal !important;">1</span><br style="word-break: normal !important;">&nbsp; &nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 27px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">else</span>:<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 33px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">break</span></code></pre></section><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">可以看到去掉from data，不用十行代码就可以把数据都爬下来了，所以说这个网站适合练手，大家可以去试试。</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><span style="font-size: 20px; word-break: normal !important;"><strong style="word-break: normal !important;">写在最后</strong></span></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">下篇文章我会写下复杂点的ajax请求，这个网站</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><strong style="word-break: normal !important;"><a href="http://drugs.dxy.cn/" target="_blank" rel="noopener">http://drugs.dxy.cn/</a><span style="font-size: 20px; word-break: normal !important;"><br style="word-break: normal !important;"></span></strong></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">不知道有多少人想看，想看的话点个赞吧！或者你可以自己先试试哈</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><br></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">推荐文章</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483804&amp;idx=1&amp;sn=899c55927facc551c23712921fc631ca&amp;chksm=fb4a7b30cc3df2268d2be3a93ee53839c419dc7427aecbebcbf678c57cefae27167c3be7630b&amp;scene=21#wechat_redirect" target="_blank" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483804&amp;idx=1&amp;sn=899c55927facc551c23712921fc631ca&amp;chksm=fb4a7b30cc3df2268d2be3a93ee53839c419dc7427aecbebcbf678c57cefae27167c3be7630b&amp;scene=21#wechat_redirect" style="word-break: normal !important;">如何爬取asp动态网页？搞定可恶的动态参数，这一文告诉你！</a></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483673&amp;idx=1&amp;sn=6c89eb9474d2076afb6405a9fd972e4f&amp;chksm=fb4a7bb5cc3df2a3ca3235ebe8bddf635839e5fd5a1b998b08dae521d449ee4388ae6ed7bbda&amp;scene=21#wechat_redirect" target="_blank" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483673&amp;idx=1&amp;sn=6c89eb9474d2076afb6405a9fd972e4f&amp;chksm=fb4a7bb5cc3df2a3ca3235ebe8bddf635839e5fd5a1b998b08dae521d449ee4388ae6ed7bbda&amp;scene=21#wechat_redirect" style="word-break: normal !important;">利用python爬取网易云音乐，并把数据存入mysql</a><br style="word-break: normal !important;"></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><br></p><p style="font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; color: rgb(51, 51, 51); word-break: normal !important; text-align: center;"><img data-copyright="0" data-s="300,640" src="https://mmbiz.qpic.cn/mmbiz_jpg/BIPpxEvceWicMYDKfP5R5OTlibqRibxgnbUibICOVW7ziao5o8nCHYeqSJXIC0TKxqQgHibtaBKl4waRIZVPD4DaE8cg/640" width="26%" style="word-break: normal !important; visibility: visible !important; width: 173.672px !important;" _src="https://mmbiz.qpic.cn/mmbiz_jpg/BIPpxEvceWicMYDKfP5R5OTlibqRibxgnbUibICOVW7ziao5o8nCHYeqSJXIC0TKxqQgHibtaBKl4waRIZVPD4DaE8cg/640"></p><p style="padding-right: 5px; padding-left: 5px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; color: rgb(51, 51, 51); word-break: normal !important; text-align: center;"><span style="font-size: 14px; word-break: normal !important;">日常学python</span></p><p style="padding-right: 5px; padding-left: 5px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; color: rgb(51, 51, 51); word-break: normal !important; text-align: center;"><span style="font-size: 14px; word-break: normal !important;">代码不止bug，还有美和乐趣</span></p><p><br></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p data-mpa-powered-by=&quot;yiban.io&quot; style=&quot;margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: &#39;Helvetica Neue&#39;, Helvetica,
      
    
    </summary>
    
      <category term="python" scheme="http://sergiojune.com/categories/python/"/>
    
    
      <category term="爬虫" scheme="http://sergiojune.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="requestst" scheme="http://sergiojune.com/tags/requestst/"/>
    
  </entry>
  
  <entry>
    <title>说说数据库</title>
    <link href="http://sergiojune.com/2018/08/07/%E8%AF%B4%E8%AF%B4%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://sergiojune.com/2018/08/07/说说数据库/</id>
    <published>2018-08-07T00:43:41.883Z</published>
    <updated>2018-08-06T08:53:50.900Z</updated>
    
    <content type="html"><![CDATA[<section class="96edit" label="Powered by bj.96weixin.com" style="font-size:16px;"><section class="editor"><section style="padding: 5px; box-sizing: border-box;"><section class="96wx-bgc" style="width: 12px; height: 12px; float: left; color: rgb(255, 255, 255); border-radius: 50%; box-sizing: border-box; background-color: rgb(239, 112, 96);"></section><section class="96wx-bgc" style="width: 12px; height: 12px; float: right; color: rgb(255, 255, 255); border-radius: 50%; box-sizing: border-box; background-color: rgb(239, 112, 96);"></section><section style="clear: both;"></section><section style="padding: 0px 10px; margin: -5px; box-sizing: border-box;"><section style="border: 2px dotted rgb(193, 193, 193); padding: 10px; box-sizing: border-box;"><p>爬了数据，只能放在记事本上？小的数据还是可以的，但是当你遇到较多的数据，放在记事本上就不是很好了，这时就需要用到数据库来存储了，那我们今天的主题就是入门数据库，在入门数据库之前，我首先介绍下什么是数据库。<br></p></section></section><section class="96wx-bgc" style="width: 12px; height: 12px; float: left; color: rgb(255, 255, 255); border-radius: 50%; box-sizing: border-box; background-color: rgb(239, 112, 96);"></section><section class="96wx-bgc" style="width: 12px; height: 12px; float: right; color: rgb(255, 255, 255); border-radius: 50%; box-sizing: border-box; background-color: rgb(239, 112, 96);"></section><section style="clear: both;"></section></section></section><p><br></p><section class="editor"><section style="margin:10px auto;"><section style="width: 100%; font-size: 18px; height: 40px; line-height: 40px; border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: rgb(30, 28, 28); text-align: center; box-sizing: border-box;" data-width="100%">进入正题</section><section style="width: 100%; margin-top: 1px; border-top-style: solid; border-top-width: 1px; border-top-color: rgb(30, 28, 28); box-sizing: border-box;" data-width="100%"></section></section></section><p><br></p><section class="editor"><section style="margin:20px auto 16px;text-align:center;"><section style="border-top-style: solid; border-top-width: 1px; border-top-color: rgb(137, 137, 137); box-sizing: border-box;"><section style="border: 1px solid rgb(137, 137, 137); height: 30px; width: 30px; border-radius: 50%; margin-left: 50px; display: block; text-align: left; margin-top: -15px; box-sizing: border-box; background-color: rgb(255, 255, 255);"><section style="height: 24px; width: 24px; line-height: 24px; border-radius: 50%; margin: 2px auto 0px; text-align: center; color: rgb(255, 255, 255); box-sizing: border-box; background-color: rgb(233, 131, 109);"><p style="line-height:1.5em;"><span style="color: #FFFFFF;vertical-align:middle;" class="autonum">1</span></p></section></section><section style="display: block; padding: 0px 8px; line-height: 24px; margin-top: -30px; text-align: center; box-sizing: border-box;"><section style="display: inline-block; padding: 0px 8px; box-sizing: border-box; background-color: rgb(254, 254, 254);"><p style=""><span style="font-family:微软雅黑">什么是数据库</span></p></section></section></section></section></section><p>在这里我把百度百科的贴出来给大家哈，我也不好解释，毕竟自己页没有到那种境界</p><p><br></p><blockquote><p style="font-family: arial, 'pingfang sc', stheiti, simsun, sans-serif; text-indent: 2em; line-height: 25px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal;">数据库(Database)是按照 数据结构来组织、 存储和管理数据的仓库，它产生于距今六十多年前，随着 信息技术和市场的发展，特别是二十世纪九十年代以后， 数据管理不再仅仅是存储和管理数据，而转变成用户所需要的各种数据管理的方式。数据库有很多种 类型，从最简单的存储有各种数据的 表格到能够进行海量 数据存储的大型&nbsp;数据库系统都在各个方面得到了广泛的应用。</p><p style="font-family: arial, 'pingfang sc', stheiti, simsun, sans-serif; text-indent: 2em; line-height: 25px; color: rgb(51, 51, 51); font-size: 14px; white-space: normal;">在信息化社会，充分有效地管理和利用各类信息资源，是进行科学研究和决策管理的前提条件。数据库技术是管理信息系统、办公自动化系统、决策支持系统等各类信息系统的核心部分，是进行科学研究和决策管理的重要技术手段。</p></blockquote><p><br></p><p>数据有两种，一种是<strong>关系型数据库</strong>，另一种是<strong>非关系型数据</strong>。关系型数据就是以行和列的形式存储数据，以便于用户理解，这一系列的行和列称为表，一组表组成了数据库。表与表之间的数据记录有关系。非关系型数据，也叫<strong>NoSQL</strong>，就是Not only SQL。其性能是基于键值对的，可以想象成表中的主键和值的对应关系，而且不需要经过SQL层的解析，所以性能会非常高，而可扩展性同样也是基于键值对的，数据之间没有耦合性，所以非常容易水平扩展。比如我们即将学到的mongodb和redis都是这类型的数据库。</p><p><br></p><section class="editor"><section style="margin:20px auto 16px;text-align:center;"><section style="border-top-style: solid; border-top-width: 1px; border-top-color: rgb(137, 137, 137); box-sizing: border-box;"><section style="border: 1px solid rgb(137, 137, 137); height: 30px; width: 30px; border-radius: 50%; margin-left: 50px; display: block; text-align: left; margin-top: -15px; box-sizing: border-box; background-color: rgb(255, 255, 255);"><section style="height: 24px; width: 24px; line-height: 24px; border-radius: 50%; margin: 2px auto 0px; text-align: center; color: rgb(255, 255, 255); box-sizing: border-box; background-color: rgb(233, 131, 109);"><p style="line-height:1.5em;">2</p></section></section><section style="display: block; padding: 0px 8px; line-height: 24px; font-size: 18px; margin-top: -30px; text-align: center; box-sizing: border-box;"><section style="display: inline-block; padding: 0px 8px; box-sizing: border-box; background-color: rgb(254, 254, 254);"><p>学习数据库<br></p></section></section></section></section></section><p>今天我们先学习下关系型数据库的一种MySQL。<br></p><p>那么我们就要先下载好mysql这个工具，网站我直接贴出来了<strong><a href="https://dev.mysql.com/downloads/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/</a></strong>，在上面选择自己的版本进行下载安装即可。或者去下载<strong>XAMPP</strong>集成包，里面也有MySQL程序。百度即有下载。</p><p><br></p><p>下载了数据库，还要下载个可视化工具，这样可以清储看到数据内容。可视化工具是Navicat，下载地址为<strong></strong><a href="https://www.navicat.com/en/products。注册码的百度找就有了，土豪请无视吧，下载安装后打开是这样的" _src="https://www.navicat.com/en/products。注册码的百度找就有了，土豪请无视吧，下载安装后打开是这样的" target="_blank" rel="noopener">https://www.navicat.com/en/products。注册码的百度找就有了，土豪请无视吧，下载安装后打开是这样的</a></p><p> <img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802138307.png" title="1802138307.png" _src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802138307.png" alt=""></p><p><br></p><p>然后点击连接，先连接一个本地数据库吧，<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802134386.png" title="1802134386.png" _src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802134386.png" alt=""></p><p><br></p><p>填好上面的数据，注意上面只需填连接名和密码即可，本地连接的ip，端口和名字都是固定的，无需自己写了，然后点击测试看看，<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802136111.png" title="1802136111.png" _src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802136111.png" alt=""></p><p><br></p><p>连接成功就可以按下确定了，这样就成功连接到你的本地数据库了。</p><p><br></p><p>注意：密码是自己设置的，可以点击mysql的这个来设置，如下图<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802132973.png" title="1802132973.png" _src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802132973.png" alt=""></p><p><br></p><section class="editor"><section style="border: 0px none; box-sizing: border-box;"><section style="margin: 10px 0px; padding: 0px; text-align: center; font-family: 微软雅黑; box-sizing: border-box;"><section class="96wx-bdlc 96wx-bdrc" style="margin: 0px; padding: 0px; height: 24px; border-right-width: 1px; border-right-style: solid; border-right-color: rgb(245, 189, 209); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(245, 189, 209); box-sizing: border-box;"></section><section class="96wx-bdbc" style="margin-top: -12px; margin-bottom: -12px; padding: 0px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(245, 189, 209); box-sizing: border-box;"></section><section style="margin: 0px; padding: 0px; display: inline-block; box-sizing: border-box;"><section class="96wx-bdrc" style="margin: 0px; padding: 0px; border-right-width: 15px; border-right-style: solid; border-right-color: rgb(245, 189, 209); border-top-width: 12px; border-top-style: solid; border-top-color: transparent; border-bottom-width: 12px; border-bottom-style: solid; border-bottom-color: transparent; height: 0px; width: 0px; float: left; box-sizing: border-box;"></section><section class="96wx-bgc" style="margin: 0px; padding: 0px; height: 24px; min-width: 4em; color: rgb(255, 255, 255); line-height: 24px; float: left; box-sizing: border-box; background-color: rgb(245, 189, 209);"><span style="color:inherit; font-size:12px">END</span></section><section class="96wx-bdlc" style="margin: 0px; padding: 0px; border-left-width: 15px; border-left-style: solid; border-left-color: rgb(245, 189, 209); border-top-width: 12px; border-top-style: solid; border-top-color: transparent; height: 0px; width: 0px; float: left; border-bottom-width: 12px; border-bottom-style: solid; border-bottom-color: transparent; box-sizing: border-box;"></section></section></section></section></section><p>最后，你可以先自己在可视化工具尝试建立自己的第一个数据库看看，不会也没关系，我在明天继续更新mysql的相关基础语法。</p><p><br></p><p>​<br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p></section>]]></content>
    
    <summary type="html">
    
      
      
        &lt;section class=&quot;96edit&quot; label=&quot;Powered by bj.96weixin.com&quot; style=&quot;font-size:16px;&quot;&gt;&lt;section class=&quot;editor&quot;&gt;&lt;section style=&quot;padding: 5px; box
      
    
    </summary>
    
      <category term="数据库" scheme="http://sergiojune.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://sergiojune.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>使用requests+BeautifulSoup的简单爬虫练习</title>
    <link href="http://sergiojune.com/2018/08/07/%E4%BD%BF%E7%94%A8requests+BeautifulSoup%E7%9A%84%E7%AE%80%E5%8D%95%E7%88%AC%E8%99%AB%E7%BB%83%E4%B9%A0/"/>
    <id>http://sergiojune.com/2018/08/07/使用requests+BeautifulSoup的简单爬虫练习/</id>
    <published>2018-08-07T00:43:41.851Z</published>
    <updated>2018-08-06T08:53:50.914Z</updated>
    
    <content type="html"><![CDATA[<section class="_editor" data-mpa-powered-by="yiban.io" style="max-width: 100%; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><section class="_editor" style="max-width: 100%; word-break: normal !important;"><p class="_brush" style="margin-right: auto; margin-left: auto; max-width: 600px; word-wrap: normal; border-width: 1px; border-style: solid; border-color: rgb(95, 170, 255); font-family: 微软雅黑; font-size: 12px; border-radius: 2em; text-align: center; word-break: normal !important;"><span style="color: rgb(255, 0, 0); word-break: normal !important;">这是日常学python的第17篇原创文章</span></p></section><p style="word-break: normal !important;">上篇文章说了BeautifulSoup库之后，今篇文章就是利用上篇的知识来爬取我们今天的主题网站：<strong style="word-break: normal !important;">猫眼电影top100。</strong>这个网站也挺容易的，所以大家可以先自己爬取下，遇到问题再来看下这篇文章哈。</p><p style="word-break: normal !important;"><br></p><p style="word-break: normal !important;">这篇文章主要是练习而已，别无用处，大佬请绕道哈！</p><p style="word-break: normal !important;"><br></p><p style="word-break: normal !important;"><strong style="word-break: normal !important;">1、本文用到的库及网站</strong><br style="word-break: normal !important;"></p><ul class=" list-paddingleft-2" style="width: 530.094px; word-break: normal !important; margin: 0px; padding: 0px 0px 0px 30px;"><li><section class="_editor" style="max-width: 100%; word-break: normal !important;"><p style="word-break: normal !important;">requests</p></section></li><li><section class="_editor" style="max-width: 100%; word-break: normal !important;"><p style="word-break: normal !important;">BeautifulSoup</p></section></li><li><section class="_editor" style="max-width: 100%; word-break: normal !important;"><p style="word-break: normal !important;">目标网站：<a href="http://maoyan.com/board/4" target="_blank" rel="noopener">http://maoyan.com/board/4</a></p></section></li></ul><section class="_editor" style="max-width: 100%; word-break: normal !important;"><p style="word-break: normal !important;"><br></p><p style="word-break: normal !important;"><strong style="word-break: normal !important;">2、分析目标网站</strong></p><p style="word-break: normal !important;"><br></p><p style="word-break: normal !important;"><img data-s="300,640" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicDiadOvZOTyZumFhG1UNmJcGSSsCZQibiauzZicXFFiaj6TzCwibCy11wKJbVgAqOuGKRnkkoqQKAq5mrQ/0?wx_fmt=png" data-copyright="0" style="word-break: normal !important;" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicDiadOvZOTyZumFhG1UNmJcGSSsCZQibiauzZicXFFiaj6TzCwibCy11wKJbVgAqOuGKRnkkoqQKAq5mrQ/0?wx_fmt=png"></p><p style="word-break: normal !important;">很容易找到我们想要的信息，上面的5的箭头都是我们想要的信息，分别是电影图片地址、电影名字、主演、上演时间和评分。内容有了，接下来就是获取下一页的链接。</p><p style="word-break: normal !important;"><br></p><p style="word-break: normal !important;"><img src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicDiadOvZOTyZumFhG1UNmJcYp39udvAUYTHdqH75PGRaM4k8oyCC0qZGaErLYPibibSCgCjQfMLvDhw/0?wx_fmt=png" title="1523015535292275.png" alt="image.png" class="js_catchremoteimageerror" data-cropselx1="0" data-cropselx2="497" data-cropsely1="0" data-cropsely2="326" data-copyright="0" style="height: 251px; width: 558px; word-break: normal !important;" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicDiadOvZOTyZumFhG1UNmJcYp39udvAUYTHdqH75PGRaM4k8oyCC0qZGaErLYPibibSCgCjQfMLvDhw/0?wx_fmt=png"></p><p style="word-break: normal !important;">这里有两种方法，第一种就是在首页获取所有页的链接，第二种方法就是获取每个页面的下一页的链接。在这里由于只是给了部分页面的链接出来，所以我们获取的是下一页的链接，这样子方便点。</p><p style="word-break: normal !important;"><br></p><p style="word-break: normal !important;">好了，分析完毕，接下来代码撸起。</p><p style="word-break: normal !important;"><strong style="word-break: normal !important;">3.敲代码</strong></p><p style="word-break: normal !important;">什么都不管，立即来个get请求</p><p style="word-break: normal !important;"><br></p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; padding: 0.5em; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: #a9b7c6; background: #282b2e; word-wrap: normal !important; word-break: normal !important; display: block !important; overflow: auto !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: #f82375; word-wrap: inherit !important; word-break: inherit !important;">import</span> requests<br style="word-break: normal !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: #f82375; word-wrap: inherit !important; word-break: inherit !important;">from</span> bs4 <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: #f82375; word-wrap: inherit !important; word-break: inherit !important;">import</span> BeautifulSoup<br style="word-break: normal !important;"><br style="word-break: normal !important;">url_start = <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: #eedc70; word-wrap: inherit !important; word-break: inherit !important;">‘<a href="http://maoyan.com/board/4&#39;" target="_blank" rel="noopener">http://maoyan.com/board/4&#39;</a></span><br style="word-break: normal !important;">response = requests.get(url_start)<br style="word-break: normal !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: #f82375; word-wrap: inherit !important; word-break: inherit !important;">if</span> response.status_code == <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: #ae87fa; word-wrap: inherit !important; word-break: inherit !important;">200</span>:<br style="word-break: normal !important;"> &nbsp; &nbsp;soup = BeautifulSoup(response.text, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: #eedc70; word-wrap: inherit !important; word-break: inherit !important;">‘lxml’</span>)<br style="word-break: normal !important;">print(response.text)<br style="word-break: normal !important;"></code></pre></section><p style="word-break: normal !important;"><br></p><p style="word-break: normal !important;">输出结果：</p><p style="word-break: normal !important;"><br></p><p style="word-break: normal !important;"><img src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicDiadOvZOTyZumFhG1UNmJc0TSCzbhONjIfgrakjHwjSVAKFH1c067raJDybylib0qkoQRAmvjEXfg/0?wx_fmt=png" title="1523016215745434.png" alt="image.png" class="js_catchremoteimageerror" data-cropselx1="0" data-cropselx2="497" data-cropsely1="0" data-cropsely2="326" data-copyright="0" style="height: 254px; width: 558px; word-break: normal !important;" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicDiadOvZOTyZumFhG1UNmJc0TSCzbhONjIfgrakjHwjSVAKFH1c067raJDybylib0qkoQRAmvjEXfg/0?wx_fmt=png"></p><p style="word-break: normal !important;">惊不惊喜，意不意外？如果你经常玩爬虫的，这个就见怪不怪了，我们被反爬了。我们试下加个请求头试试。</p><p style="word-break: normal !important;"><br></p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; padding: 0.5em; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: #a9b7c6; background: #282b2e; word-wrap: normal !important; word-break: normal !important; display: block !important; overflow: auto !important;">url_start = <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: #eedc70; word-wrap: inherit !important; word-break: inherit !important;">‘<a href="http://maoyan.com/board/4&#39;" target="_blank" rel="noopener">http://maoyan.com/board/4&#39;</a></span><br style="word-break: normal !important;">headers = {<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: #eedc70; word-wrap: inherit !important; word-break: inherit !important;">‘User-Agent’</span>:<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: #eedc70; word-wrap: inherit !important; word-break: inherit !important;">‘Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36’</span>}<br style="word-break: normal !important;">response = requests.get(url_start, headers=headers)<br style="word-break: normal !important;"></code></pre></section><p style="word-break: normal !important;"><br></p><p style="word-break: normal !important;">这样就可以正常返回了，因为一般的网站都会在请求头上加个反爬的，所以遇到了反爬也不要着急，加个请求头试试？</p><p style="word-break: normal !important;"><br></p><p style="word-break: normal !important;">接下来用BeautifulSoupL来获取内容</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; padding: 0.5em; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: #a9b7c6; background: #282b2e; word-wrap: normal !important; word-break: normal !important; display: block !important; overflow: auto !important;">imgs = soup.select(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: #eedc70; word-wrap: inherit !important; word-break: inherit !important;">‘dd .board-img’</span>) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: #808080; word-wrap: inherit !important; word-break: inherit !important;"># 这是获取图片链接</span><br style="word-break: normal !important;">titles = soup.select(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: #eedc70; word-wrap: inherit !important; word-break: inherit !important;">‘dd .board-item-main .name’</span>) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: #808080; word-wrap: inherit !important; word-break: inherit !important;"># 这是获取电影名字</span><br style="word-break: normal !important;">starses = soup.select(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: #eedc70; word-wrap: inherit !important; word-break: inherit !important;">‘dd .board-item-main .movie-item-info .star’</span>) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: #808080; word-wrap: inherit !important; word-break: inherit !important;"># 这是获取电影主演</span><br style="word-break: normal !important;">times = soup.select(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: #eedc70; word-wrap: inherit !important; word-break: inherit !important;">‘dd .board-item-main .movie-item-info .releasetime’</span>) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: #808080; word-wrap: inherit !important; word-break: inherit !important;"># 这是获取电影上映时间</span><br style="word-break: normal !important;">scores = soup.select(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: #eedc70; word-wrap: inherit !important; word-break: inherit !important;">‘dd .board-item-main .score-num’</span>) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: #808080; word-wrap: inherit !important; word-break: inherit !important;"># 这是获取评分</span><br style="word-break: normal !important;"></code></pre></section><p style="word-break: normal !important;"><br></p><p style="word-break: normal !important;">这里每个获取的语句都包含了每个不同电影的信息，这样就不能和正则那样一次把每个电影的信息都在同一个字符里面了。就比如我获取的图片，一个语句获取的是这个页面的所有电影图片的链接，我们存储的时候就要分别取出来了。这里我用到的是for循环0到9把相同的坐标的信息存进同一个字典里面。</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; line-height: inherit; word-break: normal !important;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; padding: 0.5em; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; background: #282b2e; word-wrap: normal !important; word-break: normal !important; display: block !important; overflow: auto !important;"><span style="color: #a9b7c6; word-break: normal !important;">films = [] &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: #808080; word-wrap: inherit !important; word-break: inherit !important;"># 存储一个页面的所有电影信息</span><br style="word-break: normal !important;"> &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: #f82375; word-wrap: inherit !important; word-break: inherit !important;">for</span> x <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: #f82375; word-wrap: inherit !important; word-break: inherit !important;">in</span> range(<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: #ae87fa; word-wrap: inherit !important; word-break: inherit !important;">0</span>, </span><span style="color: #ae87fa; word-break: normal !important;">10</span><span style="color: #a9b7c6; word-break: normal !important;">):<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="hljs-comment" style="color: #808080; font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;"># 这个是获取属性的链接</span><span style="color: #a9b7c6; word-break: normal !important;"><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;img = imgs[x][</span><span class="hljs-string" style="color: #eedc70; font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">‘data-src’</span><span style="color: #a9b7c6; word-break: normal !important;">]<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="hljs-comment" style="color: #808080; font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;"># 下面的都是获取标签的内容并去掉两端空格</span><span style="color: #a9b7c6; word-break: normal !important;"><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;title = titles[x].get_text().strip()<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;stars = starses[x].get_text().strip()[</span><span class="hljs-number" style="color: #ae87fa; font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">3</span><span style="color: #a9b7c6; word-break: normal !important;">:] &nbsp;</span><span class="hljs-comment" style="color: #808080; font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;"># 使用切片是去掉主演二字</span><span style="color: #a9b7c6; word-break: normal !important;"><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;time = times[x].get_text().strip()[</span><span class="hljs-number" style="color: #ae87fa; font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">5</span><span style="color: #a9b7c6; word-break: normal !important;">:] &nbsp;</span><span class="hljs-comment" style="color: #808080; font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;"># 使用切片是去掉上映时间二字</span><span style="color: #a9b7c6; word-break: normal !important;"><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;score = scores[x].get_text().strip()<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;film = {</span><span class="hljs-string" style="color: #eedc70; font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">‘title’</span><span style="color: #a9b7c6; word-break: normal !important;">: title</span><span style="color: #a9b7c6; word-break: normal !important;">, </span><span class="hljs-string" style="color: #eedc70; font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">‘img’</span><span style="color: #a9b7c6; word-break: normal !important;">: img, </span><span class="hljs-string" style="color: #eedc70; font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">‘stars’</span><span style="color: #a9b7c6; word-break: normal !important;">: stars, </span><span class="hljs-string" style="color: #eedc70; font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">‘time’</span><span style="color: #a9b7c6; word-break: normal !important;">: time, </span><span class="hljs-string" style="color: #eedc70; font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">‘score’</span><span style="color: #a9b7c6; word-break: normal !important;">: score}<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;films.append(film)<br style="word-break: normal !important;"></span></code></pre></section><p style="word-break: normal !important;"><br></p><p style="word-break: normal !important;">接下来就是获取每一页的链接</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; padding: 0.5em; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: #a9b7c6; background: #282b2e; word-wrap: normal !important; word-break: normal !important; display: block !important; overflow: auto !important;">pages = soup.select(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: #eedc70; word-wrap: inherit !important; word-break: inherit !important;">‘.list-pager li a’</span>) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: #808080; word-wrap: inherit !important; word-break: inherit !important;"># 可以看到下一页的链接在最后一个a标签</span><br style="word-break: normal !important;"> &nbsp; &nbsp;page = pages[len(pages)<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: #ae87fa; word-wrap: inherit !important; word-break: inherit !important;">-1</span>][<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: #eedc70; word-wrap: inherit !important; word-break: inherit !important;">‘href’</span>]<br style="word-break: normal !important;"></code></pre></section><p style="word-break: normal !important;"><br></p><p style="word-break: normal !important;">后面的就简单了，就是利用循环把所有页面的内容都去取出来就可以了，代码就不贴出来了。</p><p style="word-break: normal !important;"><br></p><p style="word-break: normal !important;"><strong style="word-break: normal !important;">写在最后</strong></p><p style="word-break: normal !important;">这个就是BeautifulSoup库的小练习，用到昨天的内容不多，只是用到了选择器部分和获取文本内容和属性部分，感觉还是正则比较好用点哈，我一个正则就可以获取每个电影的详细内容了，如下:</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; padding: 0.5em; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: #a9b7c6; background: #282b2e; word-wrap: normal !important; word-break: normal !important; display: block !important; overflow: auto !important;">&lt;dd&gt;.<em>?board-index.</em>?&gt;([\d]{<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: #ae87fa; word-wrap: inherit !important; word-break: inherit !important;">1</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: #ae87fa; word-wrap: inherit !important; word-break: inherit !important;">3</span>})&lt;/i&gt;.<em>?title=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: #eedc70; word-wrap: inherit !important; word-break: inherit !important;">“(.</span></em>?)”.<em>?<span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: #f82375; word-wrap: inherit !important; word-break: inherit !important;">class</span>=”<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: #a5da2d; word-wrap: inherit !important; word-break: inherit !important;">star</span>“&gt;<span class="hljs-params" style="font-size: inherit; line-height: inherit; color: #ff9823; word-wrap: inherit !important; word-break: inherit !important;">(.</span></span></em>?)&lt;/<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: #a5da2d; word-wrap: inherit !important; word-break: inherit !important;">p</span>&gt;.<em>?<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: #a5da2d; word-wrap: inherit !important; word-break: inherit !important;">class</span>=”<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: #a5da2d; word-wrap: inherit !important; word-break: inherit !important;">releasetime</span>“&gt;<span class="hljs-params" style="font-size: inherit; line-height: inherit; color: #ff9823; word-wrap: inherit !important; word-break: inherit !important;">(.</span></em>?)&lt;/<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: #a5da2d; word-wrap: inherit !important; word-break: inherit !important;">p</span>&gt;.<em>?<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: #a5da2d; word-wrap: inherit !important; word-break: inherit !important;">class</span>=”<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: #a5da2d; word-wrap: inherit !important; word-break: inherit !important;">integer</span>“&gt;<span class="hljs-params" style="font-size: inherit; line-height: inherit; color: #ff9823; word-wrap: inherit !important; word-break: inherit !important;">(.</span></em>?)&lt;/<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: #a5da2d; word-wrap: inherit !important; word-break: inherit !important;">i</span>&gt;.<em>?<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: #a5da2d; word-wrap: inherit !important; word-break: inherit !important;">class</span>=”<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: #a5da2d; word-wrap: inherit !important; word-break: inherit !important;">fraction</span>“&gt;<span class="hljs-params" style="font-size: inherit; line-height: inherit; color: #ff9823; word-wrap: inherit !important; word-break: inherit !important;">(.</span></em>?)&lt;/<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: #a5da2d; word-wrap: inherit !important; word-break: inherit !important;">i</span>&gt;<br style="word-break: normal !important;"></code></pre></section><p style="word-break: normal !important;"><br></p><p style="word-break: normal !important;">还需要用到个匹配模式哈：<strong style="word-break: normal !important;">re.S</strong>就可以了。所以本人推荐使用正则表达式哈。</p><p style="word-break: normal !important;"><br></p><p style="word-break: normal !important;">需要完整代码的请查看我的github哈！</p><p style="word-break: normal !important;">github：<a href="https://github.com/SergioJune/gongzhonghao_code/blob/master/python3_spider/index.py" _src="https://github.com/SergioJune/gongzhonghao_code/blob/master/python3_spider/index.py" _href="https://github.com/SergioJune/gongzhonghao_code/blob/master/python3_spider/index.py" style="word-break: normal !important;" target="_blank" rel="noopener">https://github.com/SergioJune/gongzhonghao_code/blob/master/python3_spider/index.py</a></p><p style="word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">如果这篇文章对你有用，点个赞，转个发如何？</p><section style="word-break: normal !important;"><p style="padding-right: 5px; padding-left: 5px; letter-spacing: 2px; word-break: normal !important;"><br></p><section style="padding-right: 8px; padding-left: 8px; height: 35px; display: inline-block; border-top: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); border-bottom: 1px solid rgb(0, 0, 0); font-weight: bold; line-height: 35px; vertical-align: middle; word-break: normal !important; box-sizing: border-box;">MORE</section><section style="padding-right: 8px; padding-left: 8px; height: 35px; display: inline-block; border-top: 1px solid rgb(0, 0, 0); border-bottom: 1px solid rgb(0, 0, 0); line-height: 35px; vertical-align: middle; word-break: normal !important; box-sizing: border-box;">延伸阅读</section><p style="word-break: normal !important;"><br></p><section style="padding-right: 15px; padding-left: 15px; line-height: 2em; word-break: normal !important; box-sizing: border-box;"><p style="padding-right: 5px; padding-left: 5px; letter-spacing: 2px; word-break: normal !important;"><span style="text-decoration-line: underline; word-break: normal !important;">◐◑<a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483760&amp;idx=1&amp;sn=3e08dbc95596839abe1c84752453415f&amp;chksm=fb4a7bdccc3df2cae9f3b4df5b410017b72d62a4c26a70d8d7afb4294024928bc5d53572368a&amp;scene=21#wechat_redirect" target="_blank" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483760&amp;idx=1&amp;sn=3e08dbc95596839abe1c84752453415f&amp;chksm=fb4a7bdccc3df2cae9f3b4df5b410017b72d62a4c26a70d8d7afb4294024928bc5d53572368a&amp;scene=21#wechat_redirect" style="word-break: normal !important;">爬取《The Hitchhiker’s Guide to Python!》python进阶书并制成pdf</a><span style="color: #4f81bd; word-break: normal !important;"></span></span></p><p style="padding-right: 5px; padding-left: 5px; letter-spacing: 2px; word-break: normal !important;"><span style="text-decoration-line: underline; word-break: normal !important;">◐◑&nbsp;<a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483766&amp;idx=1&amp;sn=7c7a237e8fda8e0c7085740034b81e8e&amp;chksm=fb4a7bdacc3df2cc04cd32fa6f58f7dfe2e2e829e7709676f1fa6b1846cf7ceb3ef60fcb2e3e&amp;scene=21#wechat_redirect" target="_blank" style="word-break: normal !important;" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483766&amp;idx=1&amp;sn=7c7a237e8fda8e0c7085740034b81e8e&amp;chksm=fb4a7bdacc3df2cc04cd32fa6f58f7dfe2e2e829e7709676f1fa6b1846cf7ceb3ef60fcb2e3e&amp;scene=21#wechat_redirect">python爬虫常用库之BeautifulSoup详解</a></span></p><p style="padding-right: 5px; padding-left: 5px; letter-spacing: 2px; word-break: normal !important;"><span style="text-decoration-line: underline; word-break: normal !important;">◐◑&nbsp;<a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483740&amp;idx=1&amp;sn=9c62ebf1b4d284159a0500f060cb4527&amp;chksm=fb4a7bf0cc3df2e6d504c4a32d9a6e51828b5961b31ef6da81fcab8cf1b6df64bb8a99894fe3&amp;scene=21#wechat_redirect" target="_blank" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483740&amp;idx=1&amp;sn=9c62ebf1b4d284159a0500f060cb4527&amp;chksm=fb4a7bf0cc3df2e6d504c4a32d9a6e51828b5961b31ef6da81fcab8cf1b6df64bb8a99894fe3&amp;scene=21#wechat_redirect" style="word-break: normal !important;">老司机带你用python来爬取妹子图</a></span></p><p style="word-break: normal !important;"><br></p><p style="word-break: normal !important;"><br></p></section></section><p style="padding-right: 5px; padding-left: 5px; text-align: center; letter-spacing: 2px; word-break: normal !important;"><img border="0" height="auto" title="undefined" width="111.297px" _width="111.297px" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWic7kTqqWcYlc513VaLSgic5P9bIBwdybZBf6KpAX6nhqeHkC0cW2KfQgGCiaREUD1uxt6nLhSO2bWsg/640" data-fail="0" style="margin-bottom: 1.4px; border-radius: 5px; border-width: 1px; border-style: dashed; border-color: #a8a4ab; box-shadow: rgba(0, 0, 0, 0.33) 6px 6px 5px 0px; word-break: normal !important; visibility: visible !important; width: 111.297px !important;" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWic7kTqqWcYlc513VaLSgic5P9bIBwdybZBf6KpAX6nhqeHkC0cW2KfQgGCiaREUD1uxt6nLhSO2bWsg/640"><br style="word-break: normal !important;"></p><p style="text-align: center; word-break: normal !important;"><br></p><p style="padding-right: 5px; padding-left: 5px; text-align: center; letter-spacing: 2px; word-break: normal !important;"><span style="font-size: 14px; word-break: normal !important;">日常学python</span></p><p style="padding-right: 5px; padding-left: 5px; text-align: center; letter-spacing: 2px; word-break: normal !important;"><span style="font-size: 14px; word-break: normal !important;">代码不止bug，还有美和乐趣</span></p><div><span style="font-size: 14px; word-break: normal !important;"><br></span></div></section><section class="_editor" style="max-width: 100%; word-break: normal !important;"></section></section>]]></content>
    
    <summary type="html">
    
      
      
        &lt;section class=&quot;_editor&quot; data-mpa-powered-by=&quot;yiban.io&quot; style=&quot;max-width: 100%; color: rgb(0, 0, 0); font-family: &#39;Helvetica Neue&#39;, Helvetic
      
    
    </summary>
    
      <category term="python" scheme="http://sergiojune.com/categories/python/"/>
    
    
      <category term="爬虫" scheme="http://sergiojune.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="requestst" scheme="http://sergiojune.com/tags/requestst/"/>
    
  </entry>
  
  <entry>
    <title>入门mysql数据库</title>
    <link href="http://sergiojune.com/2018/08/07/%E5%85%A5%E9%97%A8mysql%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://sergiojune.com/2018/08/07/入门mysql数据库/</id>
    <published>2018-08-07T00:43:41.806Z</published>
    <updated>2018-08-06T08:53:50.889Z</updated>
    
    <content type="html"><![CDATA[<section class="96edit" label="Powered by bj.96weixin.com" style="font-size:16px;"><section class="editor"><section style="padding: 5px; box-sizing: border-box;"><section class="96wx-bgc" style="width: 12px; height: 12px; float: left; color: rgb(255, 255, 255); border-radius: 50%; box-sizing: border-box; background-color: rgb(239, 112, 96);"></section><section class="96wx-bgc" style="width: 12px; height: 12px; float: right; color: rgb(255, 255, 255); border-radius: 50%; box-sizing: border-box; background-color: rgb(239, 112, 96);"></section><section style="clear: both;"></section><section style="padding: 0px 10px; margin: -5px; box-sizing: border-box;"><section style="border: 2px dotted rgb(193, 193, 193); padding: 10px; box-sizing: border-box;"><p>上篇文章简单说了下数据库，并教了怎样安装mysql工具和可视化工具，不知道你现在安装好了没？那今天我们继续说mysql，今天说下mysql语句。</p></section></section><section class="96wx-bgc" style="width: 12px; height: 12px; float: left; color: rgb(255, 255, 255); border-radius: 50%; box-sizing: border-box; background-color: rgb(239, 112, 96);"></section><section class="96wx-bgc" style="width: 12px; height: 12px; float: right; color: rgb(255, 255, 255); border-radius: 50%; box-sizing: border-box; background-color: rgb(239, 112, 96);"></section><section style="clear: both;"></section></section></section><section class="editor"><section style="margin:10px auto;"><section style="width: 100%; font-size: 18px; height: 40px; line-height: 40px; border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: rgb(30, 28, 28); text-align: center; box-sizing: border-box;" data-width="100%">进入正题</section><section style="width: 100%; margin-top: 1px; border-top-style: solid; border-top-width: 1px; border-top-color: rgb(30, 28, 28); box-sizing: border-box;" data-width="100%"></section></section></section><p><br></p><p>mysql语句分为两种，一种是<strong>DDL</strong>，就是数据定义语句，比如那些CREATE,ALTER。另一种是<strong>DML</strong>，就是数据管理语句，比如增删改查，我所说的就是DML，那么开始吧！<br></p><p><br></p><section class="editor"><section style="margin: 10px auto; padding: 2px; box-sizing: border-box;"><section style="width: 60px;height: 40px;text-align: center;font-size: 2em;color: rgb(255, 255, 255);float: left;line-height: 40px;background: linear-gradient(-45deg, transparent 14.14px, rgb(139,183,72) 0px) right bottom / 50% 50% no-repeat, linear-gradient(45deg, transparent 14.14px, rgb(139,183,72) 0px) left bottom / 50% 50% no-repeat, linear-gradient(135deg, transparent 14.14px, rgb(139,183,72) 0px) left top / 50% 50% no-repeat, linear-gradient(-135deg, transparent 14.14px, rgb(139,183,72) 0px) right top / 50% 50% no-repeat;"><section class="autonum">1</section></section><section style="word-wrap: break-word; border-bottom-width: 2px; border-bottom-style: dashed; border-bottom-color: rgb(128, 177, 53); min-height: 36px; display: inline-block; line-height: 36px; margin-top: 0px; margin-left: 10px; box-sizing: border-box;"><span style="color: #80B135; font-size: 18px; margin-top: 0px; display: inline-block;">创建并使用数据库</span></section></section></section><p>我们先打开navicat可视化管理工具，连接好我们的本地数据库<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802149596.png" title="1802149596.png" alt=""></p><p><br></p><p>然后点击查询，进行写我们的mysql语句<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802147751.png" title="1802147751.png" alt=""></p><p><br></p><p>那么正式开始创建数据库并使用<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802145264.png" title="1802145264.png" alt=""></p><p><br></p><p>这里我创建了个school的数据库，并使用了他。运行语句可以直接点上面的运行，也可以这样<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802144356.png" title="1802144356.png" alt=""></p><p><br></p><p><strong>注意：</strong>那个数据库的引号是个<strong>反引号</strong>，在tab键的上方，还有mysql的注释是<strong>两个划线再加一个空格</strong>。语句结束后最好加个 <strong>;</strong> 来结束</p><p><br></p><p>在这里我们也可以看看我们已有的数据库<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802142086.png" title="1802142086.png" alt=""></p><p><br></p><p>上面成功创建后你将会在左侧看到这个数据库，这样就成功了。<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802142969.png" title="1802142969.png" alt=""></p><p><br></p><section class="editor"><section style="margin: 10px auto; padding: 2px; box-sizing: border-box;"><section style="width: 60px;height: 40px;text-align: center;font-size: 2em;color: rgb(255, 255, 255);float: left;line-height: 40px;background: linear-gradient(-45deg, transparent 14.14px, rgb(139,183,72) 0px) right bottom / 50% 50% no-repeat, linear-gradient(45deg, transparent 14.14px, rgb(139,183,72) 0px) left bottom / 50% 50% no-repeat, linear-gradient(135deg, transparent 14.14px, rgb(139,183,72) 0px) left top / 50% 50% no-repeat, linear-gradient(-135deg, transparent 14.14px, rgb(139,183,72) 0px) right top / 50% 50% no-repeat;"><section class="autonum">2</section></section><section style="word-wrap: break-word; border-bottom-width: 2px; border-bottom-style: dashed; border-bottom-color: rgb(128, 177, 53); min-height: 36px; display: inline-block; line-height: 36px; margin-top: 0px; margin-left: 10px; box-sizing: border-box;"><span style="color: #80B135; font-size: 18px; margin-top: 0px; display: inline-block;">进行建表</span></section></section></section><p><br></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802142620.png" title="1802142620.png" alt=""></p><p>上面创建了一个student的表格，并且有id，name，sex，age，address和in_school这几个栏位，其中id是自增的，用了<strong>AUTO_INCREMENT</strong>来声明的。<strong>NOT NULL</strong> 就是代表该栏位不能为空，<strong>NULL</strong>就是相反的。而INT,CHAR这些是数据类型，mysql的数据类型有int,char,varchar(括号里的是自定义长度),datetime等。那么，接下来点击运行，<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802147631.png" title="1802147631.png" alt=""></p><p><br></p><p>结果报了错，说我没有主键，那我们可以在id栏位加上主键声明<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802147578.png" title="1802147578.png" alt=""></p><p><br></p><p>再次运行，就成功了，你点开数据库，你会看到这个<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802144513.png" title="1802144513.png" alt=""></p><p><br></p><section class="editor"><section style="margin: 10px auto; padding: 2px; box-sizing: border-box;"><section style="width: 60px;height: 40px;text-align: center;font-size: 2em;color: rgb(255, 255, 255);float: left;line-height: 40px;background: linear-gradient(-45deg, transparent 14.14px, rgb(139,183,72) 0px) right bottom / 50% 50% no-repeat, linear-gradient(45deg, transparent 14.14px, rgb(139,183,72) 0px) left bottom / 50% 50% no-repeat, linear-gradient(135deg, transparent 14.14px, rgb(139,183,72) 0px) left top / 50% 50% no-repeat, linear-gradient(-135deg, transparent 14.14px, rgb(139,183,72) 0px) right top / 50% 50% no-repeat;"><section class="autonum">3</section></section><section style="word-wrap: break-word; border-bottom-width: 2px; border-bottom-style: dashed; border-bottom-color: rgb(128, 177, 53); min-height: 36px; display: inline-block; line-height: 36px; margin-top: 0px; margin-left: 10px; box-sizing: border-box;"><span style="color: #80B135; font-size: 18px; margin-top: 0px; display: inline-block;">进行增删改查操作</span></section></section></section><p><strong>1).往数据库添加数据</strong></p><p>格式为：INSERT INTO <code>tablename</code> VALUE(v1,v2,v3,…),如下：<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802144236.png" title="1802144236.png" alt=""></p><p><br></p><p>这是往students表中添加数据，VALUE后的括号填的<strong>值需要对应刚才你创建表时候的栏位</strong>，要不会报错。但是如果每个都需要这样岂不是很麻烦？不怕。</p><p>若是只想填几个栏位，也可以这样填<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802147720.png" title="1802147720.png" alt=""></p><p><br></p><p>这里是在表名加个你需要填的栏位即可，后面的数据也要记得一 一对应，还有的就是，那些是<strong>NOT NULL 的必须要填</strong>，否则也会报错。</p><p>添加了数据之后效果如下图<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802145784.png" title="1802145784.png" alt=""></p><p><br></p><p>还有一个问题就是，可不可以一次性添加多个数据？答案是肯定可以。想一次性添加多个数据时，只需要把<strong>VALUE改成VALUES</strong>即可，然后每个数据用逗号隔开，如下：<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802141170.png" title="1802141170.png" alt=""></p><p><br></p><p><strong>2).查询表格中的数据</strong></p><p>最简单的格式为：SELECT data FROM tablename</p><p>查询students表格的所有数据</p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802146925.png" title="1802146925.png" alt=""></p><p><br></p><p><strong>*</strong> 是代表所有数据，实际开发中并不会这样查询，因为会影响效率。我们可以指定某一栏位进行查询，如下<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802143225.png" title="1802143225.png" alt=""></p><p><br></p><p>这样代表只查name和sex这两个栏位的。</p><p><br></p><p>我们还可以按条件来进行查询，比如只查询性别为女的，嘻嘻<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802142965.png" title="1802142965.png" alt=""></p><p><br></p><p>这样就查到了性别为女的数据，可以看到，<strong>WHERE</strong>后面跟的就是条件</p><p><br></p><p>我们还可以将结果进行排序<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802143100.png" title="1802143100.png" alt=""></p><p><br></p><p>这里可以看到他是按照id来倒序来排的，<strong>ORDER BY </strong>后面跟的是排序条件，而那个<strong>DESC</strong>是倒序，默认是顺序，为<strong>ASC</strong>。</p><p><br></p><p>查询还不止这些，比如还可以指定偏移数来查询多少数据，如下<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802141906.png" title="1802141906.png" alt=""></p><p><br></p><p>这里是查询年龄大于19岁的学生，并且按照id来降序来排，查询了第一页的3条数据。其中<strong>LIMIT</strong>就是指定查询多少页的多少数据。上述的 <strong>1 </strong>代表的是偏移数， 而<strong> 3 </strong>就是代表数据数，所有表示的是偏移一个数据来查下面的三个数据。</p><p><br></p><p>其实，查询是有一条很长的表达式的，如下：</p><p><br></p><p><strong>SELECT</strong> data<strong> FROM </strong>tablename<strong> WHERE </strong>condition<strong> GROUP BY </strong>con <strong> HAVING </strong>condition<strong> ORDER BY </strong>condition<strong> LIMIT </strong>offset,num<br></p><p><br></p><p>我们在写查询语句时，必须按照上面的顺序，粗体字就是关键字，要不会出错，没有时可以省略。再说说上面还没有说过的几个关键字。</p><ul class=" list-paddingleft-2" style="list-style-type: disc; margin: 0px; padding: 0px 0px 0px 30px;"><li><p>GROUP BY:这个是分组。</p></li><li><p>HAVING:这个是按条件来分组。</p></li></ul><p>好了，查询的就这么多。</p><p><br></p><p><strong>3).修改数据</strong></p><p>格式为：<strong>UPDATE</strong> tablename <strong>SET </strong>data [<strong>WHERE</strong> condition]</p><p>中括号里的是可以省略，为删除的条件，<strong>省略时就为更改所有数据</strong><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802149765.png" title="1802149765.png" alt=""></p><p><br></p><p>上面的就是修改表格students的表格，其中<strong>SET</strong>的数据是修改的数据</p><p><br></p><p><strong>4).删除数据</strong></p><p>格式为：DELETE FROM tablename [WHERE condition]</p><p><br></p><p>中括号和修改数据的意思一样，也挺简单的。注意：<strong>不写WHERE</strong>时是删除该表格的所有数据<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802142372.png" title="1802142372.png" alt=""></p><p><br></p><p>这是删除students表的性别为男的数据</p><p><br></p><section class="editor"><section style="border: 0px none; box-sizing: border-box;"><section style="margin: 10px 0px; padding: 0px; text-align: center; font-family: 微软雅黑; box-sizing: border-box;"><section class="96wx-bdlc 96wx-bdrc" style="margin: 0px; padding: 0px; height: 24px; border-right-width: 1px; border-right-style: solid; border-right-color: rgb(245, 189, 209); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(245, 189, 209); box-sizing: border-box;"></section><section class="96wx-bdbc" style="margin-top: -12px; margin-bottom: -12px; padding: 0px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(245, 189, 209); box-sizing: border-box;"></section><section style="margin: 0px; padding: 0px; display: inline-block; box-sizing: border-box;"><section class="96wx-bdrc" style="margin: 0px; padding: 0px; border-right-width: 15px; border-right-style: solid; border-right-color: rgb(245, 189, 209); border-top-width: 12px; border-top-style: solid; border-top-color: transparent; border-bottom-width: 12px; border-bottom-style: solid; border-bottom-color: transparent; height: 0px; width: 0px; float: left; box-sizing: border-box;"></section><section class="96wx-bgc" style="margin: 0px; padding: 0px; height: 24px; min-width: 4em; color: rgb(255, 255, 255); line-height: 24px; float: left; box-sizing: border-box; background-color: rgb(245, 189, 209);"><span style="color:inherit; font-size:12px">END</span></section><section class="96wx-bdlc" style="margin: 0px; padding: 0px; border-left-width: 15px; border-left-style: solid; border-left-color: rgb(245, 189, 209); border-top-width: 12px; border-top-style: solid; border-top-color: transparent; height: 0px; width: 0px; float: left; border-bottom-width: 12px; border-bottom-style: solid; border-bottom-color: transparent; box-sizing: border-box;"></section></section></section></section></section><p>好了，如果你跟着我一步步做，恭喜你，学会了简单的数据库语句，现在留个练习给你们，可以检验下自己有没有学会操作mysql：</p><p><br></p><p><span style="line-height: 25.6px;">1.</span><span style="line-height: inherit;">创建一个数据库,然后设计一个新闻表(数据类型要使用合理)</span><br></p><p><span style="line-height: 25.6px;">2.</span>使用SQL语句向数据表写入十五条不同的数据</p><p>3.使用SQL语句查询类别为“百家”的新闻数据</p><p>4.使用SQL语句删除一条新闻数据</p><p>5.使用SQL语句查询所有的新闻，以添加时间的倒序进行排列</p><p>6.使用SQL语句查询第二页数据(每一页5条数据)</p><p><br></p><p>学会了mysql语句，如果想学更多请去官方文档哈，这是网址<a href="https://dev.mysql.com/doc/refman/5.7/en/。在下一篇文章我将会讲述如何用python来连接操作数据库。记得来看看哈！" _src="https://dev.mysql.com/doc/refman/5.7/en/。在下一篇文章我将会讲述如何用python来连接操作数据库。记得来看看哈！" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/5.7/en/。在下一篇文章我将会讲述如何用python来连接操作数据库。记得来看看哈！</a></p><p><br></p><p>祝大家今天情人节快乐哈，我没什么礼物送给大家，只能送点学习资料，如果需要的话可以在后天回复<strong>资源</strong>即可获得哈 ！多谢大家捧场。</p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p></section>]]></content>
    
    <summary type="html">
    
      
      
        &lt;section class=&quot;96edit&quot; label=&quot;Powered by bj.96weixin.com&quot; style=&quot;font-size:16px;&quot;&gt;&lt;section class=&quot;editor&quot;&gt;&lt;section style=&quot;padding: 5px; box
      
    
    </summary>
    
      <category term="数据库" scheme="http://sergiojune.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://sergiojune.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>如何爬取asp动态网页？搞定可恶的动态参数，这一文告诉你！</title>
    <link href="http://sergiojune.com/2018/08/07/%E5%A6%82%E4%BD%95%E7%88%AC%E5%8F%96asp%E5%8A%A8%E6%80%81%E7%BD%91%E9%A1%B5%EF%BC%9F%E6%90%9E%E5%AE%9A%E5%8F%AF%E6%81%B6%E7%9A%84%E5%8A%A8%E6%80%81%E5%8F%82%E6%95%B0%EF%BC%8C%E8%BF%99%E4%B8%80%E6%96%87%E5%91%8A%E8%AF%89%E4%BD%A0%EF%BC%81/"/>
    <id>http://sergiojune.com/2018/08/07/如何爬取asp动态网页？搞定可恶的动态参数，这一文告诉你！/</id>
    <published>2018-08-07T00:43:41.780Z</published>
    <updated>2018-08-06T08:53:50.961Z</updated>
    
    <content type="html"><![CDATA[<p data-mpa-powered-by="yiban.io" style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important; text-align: center;">这个asp网站是我的学校的电费查询系统，需要学校的内网才能查询，所以这文说下思路和我遇到的一些坑。我搞这个网站主要是为了方便查电费而已，其实也方便不了多少。而且这个asp网站还不是很容易爬，因为里面有两个可变的参数，会根据页面来变化。好了，先看看页面</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><img data-s="300,640" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicH11syYCaS175fFnibibUOql36mUssTWKTmBD3z0rcR3chfqia6VW3RlxahkOJd9O3Nl3iaj2KQ9XEYg/0?wx_fmt=png" style="word-break: normal !important;" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicH11syYCaS175fFnibibUOql36mUssTWKTmBD3z0rcR3chfqia6VW3RlxahkOJd9O3Nl3iaj2KQ9XEYg/0?wx_fmt=png"></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">这个网站需要先登陆进自己的宿舍才能进去，还有很烂的验证码，不过我实现到验证码写入的时候发现这个验证码是可以随便填的，这个就感觉有点垃圾。</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><br></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">这个登陆页面有很多坑，下面说下</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><br></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">1.</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><img data-s="300,640" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicH11syYCaS175fFnibibUOqld7T4lPTHf1EnNxbAgm0as5piaB5JPsP358B2d8dfia24h1bSyjOhG3Jw/0?wx_fmt=png" style="word-break: normal !important;" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicH11syYCaS175fFnibibUOqld7T4lPTHf1EnNxbAgm0as5piaB5JPsP358B2d8dfia24h1bSyjOhG3Jw/0?wx_fmt=png"></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">上面右边所指的就是两个动态变化的参数，怎么来的呢？是根据上一个页面来的，每个页面都会带有这两个参数，所以我们需要每次访问一次都需要匹配下这两个值就行动态更换，如果不跟换的话，会得不到数据，还会出现下面这个错误。</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><br></p><section data-mpa-preserve-tpl-color="t" data-mpa-template="t" class="mpa-template" mpa-preserve="t" style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; background-image: none; background-color: initial; word-break: normal !important;">‘236|error|500|回发或回调参数无效。在配置中使用&nbsp;&lt;pages&nbsp;enableEventValidation=”true”/&gt;&nbsp;或在页面中使用&nbsp;&lt;%@&nbsp;Page&nbsp;EnableEventValidation=”true”&nbsp;%&gt;&nbsp;启用了事件验证。出于安全目的，此功能验证回发或回调事件的参数是否来源于最初呈现这些事件的服务器控件。如果数据有效并且是预期的，则使用 ClientScriptManager.RegisterForEventValidation 方法来注册回发或回调数据以进行验证。|’<br></pre></section><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">这个就说明你没有更换好上面所说的两个参数</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><br></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">注意：第一次访问这个网站是不会有宿舍楼层宿舍号这些数据的，需要进行匹配上面的两个可变参数再进行post才会有数据。</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><br></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">2.</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">在你选好你的宿舍楼层号之后表单数据就会出现变化</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><img data-s="300,640" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicH11syYCaS175fFnibibUOqlvFwQRfFgLW24XIriaNHRDSuftoeL7CmrMoibzA7gruT9AhzrnnQ9g79g/0?wx_fmt=png" style="word-break: normal !important;" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicH11syYCaS175fFnibibUOqlvFwQRfFgLW24XIriaNHRDSuftoeL7CmrMoibzA7gruT9AhzrnnQ9g79g/0?wx_fmt=png"></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">可以看到表单的参数顺序和上面的不一样了，所以在选好宿舍楼层之后我们需要把变单顺序改变后再把参数post出去，要不还会出现上面那个坑，就是回调参数无效</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><img data-s="300,640" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicH11syYCaS175fFnibibUOqlwq1n3UfS2GibODMGic8CEn7vtShkOicJOf6vbibiaEh90ztVy5M2cvVdLzg/0?wx_fmt=png" style="word-break: normal !important;" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicH11syYCaS175fFnibibUOqlwq1n3UfS2GibODMGic8CEn7vtShkOicJOf6vbibiaEh90ztVy5M2cvVdLzg/0?wx_fmt=png"></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">第一个箭头所指的参数也需要改变，不过第二个参数是txtname2，也就是每层楼的默认宿舍值，这个固定也没事，不会出错，时间的话还是需要根据自己访问时间来进行变化的，要不也会出现错误，还是同样的错误，也就是下面的这个错误，可想而知asp网站对这些参数是有很挑剔的要求。</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><br></p><section data-mpa-preserve-tpl-color="t" data-mpa-template="t" class="mpa-template" mpa-preserve="t" style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; background-image: none; background-color: initial; word-break: normal !important;">236|error|500|回发或回调参数无效。在配置中使用 &lt;pages enableEventValidation=”true”/&gt; 或在页面中使用 &lt;%@ Page EnableEventValidation=”true” %&gt; 启用了事件验证。出于安全目的，此功能验证回发或回调事件的参数是否来源于最初呈现这些事件的服务器控件。如果数据有效并且是预期的，则使用 ClientScriptManager.RegisterForEventValidation 方法来注册回发或回调数据以进行验证。|<br></pre></section><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><br></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><br></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">3.</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><img data-s="300,640" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicH11syYCaS175fFnibibUOqlxWBRQNSmbSeHyTHYrEDrAPZ8ApJhUHdw2huXNXZqPbvH3n4ib6pNOUw/0?wx_fmt=png" style="word-break: normal !important;" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicH11syYCaS175fFnibibUOqlxWBRQNSmbSeHyTHYrEDrAPZ8ApJhUHdw2huXNXZqPbvH3n4ib6pNOUw/0?wx_fmt=png"></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">这个电费查询按钮，不是ajax，会有新的请求，而且是对同一个网址的不同请求方式，第一次请求时get请求，用于获取asp网页的那两个动态参数，第二次是将动态参数就行post发送出去，这样就会有数据了，如果你是第一次就post的话，会没有数据，网页还是会报错误，同样还是那个错误哈。下面是表单数据</p><section data-mpa-preserve-tpl-color="t" data-mpa-template="t" class="mpa-template" mpa-preserve="t" style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; background-image: none; background-color: initial; word-break: normal !important;"><code class="hljs-default" style="margin-right: 0.15em; margin-left: 0.15em; padding: 6px; border-radius: 4px; font-size: 0.85em; background: rgb(40, 44, 52); color: rgb(171, 178, 191); display: block; overflow-x: auto; white-space: nowrap; word-break: normal !important;"><span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 26px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">self</span>.data = {<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 99px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘<strong>EVENTTARGET’</strong></span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 363px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘RegionPanel2$Region1$Toolbar1$ContentPanel1$btnSelect’</span>,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 112px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘EVENTARGUMENT’</span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 14px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘’</span>,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 86px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘<strong>VIEWSTATE’</strong></span>:&nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 26px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">self</span>.data[<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 86px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘VIEWSTATE’</span>],<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 125px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘<strong>EVENTVALIDATION’</strong></span>:&nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 26px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">self</span>.data[<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 126px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘EVENTVALIDATION’</span>],<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 46px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘hidJZ’</span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 27px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘jz’</span>+name,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 356px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘RegionPanel2$Region1$Toolbar1$ContentPanel1$TextBox1’</span>: (datetime.now()-timedelta(days=<span class="hljs-default-number" style="color: rgb(209, 154, 102); background: rgba(0, 0, 0, 0); display: inline; width: 13px; text-decoration-style: solid; text-decoration-color: rgb(209, 154, 102); word-break: normal !important;">30</span>)).strftime(<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 66px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘%Y-%m-%d’</span>),<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 356px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘RegionPanel2$Region1$Toolbar1$ContentPanel1$TextBox2’</span>: datetime.now().strftime(<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 66px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘%Y-%m-%d’</span>),<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 350px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘RegionPanel2$Region1$Toolbar1$ContentPanel1$txtDBBH’</span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 13px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘’</span>,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 350px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘RegionPanel2$Region1$Toolbar1$ContentPanel1$ddlCZFS’</span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 90px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘—-全部—-‘</span>,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 297px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘RegionPanel2$Region1$toolbarButtom$pagesize’</span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 20px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘1’</span>,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 172px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘<strong>box_page_state_changed’</strong></span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 46px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘false’</span>,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 99px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘2_collapsed’</span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 46px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘false’</span>,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 119px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘<strong>6_selectedRows’</strong></span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 13px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘’</span>,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 257px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘box_disabled_control_before_postbac’</span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 40px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘<strong>10’</strong></span>,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 112px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘box_ajax_mark’</span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 40px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘true’</span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp;}</code></pre></section><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><br></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">坑说完了，说说部分代码的作用吧</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><br></p><section data-mpa-preserve-tpl-color="t" data-mpa-template="t" class="mpa-template" mpa-preserve="t" style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; background-image: none; background-color: initial; word-break: normal !important;"><code class="hljs-default" style="margin-right: 0.15em; margin-left: 0.15em; padding: 6px; border-radius: 4px; font-size: 0.85em; background: rgb(40, 44, 52); color: rgb(171, 178, 191); display: block; overflow-x: auto; white-space: nowrap; word-break: normal !important;"><span class="hljs-default-function" style="background: rgba(0, 0, 0, 0); display: inline; width: 185px; text-decoration-style: solid; text-decoration-color: rgb(171, 178, 191); word-break: normal !important;"><span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 20px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">def</span>&nbsp;<span class="hljs-default-title" style="color: rgb(97, 174, 238); background: rgba(0, 0, 0, 0); display: inline; width: 73px; text-decoration-style: solid; text-decoration-color: rgb(97, 174, 238); word-break: normal !important;"><strong>get_value</strong></span><span class="hljs-default-params" style="background: rgba(0, 0, 0, 0); display: inline; width: 79px; text-decoration-style: solid; text-decoration-color: rgb(171, 178, 191); word-break: normal !important;">(self, html)</span>:</span>&nbsp;&nbsp;<span class="hljs-default-comment" style="color: rgb(92, 99, 112); background: rgba(0, 0, 0, 0); display: inline; width: 318px; text-decoration-style: solid; text-decoration-color: rgb(92, 99, 112); font-style: italic; word-break: normal !important;"># 获取表单的两个参数VIEWSTATE和<strong>EVENTVALIDATION</strong></span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 19px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">try</span>:<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;soup = BeautifulSoup(html,&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 40px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘lxml’</span>)<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;value = soup.select(<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 145px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘input[type=”hidden”]’</span>)<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;values = [v&nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 20px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">for</span>&nbsp;v&nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 13px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">in</span>&nbsp;value&nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 13px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">if</span>&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 26px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘/w’</span>&nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 13px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">in</span>&nbsp;str(v)]<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;state = values[<span class="hljs-default-number" style="color: rgb(209, 154, 102); background: rgba(0, 0, 0, 0); display: inline; width: 7px; text-decoration-style: solid; text-decoration-color: rgb(209, 154, 102); word-break: normal !important;">0</span>][<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 46px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘value’</span>]<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;action = values[<span class="hljs-default-number" style="color: rgb(209, 154, 102); background: rgba(0, 0, 0, 0); display: inline; width: 6px; text-decoration-style: solid; text-decoration-color: rgb(209, 154, 102); word-break: normal !important;">1</span>][<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 46px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘value’</span>]<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.data[<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 86px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘VIEWSTATE’</span>] = state<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.data[<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 125px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘<strong>EVENTVALIDATION’</strong></span>] = action<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 39px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">except</span>&nbsp;IndexError&nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 14px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">as</span>&nbsp;e: &nbsp;<span class="hljs-default-comment" style="color: rgb(92, 99, 112); background: rgba(0, 0, 0, 0); display: inline; width: 205px; text-decoration-style: solid; text-decoration-color: rgb(92, 99, 112); font-style: italic; word-break: normal !important;"># 证明这个不是首页，需要另外的规则</span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;match = re.search(<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 336px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘VIEWSTATE|(.<em>?)|.</em>?<strong>EVENTVALIDATION|(.*?)|‘</strong></span>, html)<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.data[<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 86px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘VIEWSTATE’</span>] = match.group(<span class="hljs-default-number" style="color: rgb(209, 154, 102); background: rgba(0, 0, 0, 0); display: inline; width: 7px; text-decoration-style: solid; text-decoration-color: rgb(209, 154, 102); word-break: normal !important;">1</span>)<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.data[<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 125px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘<strong>EVENTVALIDATION’</strong></span>] = match.group(<span class="hljs-default-number" style="color: rgb(209, 154, 102); background: rgba(0, 0, 0, 0); display: inline; width: 6px; text-decoration-style: solid; text-decoration-color: rgb(209, 154, 102); word-break: normal !important;">2</span>)<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 39px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">except</span>&nbsp;Exception&nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 13px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">as</span>&nbsp;e:<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;print(<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 72px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘get_value’</span>, e)</code></pre></section><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">这个就是获取两个动态参数的方法，每次根据html元素来获取</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><br></p><section data-mpa-preserve-tpl-color="t" data-mpa-template="t" class="mpa-template" mpa-preserve="t" style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; background-image: none; background-color: initial; word-break: normal !important;"><code class="hljs-default" style="margin-right: 0.15em; margin-left: 0.15em; padding: 6px; border-radius: 4px; font-size: 0.85em; background: rgb(40, 44, 52); color: rgb(171, 178, 191); display: block; overflow-x: auto; white-space: nowrap; word-break: normal !important;"><span class="hljs-default-function" style="background: rgba(0, 0, 0, 0); display: inline; width: 231px; text-decoration-style: solid; text-decoration-color: rgb(171, 178, 191); word-break: normal !important;"><span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 20px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">def</span>&nbsp;<span class="hljs-default-title" style="color: rgb(97, 174, 238); background: rgba(0, 0, 0, 0); display: inline; width: 66px; text-decoration-style: solid; text-decoration-color: rgb(97, 174, 238); word-break: normal !important;">get_name</span><span class="hljs-default-params" style="background: rgba(0, 0, 0, 0); display: inline; width: 139px; text-decoration-style: solid; text-decoration-color: rgb(171, 178, 191); word-break: normal !important;">(<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 26px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">self</span>, jz, html=None)</span></span>: &nbsp;<span class="hljs-default-comment" style="color: rgb(92, 99, 112); background: rgba(0, 0, 0, 0); display: inline; width: 74px; text-decoration-style: solid; text-decoration-color: rgb(92, 99, 112); font-style: italic; word-break: normal !important;"># 输入宿舍号</span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 13px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">if</span>&nbsp;<span class="hljs-default-symbol" style="color: rgb(97, 174, 238); background: rgba(0, 0, 0, 0); display: inline; width: 33px; text-decoration-style: solid; text-decoration-color: rgb(97, 174, 238); word-break: normal !important;">html:</span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-comment" style="color: rgb(92, 99, 112); background: rgba(0, 0, 0, 0); display: inline; width: 109px; text-decoration-style: solid; text-decoration-color: rgb(92, 99, 112); font-style: italic; word-break: normal !important;"># 表单顺序需要改变</span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 26px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">self</span>.data = {<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 106px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘ScriptManager1’</span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 139px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘UpdatePanel1|txtjz2’</span>,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 60px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘hidtime’</span>: datetime.now().strftime(<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 126px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘%Y-%m-%d %H:%M:%S’</span>),<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 53px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘Radio1’</span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 20px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘1’</span>,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 53px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘txtjz2’</span>: jz,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 66px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘txtname2’</span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 112px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘001001001001001’</span>, &nbsp;<span class="hljs-default-comment" style="color: rgb(92, 99, 112); background: rgba(0, 0, 0, 0); display: inline; width: 206px; text-decoration-style: solid; text-decoration-color: rgb(92, 99, 112); font-style: italic; word-break: normal !important;"># 这个初始化值可以随意，但不能为空</span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 60px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘txtpwd2’</span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 13px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘’</span>,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 60px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘txtyzm2’</span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 13px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘’</span>,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 99px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘<strong>EVENTTARGET’</strong></span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 52px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘txtjz2’</span>,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 113px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘EVENTARGUMENT’</span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 13px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘’</span>,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 86px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘<strong>LASTFOCUS’</strong></span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 14px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘’</span>,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 86px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘VIEWSTATE’</span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 14px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘’</span>,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 126px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘<strong>EVENTVALIDATION’</strong></span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 13px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘’</span>,<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 86px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘ASYNCPOST’</span>:&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 40px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘true’</span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 26px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">self</span>.<strong>get_value(html) &nbsp;<span class="hljs-default-comment" style="color: rgb(92, 99, 112); background: rgba(0, 0, 0, 0); display: inline; width: 62px; text-decoration-style: solid; text-decoration-color: rgb(92, 99, 112); font-style: italic; word-break: normal !important;"># 换下参数</span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;html =&nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 27px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">self</span>.</strong>get_html()<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 13px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">if</span>&nbsp;<span class="hljs-default-symbol" style="color: rgb(97, 174, 238); background: rgba(0, 0, 0, 0); display: inline; width: 33px; text-decoration-style: solid; text-decoration-color: rgb(97, 174, 238); word-break: normal !important;">html:</span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;soup = BeautifulSoup(html,&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 40px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘lxml’</span>)<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;dormitory_num = soup.select(<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 211px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘select[name=”txtname2”] option’</span>)<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;dormitory_num = [(p.text, p[<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 46px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘value’</span>])&nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 20px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">for</span>&nbsp;p&nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 13px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">in</span>&nbsp;dormitory_num]<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 20px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">for</span>&nbsp;index, p&nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 13px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">in</span>&nbsp;enumerate(dormitory_num):<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;print(index,&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 61px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘宿舍号：’</span>, p[<span class="hljs-default-number" style="color: rgb(209, 154, 102); background: rgba(0, 0, 0, 0); display: inline; width: 7px; text-decoration-style: solid; text-decoration-color: rgb(209, 154, 102); word-break: normal !important;">0</span>])<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 27px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">self</span>.<strong>get_value(html)<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 33px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">while</span>&nbsp;<span class="hljs-default-symbol" style="color: rgb(97, 174, 238); background: rgba(0, 0, 0, 0); display: inline; width: 33px; text-decoration-style: solid; text-decoration-color: rgb(97, 174, 238); word-break: normal !important;">True:</span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;num = input(<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 217px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘请输入你的宿舍，输入左边的编号即可’</span>)<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;num = re.match(<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 33px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘\d+’</span>, num)<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 13px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">if</span>&nbsp;num&nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 20px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">and</span>&nbsp;int(num.group()) &lt; len(dormitory_num):<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;num = int(num.group())<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 33px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">break</span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;print(<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 133px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘请输入正确的宿舍编号’</span>)<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 39px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">return</span>&nbsp;dormitory_num[num][<span class="hljs-default-number" style="color: rgb(209, 154, 102); background: rgba(0, 0, 0, 0); display: inline; width: 7px; text-decoration-style: solid; text-decoration-color: rgb(209, 154, 102); word-break: normal !important;">1</span>]</strong></code></pre></section><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">这个是获取宿舍号，表单顺序需要改变</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><br></p><section data-mpa-preserve-tpl-color="t" data-mpa-template="t" class="mpa-template" mpa-preserve="t" style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; background-image: none; background-color: initial; word-break: normal !important;"><code class="hljs-default" style="margin-right: 0.15em; margin-left: 0.15em; padding: 6px; border-radius: 4px; font-size: 0.85em; background: rgb(40, 44, 52); color: rgb(171, 178, 191); display: block; overflow-x: auto; white-space: nowrap; word-break: normal !important;">def get_chapter(self):<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp;# 获取验证码<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp;url =&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 284px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘<a href="http://172.18.2.42:8000/ValidateCode.aspx&#39;" target="_blank" rel="noopener">http://172.18.2.42:8000/ValidateCode.aspx&#39;</a></span><br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp;response = requests.<span class="hljs-default-built_in" style="color: rgb(230, 192, 123); background: rgba(0, 0, 0, 0); display: inline; width: 19px; text-decoration-style: solid; text-decoration-color: rgb(230, 192, 123); word-break: normal !important;">get</span>(url, headers=self.headers)<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp;with&nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 26px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">open</span>(<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 66px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘code.jpg’</span>,&nbsp;<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 26px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘wb’</span>)&nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 13px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">as</span>&nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 7px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">f</span>:<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 7px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">f</span>.<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 33px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">write</span>(response.content)<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp;image = Image.<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 26px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">open</span>(<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 66px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘code.jpg’</span>)<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp;image.show()<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp;code =&nbsp;<span class="hljs-default-built_in" style="color: rgb(230, 192, 123); background: rgba(0, 0, 0, 0); display: inline; width: 33px; text-decoration-style: solid; text-decoration-color: rgb(230, 192, 123); word-break: normal !important;">input</span>(<span class="hljs-default-string" style="color: rgb(152, 195, 121); background: rgba(0, 0, 0, 0); display: inline; width: 86px; text-decoration-style: solid; text-decoration-color: rgb(152, 195, 121); word-break: normal !important;">‘请输入验证码’</span>)<br style="word-break: normal !important;">&nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-default-keyword" style="color: rgb(198, 120, 221); background: rgba(0, 0, 0, 0); display: inline; width: 39px; text-decoration-style: solid; text-decoration-color: rgb(198, 120, 221); word-break: normal !important;">return</span>&nbsp;code</code></pre></section><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">这个是获取验证码的方法，获取验证码是很简单的，就是找到请求的url进行请求就可以了。至于识别，我这里是手动输入，你也可以选择接入打码平台或者用深度学习模型来识别。</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><br></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">其他的就不多说了。</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><br></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">需要源码的可以在我的GitHub上找：<a href="https://github.com/SergioJune/gongzhonghao_code/blob/master/python_play/query.py" target="_blank" rel="noopener">https://github.com/SergioJune/gongzhonghao_code/blob/master/python_play/query.py</a></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><br></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><span style="font-size: 20px; word-break: normal !important;"><strong style="word-break: normal !important;">写在最后</strong></span></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><span style="color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, 'Helvetica Neue', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei UI', 'Microsoft YaHei', Arial, sans-serif; font-size: 17px; letter-spacing: 1.5px; text-align: justify; word-break: normal !important;">如果这篇文章对你用的话，希望不要吝啬你的点赞哈！点赞和转发就是对我的最大支持，这样才有动力输出质量高的原创文章。</span></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><br></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><span style=";color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, 'Helvetica Neue', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei UI', 'Microsoft YaHei', Arial, sans-serif; font-size: 17px; letter-spacing: 1.5px; text-align: justify; word-break: normal !important;;word-break: normal !important;">「点赞是一种态度！」</span></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><br></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;">推荐文章：</p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483795&amp;idx=1&amp;sn=0b263fc29538db3de5ffe25da0c8bd49&amp;chksm=fb4a7b3fcc3df229ccc9f2ad10fdcbf47e9a1f61012c4ee64a5fcd3a56897f7ba9998fac298c&amp;scene=21#wechat_redirect" target="_blank" style="word-break: normal !important;" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483795&amp;idx=1&amp;sn=0b263fc29538db3de5ffe25da0c8bd49&amp;chksm=fb4a7b3fcc3df229ccc9f2ad10fdcbf47e9a1f61012c4ee64a5fcd3a56897f7ba9998fac298c&amp;scene=21#wechat_redirect">我爬取了37000条球迷评论，知道了这场比赛的重要信息</a><a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483760&amp;idx=1&amp;sn=3e08dbc95596839abe1c84752453415f&amp;chksm=fb4a7bdccc3df2cae9f3b4df5b410017b72d62a4c26a70d8d7afb4294024928bc5d53572368a&amp;scene=21#wechat_redirect" target="_blank" style="word-break: normal !important;" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483760&amp;idx=1&amp;sn=3e08dbc95596839abe1c84752453415f&amp;chksm=fb4a7bdccc3df2cae9f3b4df5b410017b72d62a4c26a70d8d7afb4294024928bc5d53572368a&amp;scene=21#wechat_redirect">爬取《The Hitchhiker’s Guide to Python!》python进阶书并制成pdf</a><br style="word-break: normal !important;"></p><p style="margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; letter-spacing: 1px; word-break: normal !important;"><br></p><p style="white-space: normal; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, 'Helvetica Neue', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei UI', 'Microsoft YaHei', Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: center; word-break: normal !important;"><img data-copyright="0" data-s="300,640" _width="26%" src="https://mmbiz.qpic.cn/mmbiz_jpg/BIPpxEvceWicMYDKfP5R5OTlibqRibxgnbUibICOVW7ziao5o8nCHYeqSJXIC0TKxqQgHibtaBKl4waRIZVPD4DaE8cg/640" data-fail="0" style="width: 173.672px; word-break: normal !important; visibility: visible !important;" _src="https://mmbiz.qpic.cn/mmbiz_jpg/BIPpxEvceWicMYDKfP5R5OTlibqRibxgnbUibICOVW7ziao5o8nCHYeqSJXIC0TKxqQgHibtaBKl4waRIZVPD4DaE8cg/640"></p><p style="padding-right: 5px; padding-left: 5px; white-space: normal; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, 'Helvetica Neue', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei UI', 'Microsoft YaHei', Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: center; word-break: normal !important;"><span style="font-size: 14px; word-break: normal !important;">日常学python</span></p><p style="padding-right: 5px; padding-left: 5px; white-space: normal; color: rgb(51, 51, 51); font-family: -apple-system-font, BlinkMacSystemFont, 'Helvetica Neue', 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei UI', 'Microsoft YaHei', Arial, sans-serif; font-size: 17px; letter-spacing: 0.544px; text-align: center; word-break: normal !important;"><span style="font-size: 14px; word-break: normal !important;">代码不止bug，还有美和乐趣</span></p><p><br></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p data-mpa-powered-by=&quot;yiban.io&quot; style=&quot;margin-right: 1em; margin-left: 1em; color: rgb(0, 0, 0); font-family: &#39;Helvetica Neue&#39;, Helvetica,
      
    
    </summary>
    
      <category term="python" scheme="http://sergiojune.com/categories/python/"/>
    
    
      <category term="爬虫" scheme="http://sergiojune.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="requestst" scheme="http://sergiojune.com/tags/requestst/"/>
    
  </entry>
  
  <entry>
    <title>爬取《The Hitchhiker’s Guide to Python!》python进阶书并制成pdf</title>
    <link href="http://sergiojune.com/2018/08/07/%E7%88%AC%E5%8F%96%E3%80%8AThe%20Hitchhiker%E2%80%99s%20Guide%20to%20Python!%E3%80%8Bpython%E8%BF%9B%E9%98%B6%E4%B9%A6%E5%B9%B6%E5%88%B6%E6%88%90pdf/"/>
    <id>http://sergiojune.com/2018/08/07/爬取《The Hitchhiker’s Guide to Python!》python进阶书并制成pdf/</id>
    <published>2018-08-07T00:43:41.761Z</published>
    <updated>2018-08-06T08:53:50.955Z</updated>
    
    <content type="html"><![CDATA[<p><section class="_editor"><p class="_brush" style="margin: 0px auto; max-width: 600px; word-wrap: normal; min-height: 1em; border: 1px solid rgb(95, 170, 255); font-family: 微软雅黑; font-size: 12px; border-radius: 2em; box-sizing: border-box !important; text-align: center;"><span style="color: rgb(255, 0, 0);">这是日常学python的第15篇原创文章</span></p></section></p><p data-mpa-powered-by="yiban.io" style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">前几篇文章我们学习了requests库和正则，还有个urllib库，我上篇文章也用了requests库来教大家去爬那些返回json格式的网页，挺好玩的。有读者让我来个正则的，所以我今天就来个正则+requests来进行爬取。<br style="word-break: normal !important;"></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">今天原来是想爬小说的，但想到我不怎么看小说，读者也是都喜欢学习的，对吧？嘻嘻！所以我来爬个与python相关的内容，恰好前几天我又看到别人推荐的一本python进阶书，这本书的作者是我们的python大神<strong style="word-break: normal !important;"><span style="color: rgb(102, 102, 102); font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 20px; word-break: normal !important;">kennethreitz</span></strong>征集各路爱好python的人所写的，下面是地址：</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">中文版:<a href="http://pythonguidecn.readthedocs.io/zh/latest/" _src="http://pythonguidecn.readthedocs.io/zh/latest/" _href="http://pythonguidecn.readthedocs.io/zh/latest/" style="word-break: normal !important;" target="_blank" rel="noopener">http://pythonguidecn.readthedocs.io/zh/latest/</a></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">英文版：<a href="http://docs.python-guide.org/en/latest/" _src="http://docs.python-guide.org/en/latest/" _href="http://docs.python-guide.org/en/latest/" style="word-break: normal !important;" target="_blank" rel="noopener">http://docs.python-guide.org/en/latest/</a></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">这本书适合于一切有python的学习者，不管你是初入python的小白，还是熟练使用python的老手，都适用。但是不看也没有影响你学习爬虫哈，这个只是说些python的奇淫技巧。</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">由于这本书在网上只有英语的电子版，可我英语渣渣，所以爬个中文版的网页然后把他弄成电子版。</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">若想直接获取该书电子版，可以在公众号「<strong style="word-break: normal !important;">日常学python</strong>」后台回复『<strong style="word-break: normal !important;">进阶</strong>』直接获取。</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">本篇文章用到的工具如下：</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; letter-spacing: 0px; white-space: normal; line-height: 1.6; word-break: normal !important;"><ul class=" list-paddingleft-2" style="width: 530.094px; word-break: normal !important; margin: 0px; padding: 0px 0px 0px 30px;"><li><p style="word-break: normal !important;"><strong style="word-break: normal !important;">requests库</strong></p></li><li><p style="word-break: normal !important;"><strong style="word-break: normal !important;">正则表达式</strong></p></li><li><p style="word-break: normal !important;"><strong style="word-break: normal !important;">Sigil</strong>：将html网页转成epub电子书</p></li><li><p style="word-break: normal !important;"><strong style="word-break: normal !important;">epub转pdf</strong>:<a href="http://cn.epubee.com/epub转pdf.html" target="_blank" rel="noopener">http://cn.epubee.com/epub转pdf.html</a><br style="word-break: normal !important;"></p></li></ul></section><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><strong style="word-break: normal !important;">好了，下面详细分析：</strong></p><section class="_editor" style="max-width: 100%; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><section style="margin: 10px auto; padding: 2px; word-break: normal !important; box-sizing: border-box;"><section style="width: 60px; height: 40px; text-align: center; font-size: 2em; color: rgb(255, 255, 255); float: left; line-height: 40px; background-image: linear-gradient(-45deg, transparent 14.14px, rgb(139, 183, 72) 0px), linear-gradient(45deg, transparent 14.14px, rgb(139, 183, 72) 0px), linear-gradient(135deg, transparent 14.14px, rgb(139, 183, 72) 0px), linear-gradient(-135deg, transparent 14.14px, rgb(139, 183, 72) 0px); background-position: right bottom, left bottom, left top, right top; background-size: 50% 50%, 50% 50%, 50% 50%, 50% 50%; background-repeat: no-repeat, no-repeat, no-repeat, no-repeat; word-break: normal !important;"><section class="autonum" style="word-break: normal !important;">1</section></section><section style="margin-left: 10px; border-bottom: 2px dashed rgb(128, 177, 53); min-height: 36px; display: inline-block; line-height: 36px; word-break: normal !important; box-sizing: border-box;"><span style="color: rgb(128, 177, 53); font-size: 18px; display: inline-block; word-break: normal !important;">分析网站内容</span></section></section></section><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><img data-s="300,640" data-type="png" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicsXUMNOjV3Lo1PYrSUibAekQP06iabibiaSu5twxzVnFicarWIYUnF7lr20VbEic0jFxiaWce15kBYsWYvg/" data-ratio="0.6265822784810127" data-w="1264" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicsXUMNOjV3Lo1PYrSUibAekQP06iabibiaSu5twxzVnFicarWIYUnF7lr20VbEic0jFxiaWce15kBYsWYvg/" style="word-break: normal !important;"></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">可以看到首页中有整本书的内容链接，所以可以直接爬首页获取整本书的链接。</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">熟练地按下f12查看网页请求，非常容易找到这个<img data-s="300,640" data-type="png" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicsXUMNOjV3Lo1PYrSUibAekf25ibXK48962V3vGIeK6x34wDWuUqCNfhyx2XSIdpf8U9tXFzxJCDoA/" data-ratio="0.4616171954964176" data-w="977" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicsXUMNOjV3Lo1PYrSUibAekf25ibXK48962V3vGIeK6x34wDWuUqCNfhyx2XSIdpf8U9tXFzxJCDoA/" style="word-break: normal !important;"></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">请求网站为：<span style="color: rgb(34, 34, 34); font-family: Consolas, 'Lucida Console', 'Courier New', monospace; font-size: 12px; white-space: pre-wrap; word-break: normal !important;"><a href="http://pythonguidecn.readthedocs.io/zh/latest/" _src="http://pythonguidecn.readthedocs.io/zh/latest/" _href="http://pythonguidecn.readthedocs.io/zh/latest/" style="word-break: normal !important;" target="_blank" rel="noopener">http://pythonguidecn.readthedocs.io/zh/latest/</a></span></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">请求方式为get，状态码为200，而且返回的是html元素，所以我们可以用正则来匹配所需要的内容。</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">那看看我们的匹配内容所在的地方</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><img data-s="300,640" data-type="png" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicsXUMNOjV3Lo1PYrSUibAekaeZxH9TWHCA2WXDuHUNmgSm6dBIEBMd8daYtyfsotOibibRfZ6RKm3IQ/" data-ratio="0.4064885496183206" data-w="1572" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicsXUMNOjV3Lo1PYrSUibAekaeZxH9TWHCA2WXDuHUNmgSm6dBIEBMd8daYtyfsotOibibRfZ6RKm3IQ/" style="word-break: normal !important;"></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">可以看到这个内容的地址和内容标题都在这个a标签上，所以正则很容易，如下：</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; letter-spacing: 0px; white-space: normal; line-height: 1.6; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; padding: 0.5em; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); word-wrap: normal !important; word-break: normal !important; display: block !important; overflow: auto !important;">toctree-l1.<em>?reference internal<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“ href=”</span>([^<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“]</span></em>?)”&gt;(.<em>?)&lt;/a&gt;<br style="word-break: normal !important;"></em></code></pre></section><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">不知道你的正则学得怎样了，这里还是简单说下：</p><ul class=" list-paddingleft-2" style="width: 530.094px; color: rgb(0, 0, 0); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important; margin: 0px; padding: 0px 0px 0px 30px;"><li><p style="word-break: normal !important;"><strong style="word-break: normal !important;">.</strong>：这个是概括字符集，为匹配除换行符以外的任意字符</p></li><li><p style="word-break: normal !important;"><strong style="word-break: normal !important;"></strong>：这个是数量词，匹配的次数为0次以上</p></li><li><p style="word-break: normal !important;"><strong style="word-break: normal !important;">?</strong>：加了这个问号表示非贪婪，一般默认为贪婪</p></li><li><p style="word-break: normal !important;"><strong style="word-break: normal !important;">[^”]</strong>：这个表示不匹配双引号，挺好用的</p></li></ul><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">实在不记得的可以看看我这篇文章，这里不详细说了,不记得就点开<a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483729&amp;idx=1&amp;sn=3af71892e67f9dd93e8e4dabc98c76b1&amp;chksm=fb4a7bfdcc3df2eb60858642aa905b5b5fccdafd100e9af1099b268e4ccb5b72170e19299423&amp;scene=21#wechat_redirect" target="_blank" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483729&amp;idx=1&amp;sn=3af71892e67f9dd93e8e4dabc98c76b1&amp;chksm=fb4a7bfdcc3df2eb60858642aa905b5b5fccdafd100e9af1099b268e4ccb5b72170e19299423&amp;scene=21#wechat_redirect" style="word-break: normal !important;">爬虫必学知识之正则表达式下篇</a>看看</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">这里需要注意的是：在这里获取的网址列表里面有个内容的导航，如下：<img src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicsXUMNOjV3Lo1PYrSUibAekfhGeWs4PLqY6Sbp9BksZutMhKW5FmWqpEvrRLljga5hhbib8b82VB0Q/" title="1522224025709350.png" alt="image.png" class="js_catchremoteimageerror" data-cropselx1="0" data-cropselx2="497" data-cropsely1="0" data-cropsely2="326" data-copyright="0" data-ratio="0.40766961651917405" data-w="1695" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicsXUMNOjV3Lo1PYrSUibAekfhGeWs4PLqY6Sbp9BksZutMhKW5FmWqpEvrRLljga5hhbib8b82VB0Q/" style="height: 227px; width: 558px; word-break: normal !important;"></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">所有我们在匹配完之后还需要再将这些带<strong style="word-break: normal !important;">#</strong>号的网址给过滤掉。</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">接下来的就是获取每个网页的内容</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><img data-s="300,640" data-type="png" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicsXUMNOjV3Lo1PYrSUibAek8KclyX0V4g3J6ytibeSVGBs5xgZrx5Qhk86ThaiaG6DibCtttv6MmVMOw/" data-ratio="0.15073529411764705" data-w="1632" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicsXUMNOjV3Lo1PYrSUibAek8KclyX0V4g3J6ytibeSVGBs5xgZrx5Qhk86ThaiaG6DibCtttv6MmVMOw/" style="word-break: normal !important;"></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">可以看到内容都在这个div标签内，所以和上面一样，用正则就可以获取了。</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">ps: 其实这里用BeautifulSoup更好用，我会在后面文章中讲到哈！</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">匹配内容的正则为：</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; letter-spacing: 0px; white-space: normal; line-height: 1.6; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; padding: 0.5em; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); word-wrap: normal !important; word-break: normal !important; display: block !important; overflow: auto !important;">section<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“.<em>?(&lt;h1&gt;.</em>?)&lt;div class=”</span>sphinxsidebar<br style="word-break: normal !important;"></code></pre></section><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">因为我的那个工具是把这些内容的html下载下来就可以了，所以接下来不需要清洗里面的html元素。</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">内容分析完毕，接下来的就容易了，就是用个循环把遍历所有文章，然后就利用正则把他爬下来就可以了。</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><section class="_editor" style="max-width: 100%; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><section style="margin: 10px auto; padding: 2px; word-break: normal !important; box-sizing: border-box;"><section style="width: 60px; height: 40px; text-align: center; font-size: 2em; color: rgb(255, 255, 255); float: left; line-height: 40px; background-image: linear-gradient(-45deg, transparent 14.14px, rgb(139, 183, 72) 0px), linear-gradient(45deg, transparent 14.14px, rgb(139, 183, 72) 0px), linear-gradient(135deg, transparent 14.14px, rgb(139, 183, 72) 0px), linear-gradient(-135deg, transparent 14.14px, rgb(139, 183, 72) 0px); background-position: right bottom, left bottom, left top, right top; background-size: 50% 50%, 50% 50%, 50% 50%, 50% 50%; background-repeat: no-repeat, no-repeat, no-repeat, no-repeat; word-break: normal !important;"><section class="autonum" style="word-break: normal !important;">2</section></section><section style="margin-left: 10px; border-bottom: 2px dashed rgb(128, 177, 53); min-height: 36px; display: inline-block; line-height: 36px; word-break: normal !important; box-sizing: border-box;"><span style="color: rgb(128, 177, 53); font-size: 18px; display: inline-block; word-break: normal !important;">实操部分</span></section></section></section><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; letter-spacing: 0px; white-space: normal; line-height: 1.6; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; padding: 0.5em; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); word-wrap: normal !important; word-break: normal !important; display: block !important; overflow: auto !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> re, requests<br style="word-break: normal !important;"><br style="word-break: normal !important;"><span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">class</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">Spider</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; color: rgb(255, 152, 35); word-wrap: inherit !important; word-break: inherit !important;">(object)</span>:</span><br style="word-break: normal !important;"> &nbsp; &nbsp;<span class="hljs-function" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">def</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;"><strong>init</strong></span><span class="hljs-params" style="font-size: inherit; line-height: inherit; color: rgb(255, 152, 35); word-wrap: inherit !important; word-break: inherit !important;">(self, headers, url)</span>:</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;self.headers = headers<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;self.url = url<br style="word-break: normal !important;"><br style="word-break: normal !important;"> &nbsp; &nbsp;<span class="hljs-function" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">def</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;"><strong>get_hrefs</strong></span><span class="hljs-params" style="font-size: inherit; line-height: inherit; color: rgb(255, 152, 35); word-wrap: inherit !important; word-break: inherit !important;">(self)</span>:</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘’’获取书本的所有链接’’’</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;response = requests.get(self.url, self.headers)<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">if</span> response.status_code == <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">200</span>:<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;response.encoding = <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘utf-8’</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;hrefs = re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘toctree-l1.<em>?reference internal” href=”([^”]</em>?)”&gt;(.*?)&lt;/a&gt;’</span>, response.text, re.S)<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">return</span> hrefs<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">else</span>:<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘访问书本内容失败，状态码为’</span>, response.status_code)<br style="word-break: normal !important;"><br style="word-break: normal !important;"> &nbsp; &nbsp;<span class="hljs-function" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">def</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">get_page</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; color: rgb(255, 152, 35); word-wrap: inherit !important; word-break: inherit !important;">(self, url)</span>:</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘’’获取首页’’’</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;response = requests.get(url, self.headers)<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;response.encoding = <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘utf-8’</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;content = re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘section”.<em>?(&lt;h1&gt;.</em>?)&lt;div class=”sphinxsidebar’</span>, response.text, re.S)<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">return</span> content[<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">0</span>]<br style="word-break: normal !important;"><br style="word-break: normal !important;"> &nbsp; &nbsp;<span class="hljs-function" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">def</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;"><strong>get_content</strong></span><span class="hljs-params" style="font-size: inherit; line-height: inherit; color: rgb(255, 152, 35); word-wrap: inherit !important; word-break: inherit !important;">(self, href)</span>:</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘’’获取每个页面的内容’’’</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">if</span> href:<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;href = self.url + href<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;response = requests.get(href, self.headers)<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;response.encoding = <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘utf-8’</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;content = re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘section”.<em>?(&lt;h1&gt;.</em>?)&lt;div class=”sphinxsidebar’</span>, response.text, re.S)<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">if</span> content:<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">return</span> content[<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">0</span>]<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">else</span>:<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘正则获取失败’</span>)<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">else</span>:<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘获取内容失败’</span>)<br style="word-break: normal !important;"><br style="word-break: normal !important;"> &nbsp; &nbsp;<span class="hljs-function" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">def</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">run</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; color: rgb(255, 152, 35); word-wrap: inherit !important; word-break: inherit !important;">(self)</span>:</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘’’循环获取整本书内容’’’</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;self.num = <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">0</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;hrefs = self.get_hrefs()<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;content = self.<strong>get_page(self.url)<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">with</span> open(str(self.num)+<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘Python最佳实践指南.html’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘w’</span>, encoding=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘utf-8’</span>) <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">as</span> f:<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;f.write(content)<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘写入目录成功’</span>)<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">for</span> href, title <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">in</span> hrefs:<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">if</span> <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“#”</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">in</span> href:<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">continue</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;self.num += <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">1</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;content = self.</strong>get_content(href)<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">with</span> open(str(self.num)+title+<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘.html’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘w’</span>, encoding=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘utf-8’</span>) <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">as</span> f:<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;f.write(content)<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘下载第’</span>+str(self.num)+<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘章成功’</span>)<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘下载完毕’</span>)<br style="word-break: normal !important;"><br style="word-break: normal !important;"><br style="word-break: normal !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">def</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">main</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; color: rgb(255, 152, 35); word-wrap: inherit !important; word-break: inherit !important;">()</span>:</span><br style="word-break: normal !important;"> &nbsp; &nbsp;url = <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="http://pythonguidecn.readthedocs.io/zh/latest/&#39;" target="_blank" rel="noopener">http://pythonguidecn.readthedocs.io/zh/latest/&#39;</a></span><br style="word-break: normal !important;"> &nbsp; &nbsp;headers = {<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘User-Agent’</span>:<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36’</span>}<br style="word-break: normal !important;"> &nbsp; &nbsp;spider = Spider(headers, url)<br style="word-break: normal !important;"> &nbsp; &nbsp;spider.run()<br style="word-break: normal !important;"><br style="word-break: normal !important;"><br style="word-break: normal !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">if</span> <strong>name</strong> == <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<strong>main</strong>‘</span>:<br style="word-break: normal !important;"> &nbsp; &nbsp;main()<br style="word-break: normal !important;"></code></pre></section><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">点击运行，感觉美滋滋，可惜啊，代码总是爱玩弄你，赶紧报了个错：</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; letter-spacing: 0px; white-space: normal; line-height: 1.6; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; padding: 0.5em; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); word-wrap: normal !important; word-break: normal !important; display: block !important; overflow: auto !important;"> &nbsp;File <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“E:/anaconda/python_project/newspaper/spider.py”</span>, line <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">52</span>, <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">in</span> run<br style="word-break: normal !important;"> &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">with</span> open(str(self.num)+title+<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘.html’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘w’</span>, encoding=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘utf-8’</span>) <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">as</span> f:<br style="word-break: normal !important;">FileNotFoundError: [Errno <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">2</span>] No such file <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">or</span> directory: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘38与C/C++库交互.html’</span><br style="word-break: normal !important;"></code></pre></section><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">一眼看下去，还挺郁闷的，我没有打开文件的，都是在写文件，为什么报了这个错？仔细一看报错内容，这个名字有问题啊，你看</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; letter-spacing: 0px; white-space: normal; line-height: 1.6; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; padding: 0.5em; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); word-wrap: normal !important; word-break: normal !important; display: block !important; overflow: auto !important;"><span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">38</span>与C/C++库交互.html<br style="word-break: normal !important;"></code></pre></section><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">这个在window系统是以为你在&nbsp;<strong style="word-break: normal !important;">38与C</strong>&nbsp;的<strong style="word-break: normal !important;">&nbsp;C++库交互.html&nbsp;</strong>下的，怪不得会报错，所以，我在这里加了这个代码把/给替换掉<img src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicsXUMNOjV3Lo1PYrSUibAekwK0y8nM79sjxAQHpArFGWFncdofyMHZgYLJcgibUx1XbpBibTcckULBw/" title="1522225665219209.png" alt="image.png" class="js_catchremoteimageerror" data-cropselx1="0" data-cropselx2="497" data-cropsely1="0" data-cropsely2="326" data-copyright="0" data-ratio="0.3460820895522388" data-w="1072" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicsXUMNOjV3Lo1PYrSUibAekwK0y8nM79sjxAQHpArFGWFncdofyMHZgYLJcgibUx1XbpBibTcckULBw/" style="height: 193px; width: 558px; word-break: normal !important;"></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><section class="_editor" style="max-width: 100%; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><section style="margin: 10px auto; padding: 2px; word-break: normal !important; box-sizing: border-box;"><section style="width: 60px; height: 40px; text-align: center; font-size: 2em; color: rgb(255, 255, 255); float: left; line-height: 40px; background-image: linear-gradient(-45deg, transparent 14.14px, rgb(139, 183, 72) 0px), linear-gradient(45deg, transparent 14.14px, rgb(139, 183, 72) 0px), linear-gradient(135deg, transparent 14.14px, rgb(139, 183, 72) 0px), linear-gradient(-135deg, transparent 14.14px, rgb(139, 183, 72) 0px); background-position: right bottom, left bottom, left top, right top; background-size: 50% 50%, 50% 50%, 50% 50%, 50% 50%; background-repeat: no-repeat, no-repeat, no-repeat, no-repeat; word-break: normal !important;"><section class="autonum" style="word-break: normal !important;">3</section></section><section style="margin-left: 10px; border-bottom: 2px dashed rgb(128, 177, 53); min-height: 36px; display: inline-block; line-height: 36px; word-break: normal !important; box-sizing: border-box;"><span style="color: rgb(128, 177, 53); font-size: 18px; display: inline-block; word-break: normal !important;">把内容整成pdf</span></section></section></section><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">点击Sigil 的<strong style="word-break: normal !important;">&nbsp;+</strong>&nbsp;号把刚才下载的内容导入</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><img data-s="300,640" data-type="png" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicsXUMNOjV3Lo1PYrSUibAek7OUGXbiayb6u4RxsP5xsAxqwmiaCRNNmuxgpek35ltF3RyfUc4NtIGBw/" data-ratio="0.6259541984732825" data-w="393" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicsXUMNOjV3Lo1PYrSUibAek7OUGXbiayb6u4RxsP5xsAxqwmiaCRNNmuxgpek35ltF3RyfUc4NtIGBw/" style="word-break: normal !important;"><img data-s="300,640" data-type="png" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicsXUMNOjV3Lo1PYrSUibAekVSQEW1Do07g9NyZ8Zy8g8y8ic4aFMl8XjkQFLzDAG2VnBnQlsD3CKdg/" data-ratio="0.7363057324840764" data-w="785" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicsXUMNOjV3Lo1PYrSUibAekVSQEW1Do07g9NyZ8Zy8g8y8ic4aFMl8XjkQFLzDAG2VnBnQlsD3CKdg/" style="word-break: normal !important;"></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">生成目录</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><img data-s="300,640" data-type="png" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicsXUMNOjV3Lo1PYrSUibAekRNl96soJiccrkyJRQVnCuN56A7aj7fTib9nVhyRwXw1UkmAicbgLWiaDvA/" data-ratio="0.5648351648351648" data-w="455" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicsXUMNOjV3Lo1PYrSUibAekRNl96soJiccrkyJRQVnCuN56A7aj7fTib9nVhyRwXw1UkmAicbgLWiaDvA/" style="word-break: normal !important;"></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">添加书名作者</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><img data-s="300,640" data-type="png" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicsXUMNOjV3Lo1PYrSUibAekkx3V7BObvpJoCsDEyCn9ZLmEJ6tRunD0RhkZm9EAoGVjg4CF2FnptA/" data-ratio="1.150214592274678" data-w="233" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicsXUMNOjV3Lo1PYrSUibAekkx3V7BObvpJoCsDEyCn9ZLmEJ6tRunD0RhkZm9EAoGVjg4CF2FnptA/" style="word-break: normal !important;"></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">添加封面：点击左上角的&nbsp;<strong style="word-break: normal !important;">工具</strong>&nbsp;-&gt;&nbsp;<strong style="word-break: normal !important;">添加封面&nbsp;</strong>即可</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">点击保存即可完成</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">转pdf：<a href="http://cn.epubee.com/epub%E8%BD%ACpdf.html" _src="http://cn.epubee.com/epub转pdf.html" _href="http://cn.epubee.com/epub%E8%BD%ACpdf.html" style="word-break: normal !important;" target="_blank" rel="noopener">http://cn.epubee.com/epub转pdf.html</a></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">这个很容易就不说了。</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><strong style="word-break: normal !important;">结语</strong></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">好了，文章内容就这么多，下个文章就是学习新内容了。期待ing。</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">上述文章如有错误欢迎在留言区指出，如果这篇文章对你有用，点个赞，转个发如何？</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><section style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><section style="word-break: normal !important;"><section style="padding-right: 8px; padding-left: 8px; height: 35px; display: inline-block; border-top: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); border-bottom: 1px solid rgb(0, 0, 0); font-weight: bold; line-height: 35px; vertical-align: middle; word-break: normal !important; box-sizing: border-box;">MORE</section><section style="padding-right: 8px; padding-left: 8px; height: 35px; display: inline-block; border-top: 1px solid rgb(0, 0, 0); border-bottom: 1px solid rgb(0, 0, 0); line-height: 35px; vertical-align: middle; word-break: normal !important; box-sizing: border-box;">延伸阅读</section><section style="padding-right: 15px; padding-left: 15px; line-height: 2em; word-break: normal !important; box-sizing: border-box;"><p style="word-break: normal !important;"><span style="text-decoration-line: underline; word-break: normal !important;">◐◑<a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483740&amp;idx=1&amp;sn=9c62ebf1b4d284159a0500f060cb4527&amp;chksm=fb4a7bf0cc3df2e6d504c4a32d9a6e51828b5961b31ef6da81fcab8cf1b6df64bb8a99894fe3&amp;scene=21#wechat_redirect" target="_blank" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483740&amp;idx=1&amp;sn=9c62ebf1b4d284159a0500f060cb4527&amp;chksm=fb4a7bf0cc3df2e6d504c4a32d9a6e51828b5961b31ef6da81fcab8cf1b6df64bb8a99894fe3&amp;scene=21#wechat_redirect" style="word-break: normal !important;">老司机带你用python来爬取妹子图</a></span></p><p style="word-break: normal !important;"><span style="text-decoration-line: underline; word-break: normal !important;">◐◑&nbsp;<a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483720&amp;idx=1&amp;sn=4567a228e1bcca2dcb4c23f0feac39b3&amp;chksm=fb4a7be4cc3df2f234c5b7102f107e72df42a24575dd5d735fb203dddf02ca6e2d3b2b41ce28&amp;scene=21#wechat_redirect" target="_blank" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483720&amp;idx=1&amp;sn=4567a228e1bcca2dcb4c23f0feac39b3&amp;chksm=fb4a7be4cc3df2f234c5b7102f107e72df42a24575dd5d735fb203dddf02ca6e2d3b2b41ce28&amp;scene=21#wechat_redirect" style="word-break: normal !important;">python爬虫常用库之requests详解</a></span></p><p style="word-break: normal !important;"><span style="text-decoration-line: underline; word-break: normal !important;">◐◑&nbsp;<a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483729&amp;idx=1&amp;sn=3af71892e67f9dd93e8e4dabc98c76b1&amp;chksm=fb4a7bfdcc3df2eb60858642aa905b5b5fccdafd100e9af1099b268e4ccb5b72170e19299423&amp;scene=21#wechat_redirect" target="_blank" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483729&amp;idx=1&amp;sn=3af71892e67f9dd93e8e4dabc98c76b1&amp;chksm=fb4a7bfdcc3df2eb60858642aa905b5b5fccdafd100e9af1099b268e4ccb5b72170e19299423&amp;scene=21#wechat_redirect" style="word-break: normal !important;">爬虫必学知识之正则表达式下篇</a></span></p></section></section></section><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; text-align: center; word-break: normal !important;"><img src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicsXUMNOjV3Lo1PYrSUibAek5e3TsAvnGe7QiblyTForFQco8GHiaPBL6YPQ7WPRyl8jpmz6J5PWG2qQ/" height="auto" border="0" alt="1802109804.png" title="undefined" data-ratio="1" data-w="261" data-type="png" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWicsXUMNOjV3Lo1PYrSUibAek5e3TsAvnGe7QiblyTForFQco8GHiaPBL6YPQ7WPRyl8jpmz6J5PWG2qQ/" style="margin-bottom: 1.4px; border-radius: 5px; border-width: 1px; border-style: dashed; border-color: rgb(168, 164, 171); box-shadow: rgba(0, 0, 0, 0.33) 6px 6px 5px 0px; word-break: normal !important; visibility: visible !important; width: 111.297px !important;"></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; text-align: center; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; text-align: center; word-break: normal !important;"><span style="font-size: 14px; word-break: normal !important;">日常学python</span></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; text-align: center; word-break: normal !important;"><span style="font-size: 14px; word-break: normal !important;">代码不止bug，还有美和乐趣</span></p><p><br></p><p></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;section class=&quot;_editor&quot;&gt;&lt;p class=&quot;_brush&quot; style=&quot;margin: 0px auto; max-width: 600px; word-wrap: normal; min-height: 1em; border: 1px sol
      
    
    </summary>
    
      <category term="python" scheme="http://sergiojune.com/categories/python/"/>
    
    
      <category term="爬虫" scheme="http://sergiojune.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="requestst" scheme="http://sergiojune.com/tags/requestst/"/>
    
      <category term="正则表达式" scheme="http://sergiojune.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>爬虫必学知识之正则表达式下篇</title>
    <link href="http://sergiojune.com/2018/08/07/%E7%88%AC%E8%99%AB%E5%BF%85%E5%AD%A6%E7%9F%A5%E8%AF%86%E4%B9%8B%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B8%8B%E7%AF%87/"/>
    <id>http://sergiojune.com/2018/08/07/爬虫必学知识之正则表达式下篇/</id>
    <published>2018-08-07T00:43:41.734Z</published>
    <updated>2018-08-06T08:53:50.946Z</updated>
    
    <content type="html"><![CDATA[<p><section class="_editor"><p class="_brush" style="margin: 0px auto; max-width: 600px; word-wrap: normal; min-height: 1em; border: 1px solid rgb(95, 170, 255); font-family: 微软雅黑; font-size: 12px; border-radius: 2em; box-sizing: border-box !important; text-align: center;"><span style="color: rgb(255, 0, 0);">这是日常学python的第13篇原创文章</span><br></p></section></p><p>继上篇文章说了正则表达式的简单用法，那今天我们就继续说一下正则表达式的复杂的用法。好了，废话不多说，直接进入正题。<br></p><p><br></p><section class="_editor"><section style="border: 0px; padding: 0px; margin: 10px auto; text-align: center; white-space: normal; box-sizing: border-box;"><section style="background-image:url(https://mmbiz.qpic.cn/mmbiz_png/ianq03UUWGmLUTcOuYzOwhBZ5CGhiatPILPeTp0AyP8BxMqpvcmwwKG7ZorRLO8ZfGkje8YDm5fSo7iaGupjcJWkg/0?wx_fmt=png);display:inline-block;margin:0 auto;text-align:left;background-color:#ef7060;background-size:auto 40px;background-repeat:no-repeat;height:40px"><section style="display: inline-block; padding: 0px 10px; line-height: 40px; color: rgb(51, 51, 51); margin-top: 0px; vertical-align: top; margin-left: 91px; font-size: 14px; box-sizing: border-box;"><p style="border:0;padding:0;margin:0">正则表达式</p></section></section><section style="background-image:url(https://mmbiz.qpic.cn/mmbiz_png/ianq03UUWGmLUTcOuYzOwhBZ5CGhiatPILJmeYSkrUtNeibykCLZcCJyeKRicicX712xeRibwEpicqAy2QBMsl6Rukqtg/0?wx_fmt=png);display:inline-block;margin:0 auto;text-align:left;background-color:#ef7060;background-size:auto 40px;background-repeat:no-repeat;width:90px;height:40px;vertical-align:top"></section></section></section><p>情景：当你想要匹配一个qq号，qq号码长度为5-10位，那根据上篇文章的说法，很容易就可以想到该正则：</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;">[<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">0-9</span>]{<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">5</span>,<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">10</span>}<br></code></pre></section><p><br></p><p>这样是可以的，但是当你匹配一个长度大于10的号码时就会出错，这时就会去该字符串的前10个数字出来，如下：</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> re<br>a=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘221753259265’</span><br>r=re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘[0-9]{5,10}’</span>,a)<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#明显当查找的字符串长度大于8位时就会出错，只会截取前一部分长度</span><br>print(r)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br>[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘2217532592’</span>]<br></code></pre></section><p>这样的话你就会得到一个错误的qq号码。</p><p><br></p><p>这时就需要引入边界匹配了：</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><ul style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px 0px 0px 30px; margin: 0px;" class=" list-paddingleft-2"><li><p><strong><span style="font-size: inherit; color: inherit; line-height: inherit;">^</span></strong><span style="font-size: inherit; color: inherit; line-height: inherit;">：这个是从左边开始匹配，规定左边的首个字符</span></p></li><li><p><strong><span style="font-size: inherit; color: inherit; line-height: inherit;">$</span></strong><span style="font-size: inherit; color: inherit; line-height: inherit;">：这个是从右边开始匹配，规定右边的首个字母</span></p></li></ul></section><p>现在再写个匹配qq号码的正则</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;">r=re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘^[0-9]{5,10}$’</span>,a)<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#这个表示从左边起为5-10的数字长度，右边也是一样</span><br>print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘第一个匹配结果：’</span>,r)<br>a = <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘2217532592’</span><br>r=re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘^[0-9]{5,10}$’</span>,a)<br>print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘第二个匹配结果：’</span>,r)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br>第一个匹配结果： []<br>第二个匹配结果： [<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘2217532592’</span>]<br></code></pre></section><p>这样就可以匹配到了，是不是很神奇？</p><p><br></p><p><strong>组</strong>：前面我们有用<strong> [ ] </strong>来匹配，中括号里面表示的是或关系，而这里的组表示的是并关系，并且用小括号括起来<strong> ( )</strong>。</p><p>比如：重复 python 字样三次<br></p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> re<br>a=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘pythonpythonpythonjakjpythonpythonsdjjpythonpythonpythonsd’</span><br>r=re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘(python){3}’</span>,a)<br>print(r)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br>[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘python’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘python’</span>]<br></code></pre></section><p><br></p><p>这里的结果不是返回三个python，而是返回这个组，当符合一次就会将此组添加到返回列表中一次。</p><p><br></p><p>这个组还挺好用的，再看下这个需求：获取下列英文中的life和python之间的内容。</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;">a=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘life is short,i use python’</span><br>r=re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘life(.<em>)python’</em></span>,a,re.S)<br>print(r) <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 这样获取的就是组内的内容</span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br>[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘ is short,i use ‘</span>]<br></code></pre></section><p><br></p><p>这个组还常用，因为在我们经常在用正则来解析html元素时，经常需要获取两个标签之间的内容，标签是确定的，标签内容不确定，就可以用这个了。如下这个html元素：</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="html language-html hljs xml" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">strong</span>&gt;&lt;<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span> <span class="hljs-attr" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">href</span>=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“#py2”</span>&gt;</span>python进阶 <span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;/<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span>&gt;</span><br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span> <span class="hljs-attr" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">href</span>=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“#python3”</span>&gt;</span>python入门 <span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;/<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span>&gt;</span><br> &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span> <span class="hljs-attr" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">href</span>=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“#vce”</span>&gt;</span>vce解决方法 <span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;/<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span>&gt;</span><br> &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span> <span class="hljs-attr" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">href</span>=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“demo06.html#new”</span> <span class="hljs-attr" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">target</span>=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“_blank”</span>&gt;</span>百度 <span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;/<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span>&gt;</span><br> &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span> <span class="hljs-attr" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">href</span>=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“mailto: <a href="mailto:2217532592@qq.com" target="_blank" rel="noopener">2217532592@qq.com</a>“</span>&gt;</span>反馈意见<span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;/<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span>&gt;</span><br> &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span> <span class="hljs-attr" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">href</span>=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“img/1.jpg”</span>&gt;</span>下载图片 <span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;/<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span>&gt;</span><br> &nbsp; &nbsp;<span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;/<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">strong</span>&gt;</span><br></code></pre></section><p>这样就可以用组来获取a标签的内容了：<strong>&lt;a .?&gt;(.<em>?)&lt;/a&gt;。</em></strong>？表示非贪婪哦！</p><p><br></p><p>re.findall(pattern,string,flags)：这个方法的前两个参数对你们来说都很熟悉了，第一个参数为正则表达式，第二个参数为要进行匹配的字符串，而第三个可选参数为匹配模式，有如下几种匹配模式：</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><ul style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px 0px 0px 30px; margin: 0px;" class=" list-paddingleft-2"><li><p><strong>re.I</strong>(re.IGNORECASE) ：使匹配对大小写不敏感</p></li><li><p><strong>re.L</strong>(re.LOCAL)：做本地化识别（locale-aware）匹配</p></li><li><p><strong>re.M</strong>(re.MULTILINE)：多行匹配，影响 ^ 和 $</p></li><li><p><strong>re.S</strong>(re.DOTALL)：使 <strong>.</strong> 匹配包括换行在内的所有字符(这个常用)</p></li><li><p><strong>re.U</strong>(re.UNICODE)：根据Unicode字符集解析字符。这个标志影响 \w, \W, \b, \B.</p></li><li><p><strong>re.X</strong>(re.VERBOSE)：该标志通过给予你更灵活的格式以便你将正则表达式写得更易于理解<br></p></li></ul></section><p><br></p><p>当需要写多个匹配模式时，可以用<strong> | </strong>分隔每个模式</p><p>代码如下：</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;">a=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘Java12Python89’</span><br>r=re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘python’</span>,a,re.I)<br>print(r)<br>a=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘hsjhj h123jfkksf hajkGH\nkj fjfk’</span><br>r=re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘.’</span>,a,re.I|re.S)<br>print(r)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br>[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘Python’</span>]<br>[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘h’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘s’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘j’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘h’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘j’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘ ‘</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘h’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘1’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘2’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘3’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘j’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘f’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘k’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘k’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘s’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘f’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘ ‘</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘h’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘a’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘j’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘k’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘G’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘H’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘\n’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘k’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘j’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘ ‘</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘f’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘j’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘f’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘k’</span>]<br></code></pre></section><p><br></p><p>正则除了可以用来检索字符串，还可以用来替换字符串，常见的可以用来替换那些文本中的空格，制表符和回车等，这些都是用一个正则就可以搞定的了。</p><p><br></p><p>python中用这个方法来进行正则替换<br></p><p><strong>re.sub(pattern,&nbsp;repl,&nbsp;string,&nbsp;count=0,&nbsp;flags=0)&nbsp;</strong></p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><ul style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px 0px 0px 30px; margin: 0px;" class=" list-paddingleft-2"><li><p><span style="font-size: inherit; color: inherit; line-height: inherit;">pattern ：正则表达式</span></p></li><li><p><span style="font-size: inherit; color: inherit; line-height: inherit;">repl ：替换后的字符串，可为函数</span></p></li><li><p><span style="font-size: inherit; color: inherit; line-height: inherit;">string ：要进行替换的字符串</span></p></li><li><p><span style="font-size: inherit; color: inherit; line-height: inherit;">count ：替换的次数，顺序为 从左往右，默认值为0，表示无限次。</span></p></li><li><p><span style="font-size: inherit; color: inherit; line-height: inherit;">falgs ： 匹配模式，和findall()差不多</span></p></li></ul><p>代码如下：</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> re<br>a=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘skjC#ksjfc#jkdsc#’</span><br>r=re.sub(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘c#’</span>,<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘gg’</span>,a)<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#返回值是替换后的字符串</span><br>print(r)<br>print(a)<br>r=re.sub(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘c#’</span>,<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘gg’</span>,a,<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">1</span>) <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 这个加了替换次数</span><br>print(r)<br>r=re.sub(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘c#’</span>,<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘gg’</span>,a,<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">1</span>,re.I) <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 加了匹配模式，忽视大小写</span><br>print(r)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br>skjC<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#ksjfggjkdsgg</span><br>skjC<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#ksjfggjkdsc#</span><br>skjggksjfc<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#jkdsc#</span><br></code></pre></section><p><br></p><p>我们试试第二个参数为函数的情况<br></p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-function" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">def</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">convert</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; color: rgb(255, 152, 35); word-wrap: inherit !important; word-break: inherit !important;">(value)</span>:</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#他是把对象传进去这个参数</span><br> &nbsp; &nbsp;print(value)<br> &nbsp; &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#可以通过group()方法来获取内容</span><br> &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">return</span> <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘!!’</span>+value.group()+<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“!!”</span><br>r=re.sub(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘c#’</span>,convert,a,flags=re.I)<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#接收个参数后，更改后的内容为他的返回值</span><br>print(r)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br>&lt;_sre.SRE_Match object; span=(<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">3</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">5</span>), match=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘C#’</span>&gt;<br>&lt;_sre.SRE_Match object; span=(<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">9</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">11</span>), match=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘c#’</span>&gt;<br>&lt;_sre.SRE_Match object; span=(<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">15</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">17</span>), match=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘c#’</span>&gt;<br>skj!!C<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#!!ksjf!!c#!!jkds!!c#!!</span><br></code></pre></section><p><br></p><p>这个第二个参数为convert函数，里面的<strong>.group() </strong>方法是获取匹配后的字符串的值，所以我们就可以根据匹配后的字符串来进行相对应的替换内容，比如这个简单的小需求：</p><p>把字符串中的数字大于50的改为99，小于的就改为11。</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;">a=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘ds+45sd78asd12568asd45asd74ew+9ddf12sd45’</span><br><span class="hljs-function" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">def</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">func</span><span class="hljs-params" style="font-size: inherit; line-height: inherit; color: rgb(255, 152, 35); word-wrap: inherit !important; word-break: inherit !important;">(value)</span>:</span><br> &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">if</span> int(value.group())&gt;<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">50</span>:<br> &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">return</span> <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘99’</span><br> &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">else</span>:<br> &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">return</span> <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘11’</span><br><br>r=re.sub(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘\d{1,2}’</span>,func,a)<br>print(r)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br>ds+<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">11</span>sd99asd119911asd11asd99ew+<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">11</span>ddf11sd11<br></code></pre></section><p><br></p></section><p><strong></strong>另谈两个函数</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><ul style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px 0px 0px 30px; margin: 0px;" class=" list-paddingleft-2"><li><p><span style="font-size: inherit; color: inherit; line-height: inherit;">re.match(pattern,string,flags) ：这个是从字符串的首个字母开始匹配，若首个字母不符合，就会返回None, 反之返回一个 Match对象。而他只会匹配第一个结果，不会返回所有符合结果的内容。参数内容与findall()方法一样。</span></p></li><li><p><span style="font-size: inherit; color: inherit; line-height: inherit;">re.search(pattern,string,flags) ：这个与match方法差不多，不过不是从首字符开始匹配，也是只返回一个正确的匹配内容。</span></p></li></ul></section><p><br></p><p>代码：</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> re<br>a=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘pythonphpjavacphp’</span><br>r=re.match(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘php’</span>,a)<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#这个一开始没有就返回None</span><br>print(r)<br>r=re.search(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘php’</span>,a)<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#这个搜索到之后就返回一个对象</span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#返回的对象可以通过group()方法来获取他的内容</span><br>print(r)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取匹配内容</span><br>print(r.group())<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">None</span><br>&lt;_sre.SRE_Match object; span=(<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">6</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">9</span>), match=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘php’</span>&gt;<br>php<br></code></pre></section><p><br></p><p>这两个函数返回的内容的几个属性：</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><ul style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px 0px 0px 30px; margin: 0px;" class=" list-paddingleft-2"><li><p><span style="font-size: inherit; color: inherit; line-height: inherit;">group() ：获取匹配的内容</span></p></li><li><p><span style="font-size: inherit; color: inherit; line-height: inherit;">statr() ：获取到匹配字符的起始位置</span></p></li><li><p><span style="font-size: inherit; color: inherit; line-height: inherit;">end() ：获取匹配到字符的结束位置</span></p></li><li><p><span style="font-size: inherit; color: inherit; line-height: inherit;">span() ：获取匹配到字符的起始和结束位置，元组形式返回。</span></p></li></ul></section><p><br></p><p>前面提到组的概念，试下这两个方法的组的用法：</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> re<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#获取life和python之间的内容</span><br>a=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘life is short,i use python’</span><br>r=re.search(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘life(.)python’</span>,a,re.S)<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#用小括号的就是一组</span><br>print(r.group(<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">1</span>))<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#这个下标1就是对应的中间部分</span><br><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#也可以获取中间的两部分</span><br>a=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘javawoshipythonjunephp’</span><br>r=re.search(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘java(.<em>)python(.</em>)php’</span>,a)<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#两个小括号就是分成了两组</span><br>print(r.group(<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">1</span>),r.group(<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">2</span>))<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#分别打印第一第二组</span><br>print(r.groups())<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#这个获取所有分组信息</span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">is</span> short,i use <br>woshi june<br>(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘woshi’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘june’</span>)<br></code></pre></section><p>上面的代码注释已经很清楚了，还有个group()方法是获取整个正则匹配的内容，不按分组。match()方法也一样，就不演示了。</p><p><br></p><p>最后一个问题：怎样拆分含有多种分隔符的字符串？<br></p><p>比如：<strong>kfs;hsji’fhsikf<em>bhsfk=jsf/shj</em></strong>。要将不属于字母的都去掉，你是不是会想到用字符串的循环，然后再一个一个分割出来？我告诉你，学了正则之后，再也不用这么麻烦了。re库里面有个split()方法，如下：</p><p><br></p><p><strong>re.split(pattern, string, maxsplit=0)</strong>，参数看名字应该就能知道。直接一行代码进行分割：</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;">a = <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘kfs;hsjifhsikfbhsfk=jsf/shj’</span><br>r = re.split(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘[;*=/]’</span>, a)<br>print(r)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br>[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘kfs’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘hsjifhsikf’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘bhsfk’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘jsf’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘shj’</span>]<br></code></pre></section><p>是不是很完美？所以说正则必须得学！</p><p><br></p><section class="_editor"><section style="border: 0px none; box-sizing: border-box;"><section style="margin: 10px 0px; padding: 0px; text-align: center; font-family: 微软雅黑; box-sizing: border-box;"><section class="_brush 96wx-bdrc" style="margin: 0px; padding: 0px; height: 24px; border-right: 1px solid rgb(245, 189, 209); border-left: 1px solid rgb(245, 189, 209); box-sizing: border-box;"></section><section class="_brush" style="margin-top: -12px; margin-bottom: -12px; padding: 0px; border-bottom: 1px solid rgb(245, 189, 209); box-sizing: border-box;"></section><section style="margin: 0px; padding: 0px; display: inline-block; box-sizing: border-box;"><section class="96wx-bdrc" style="margin: 0px; padding: 0px; border-right: 15px solid rgb(245, 189, 209); border-top: 12px solid transparent; border-bottom: 12px solid transparent; height: 0px; width: 0px; float: left; box-sizing: border-box;"></section><section class="96_bgc" style="margin: 0px; padding: 0px; height: 24px; min-width: 4em; color: rgb(255, 255, 255); line-height: 24px; float: left; background-color: rgb(245, 189, 209); box-sizing: border-box;"><span style="color:inherit;font-size:12px">END</span></section><section class="_brush" style="margin: 0px; padding: 0px; border-left: 15px solid rgb(245, 189, 209); border-top: 12px solid transparent; height: 0px; width: 0px; float: left; border-bottom: 12px solid transparent; box-sizing: border-box;"></section></section></section></section></section><p>这个正则复杂点的已经说完了，还有些进阶的，不过暂时没有用到，就不打算说了，需要的可以去百度看看哈！<br></p><p><br></p><p>留个小练习证明自己正则学得好怎么样：</p><p><a href="mailto:1.kevintian126@126.com" target="_blank" rel="noopener">1.kevintian126@126.com</a>&nbsp;</p><p>2. <a href="mailto:1136667341@qq.com" target="_blank" rel="noopener">1136667341@qq.com</a>&nbsp;</p><p>3. <a href="mailto:meiya@cn-meiya.com" target="_blank" rel="noopener">meiya@cn-meiya.com</a>&nbsp;</p><p>4. <a href="mailto:wq901200@hotmail.com" target="_blank" rel="noopener">wq901200@hotmail.com</a>&nbsp;</p><p>5. <a href="mailto:meiyahr@163.com" target="_blank" rel="noopener">meiyahr@163.com</a></p><p>6.&nbsp;<a href="mailto:meiyuan@0757info.com" target="_blank" rel="noopener">meiyuan@0757info.com</a>&nbsp;</p><p>7. <a href="mailto:chingpeplo@sina.com" target="_blank" rel="noopener">chingpeplo@sina.com</a>&nbsp;</p><p>8. <a href="mailto:tony@erene.com.com" target="_blank" rel="noopener">tony@erene.com.com</a></p><p>9. <a href="mailto:melodylu@buynow.com" target="_blank" rel="noopener">melodylu@buynow.com</a></p><p><br></p><p>用正则把上面的@与com之间的内容匹配出来，可以把你的答案写在留言区上，过两天在留言区公布答案哈！</p><p><br></p><p><span style="font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;">上述文章如有错误欢迎在留言区指出，如果这篇文章对你有用，点个赞，转个发如何？</span></p><p><br></p><section class="_editor"><section><section style="height: 35px; display: inline-block; border-top: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); border-bottom: 1px solid rgb(0, 0, 0); padding: 0px 8px; font-weight: bold; line-height: 35px; vertical-align: middle; box-sizing: border-box;"></section><section style="padding-right: 8px; padding-left: 8px; color: rgb(0, 0, 0); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: medium; white-space: normal; height: 35px; display: inline-block; border-top: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); border-bottom: 1px solid rgb(0, 0, 0); font-weight: bold; line-height: 35px; vertical-align: middle; word-break: normal !important; box-sizing: border-box;">MORE</section><section style="padding-right: 8px; padding-left: 8px; color: rgb(0, 0, 0); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: medium; white-space: normal; height: 35px; display: inline-block; border-top: 1px solid rgb(0, 0, 0); border-bottom: 1px solid rgb(0, 0, 0); line-height: 35px; vertical-align: middle; word-break: normal !important; box-sizing: border-box;">延伸阅读</section><section style="padding-right: 15px; padding-left: 15px; color: rgb(0, 0, 0); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif; font-size: medium; white-space: normal; line-height: 2em; word-break: normal !important; box-sizing: border-box;"><p style="word-break: normal !important;"><span style="text-decoration-line: underline; word-break: normal !important;">◐◑<a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483725&amp;idx=1&amp;sn=82eccd84b4f23745427e1c6e963e1b37&amp;chksm=fb4a7be1cc3df2f7ec707f24ff7952b7558ea4cbb79b9bb533a5297977c808327728d3f23106&amp;scene=21#wechat_redirect" target="_blank" style="word-break: normal !important;" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483725&amp;idx=1&amp;sn=82eccd84b4f23745427e1c6e963e1b37&amp;chksm=fb4a7be1cc3df2f7ec707f24ff7952b7558ea4cbb79b9bb533a5297977c808327728d3f23106&amp;scene=21#wechat_redirect">爬虫必学知识之正则表达式上篇</a><span style="color: rgb(79, 129, 189); font-size: 16px; word-break: normal !important;"></span></span></p><p style="word-break: normal !important;"><span style="text-decoration-line: underline; word-break: normal !important;">◐◑&nbsp;<a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483720&amp;idx=1&amp;sn=4567a228e1bcca2dcb4c23f0feac39b3&amp;chksm=fb4a7be4cc3df2f234c5b7102f107e72df42a24575dd5d735fb203dddf02ca6e2d3b2b41ce28&amp;scene=21#wechat_redirect" target="_blank" style="word-break: normal !important;" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483720&amp;idx=1&amp;sn=4567a228e1bcca2dcb4c23f0feac39b3&amp;chksm=fb4a7be4cc3df2f234c5b7102f107e72df42a24575dd5d735fb203dddf02ca6e2d3b2b41ce28&amp;scene=21#wechat_redirect">python爬虫常用库之requests详解</a></span></p><p style="word-break: normal !important;"><span style="text-decoration-line: underline; word-break: normal !important;">◐◑&nbsp;<a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483653&amp;idx=1&amp;sn=7ce8f8fd19e408157937e219075f977b&amp;chksm=fb4a7ba9cc3df2bfca92eb5f53a79fbd9716f81df96070232a37919e6b83d020a470892d3b40&amp;scene=21#wechat_redirect" target="_blank" style="word-break: normal !important;" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483653&amp;idx=1&amp;sn=7ce8f8fd19e408157937e219075f977b&amp;chksm=fb4a7ba9cc3df2bfca92eb5f53a79fbd9716f81df96070232a37919e6b83d020a470892d3b40&amp;scene=21#wechat_redirect">python使用requests+re简单入门爬虫</a></span></p></section><section style="padding: 0px 15px; line-height: 2em; box-sizing: border-box;"><p style="margin:0px;padding:0px;"><br></p></section></section></section><p style="text-align: center;"><img style="border-radius: 5px; border: 1px dashed rgb(168, 164, 171); box-shadow: rgba(0, 0, 0, 0.33) 6px 6px 5px 0px; margin-bottom: 1.4px; visibility: visible !important; width: 111.297px !important;" src="http://pic.96weixin.com/upload/image2/vip/881679/1803/1803114089.png" height="auto" border="0" alt="1803114089.png" _src="http://pic.96weixin.com/upload/image2/vip/881679/1803/1803114089.png" title="undefined"><br></p><p style="text-align: center;"><br></p><p style="text-align: center;"><span style="font-size: 14px;">日常学python</span></p><p style="text-align: center;"><span style="font-size: 14px;">代码不止bug，还有美和乐趣</span></p><p></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;section class=&quot;_editor&quot;&gt;&lt;p class=&quot;_brush&quot; style=&quot;margin: 0px auto; max-width: 600px; word-wrap: normal; min-height: 1em; border: 1px sol
      
    
    </summary>
    
      <category term="python" scheme="http://sergiojune.com/categories/python/"/>
    
    
      <category term="爬虫" scheme="http://sergiojune.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="正则表达式" scheme="http://sergiojune.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>爬虫必学知识之正则表达式上篇</title>
    <link href="http://sergiojune.com/2018/08/07/%E7%88%AC%E8%99%AB%E5%BF%85%E5%AD%A6%E7%9F%A5%E8%AF%86%E4%B9%8B%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B8%8A%E7%AF%87/"/>
    <id>http://sergiojune.com/2018/08/07/爬虫必学知识之正则表达式上篇/</id>
    <published>2018-08-07T00:43:41.697Z</published>
    <updated>2018-08-06T08:53:50.940Z</updated>
    
    <content type="html"><![CDATA[<p><section class="_editor"><p class="_brush" style="margin: 0px auto; max-width: 600px; word-wrap: normal; min-height: 1em; border: 1px solid rgb(95, 170, 255); font-family: 微软雅黑; font-size: 12px; border-radius: 2em; box-sizing: border-box !important; text-align: center;"><span style="color: rgb(255, 0, 0);">这是日常学python的第12篇文章</span><br></p></section></p><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;">在向网页进行了提交请求之类的之后，我们可以得到了网页的返回内容，里面自然而然会有我们想要的数据，但是html元素文本这么多，我们不可能一 一去找我们需要的数据，这时就需要用到正则表达式了，正则表达式是学爬虫必须学的内容，而且不止python可以用，java等其他语言都可以用，所以学了好处大大。</p><p><br></p><p style="letter-spacing: 2px;"><strong>什么是正则表达式？</strong></p><p style="letter-spacing: 2px;"><br></p><p style="letter-spacing: 2px;">正则表达式就是一个特殊的字符序列，可以用于检测一个字符串是否与我们的所设定的字符串相匹配。功能有快速检索文本和快速替换一些文本的操作。</p><p><br></p><p style="letter-spacing: 2px;" class="">python里面有个处理正则表达式的库 <strong>re。</strong>有个方法</p><p style="letter-spacing: 2px;" class=""><br></p><p style="letter-spacing: 2px;" class=""><strong>findall(pattern,string,flags)</strong></p><p style="letter-spacing: 2px;" class=""><br></p><p style="letter-spacing: 2px;" class="">用来匹配正则达式，我们就先用这个方法处理下。</p><p style="letter-spacing: 2px;">参数如下：</p><p style="letter-spacing: 2px;"><br></p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><ul style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px 0px 0px 30px; margin: 0px;" class=" list-paddingleft-2"><li><p><span style="font-size: inherit; color: inherit; line-height: inherit;">pattern：正则表达式</span></p></li><li><p><span style="font-size: inherit; color: inherit; line-height: inherit;">string：要进行匹配的字符串</span></p></li><li><p><span style="font-size: inherit; color: inherit; line-height: inherit;">flags：匹配的模式</span></p></li></ul></section><p style="letter-spacing: 2px;">结果是一个匹配内容的列表</p><p><br></p><section class="_editor"><section style="margin-top: 3px;margin-bottom: 20px;"><section><section style="width: 30px;margin-right: auto;margin-left: auto;"><img data-ratio="1.1115384615384616" src="http://newcdn.96weixin.com/mmbiz.qpic.cn/mmbiz_jpg/Ljib4So7yuWjauTdbzQb2ZYv9xTWWaw0rW661wnMfLNSR1GACq0wJo2piaaxvGFMvBf9Kj5wicwWlQtdmr6Vheo4g/640?wx_fmt=jpeg" data-type="jpeg" data-w="260" data-width="100%" style="width:100%;vertical-align: middle;" _src="http://newcdn.96weixin.com/mmbiz.qpic.cn/mmbiz_jpg/Ljib4So7yuWjauTdbzQb2ZYv9xTWWaw0rW661wnMfLNSR1GACq0wJo2piaaxvGFMvBf9Kj5wicwWlQtdmr6Vheo4g/640?wx_fmt=jpeg"></section></section><section style="height:2px;background-color:#3b3a4d;margin-top:-18px;"></section></section></section><p style="letter-spacing: 0px;">‘\d’ : 这个表示匹配单个0-9数字</p><p>‘\D’ : 与\d相反，匹配数字以外的内容</p><p>用代码来感受下：</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> re<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#这个库是用来使用正则表达式的</span><br>a=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘sg+sga5g45gaae3f23hgt13’</span><br>r=re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘\d’</span>,a)<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#这个就是根据\d的正则表达式来查找对应字符，其中\d是对应0-9的数字</span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#查找非数字用\D</span><br>r1=re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘\D’</span>,a)<br>print(r)<br>print(r1)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#结果</span><br>[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘5’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘4’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘5’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘3’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘2’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘3’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘1’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘3’</span>]<br>[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘s’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘g’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘+’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘s’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘g’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘a’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘g’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘g’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘a’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘a’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘e’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘f’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘h’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘g’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘t’</span>]<br></code></pre></section><p><br></p><p>可以看到找出了字符串中的数字和非数字</p><p><br></p><p>如果我们在匹配一个字符串时，中间内容是有多个变化的，我们需要应变多种不同的字符，如这个字符串</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;">a=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘abc,acc,agc,anc,afc,adc,aec’</span><br></code></pre></section><p>如果需要匹配这个字符串时，我们就需要用到&nbsp;<strong>[ ]&nbsp;</strong>,用中括号括起来的字符，里面的内容表示或关系，那来看看代码</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> re<br>a=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘abc,acc,agc,anc,afc,adc,aec’</span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#现在查找上面的中间字符为c或者f的字符串</span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#这个要求可以用到字符集来实现</span><br>r=re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘a[cf]c’</span>,a)<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#[]表示字符集，里面的内容是或关系</span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br>[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘acc’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘afc’</span>]<br></code></pre></section><p><br></p><p>上面匹配了中间字符是c或者是f的字符串，匹配中间字符非c和非f,可以在前面加个<strong> ^</strong> 符号</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> re<br>r=re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘a[……cf]c’</span>,a)<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#[c-f]就是表示从c到f</span><br>print(r)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br>[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘abc’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘agc’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘anc’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘adc’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘aec’</span>]<br></code></pre></section><p><br></p><p><br></p><p>上面只处理了中间字符为chu者f的字符串，但是没有匹配全部的，若要匹配全部，可以加个<strong> - </strong>符号，表示范围，如下</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> re<br>r=re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘a[b-n]c’</span>,a)<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#[c-f]就是表示从c到f</span><br>print(r)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br>[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘abc’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘acc’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘agc’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘anc’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘afc’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘adc’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘aec’</span>]<br></code></pre></section><p><br></p><p><strong>[b-n]</strong>:这个就是表示b到n的字符</p><p><br></p><p>匹配汉字：<strong>[\u4E00-\u9FA5]</strong></p><p><br></p><p><br></p><p><strong>概括字符集：</strong></p><p style="text-indent: 2em;">用一个<strong> \ + 字母&nbsp;</strong>表示一系列的字符的元字符，只能匹配单个字符，常用的如下</p><p style="text-indent: 2em;"><br></p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><ul style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px 0px 0px 30px; margin: 0px;" class=" list-paddingleft-2"><li><p><strong><span style="font-size: inherit; color: inherit; line-height: inherit;">\w</span></strong><span style="font-size: inherit; color: inherit; line-height: inherit;">：</span><span style="font-size: inherit; color: inherit; line-height: inherit;">匹配数字和字符「不包括&amp;符号」只匹配单词，数字和下划线</span></p></li><li><p><strong>\W</strong>：与\w相反，这个包括空格和回车</p></li><li><p><strong>\s</strong>：匹配空格字符，如空格，回车和制表符</p></li><li><p><strong>\S</strong>：与\s相反</p></li><li><p><strong>.</strong>：匹配除换行符之外的其他字符</p></li><li><p>还有前面的<strong>\d</strong>和<strong>\D</strong>也是</p></li></ul></section><p style="text-indent: 0em;"><br></p><p>有个小技巧：如果想要匹配所有字符，就可以把上面的两个相反的合并起来就可以了。</p><p><br></p><p>代码如下：</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#概括字符集,就是用一个\加个字母来表示一类字符，比如刚开始的\d,\D</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> re<br>a=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘hdsk\n122\rs3$ dkl%df36\t5&amp;’</span><br>r=re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘\w’</span>,a)<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#这个是匹配数字和单词</span><br>print(r)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#也可以匹配非数字非单词</span><br>r=re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘\W’</span>,a)<br>print(r)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#匹配空格字符和制表符等其他字符</span><br>r=re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘\s’</span>,a)<br>print(r)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#匹配除换行符之外的其他字符</span><br>r=re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘.’</span>,a)<br>print(r)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br>[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘h’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘d’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘s’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘k’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘1’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘2’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘2’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘s’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘3’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘d’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘k’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘l’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘d’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘f’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘3’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘6’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘5’</span>]<br>[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘\n’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘\r’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘$’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘ ‘</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘%’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘\t’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘&amp;’</span>]<br>[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘\n’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘\r’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘ ‘</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘\t’</span>]<br>[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘h’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘d’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘s’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘k’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘1’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘2’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘2’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘\r’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘s’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘3’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘$’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘ ‘</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘d’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘k’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘l’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘%’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘d’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘f’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘3’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘6’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘\t’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘5’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘&amp;’</span>]<br></code></pre></section><p><br></p><p><br></p><p><strong>数量词：</strong></p><p style="text-indent: 2em;">当一个字符需要连续重复匹配多次时，就要用到这个。如匹配三个字符组成的字符串：</p><p style="text-indent: 0em;"><strong>[a-zA-z]{3}</strong>&nbsp;，大括号里面的表示重复次数。<br></p><p style="text-indent: 0em;">若要匹配三到六个字符，大括号的就需要这样写：<strong style="text-indent: 0em;">{3,6}.</strong></p><p style="text-indent: 0em;">代码如下;</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#数量词，当一个字符需要多次重复匹配时就需要用到</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> re<br>a=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘python java111php23 html’</span><br>r=re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘[a-z]{3}’</span>,a)<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#重复多次就用大括号，括号内的数表示重复的次数</span><br>print(r)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#也可以重复一个范围，表示匹配3到6个字符</span><br>r=re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘[a-z]{3,6}’</span>,a)<br>print(r)<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#这样就可以把单词都找出来了</span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br>[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘pyt’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘hon’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘jav’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘php’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘htm’</span>]<br>[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘python’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘java’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘php’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘html’</span>]<br></code></pre></section><p style="text-indent: 0em;"><br></p><p style="text-indent: 0em;">其他数量词表示：</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><ul style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px 0px 0px 30px; margin: 0px;" class=" list-paddingleft-2"><li><p><strong><span style="font-size: inherit; color: inherit; line-height: inherit;"><em></em></span></strong><span style="font-size: inherit; color: inherit; line-height: inherit;"> ：匹配零次或无限多次</span></p></li><li><p><strong><span style="font-size: inherit; color: inherit; line-height: inherit;">+</span></strong><span style="font-size: inherit; color: inherit; line-height: inherit;">：匹配一次或以上</span></p></li><li><p><strong>?</strong>：匹配零次或者一次</p></li></ul><p><br></p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;">a=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘pytho243python34pythonn’</span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#表示匹配对应内容0次或者无限次</span><br>r=re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘python*’</span>,a)<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#这个就是代表对n字符的数量词匹配</span><br>print(r)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#+表示匹配内容1次或者无限次</span><br>r=re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘python+’</span>,a)<br>print(r)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#?表示可以匹配0次或者1次,注意这个？和上面的非贪婪代表的意思不一样</span><br>r=re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘python?’</span>,a)<br>print(r)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br>[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘pytho’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘python’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘pythonn’</span>]<br>[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘python’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘pythonn’</span>]<br>[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘pytho’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘python’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘python’</span>]<br></code></pre></section><p><br></p></section><p style="text-indent: 0em;"><strong>贪婪匹配：</strong>正则表达式默认为贪婪匹配，即匹配符合字符串的最大长度，如上面的[a-zA-z]{3,6}，他会趋于匹配长度为6的字符串，匹配到条件不满足时才停止匹配。</p><p style="text-indent: 0em;"><strong>非贪婪匹配：</strong>就是趋于匹配长度最小的字符串，匹配满足第一个条件就会停止匹配</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;">r=re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘[a-z]{3,6}’</span>,a)<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 贪婪匹配</span><br>print(r)<br>r=re.findall(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘[a-z]{3,6}?’</span>,a)<br>print(r)<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#由于是非贪婪，所以匹配当第一个条件满足时就停止匹配</span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br>[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘python’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘java’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘php’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘html’</span>]<br>[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘pyt’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘hon’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘jav’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘php’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘htm’</span>]<br></code></pre></section><p style="text-indent: 0em;"><br></p><section class="_editor"><section style="border: 0px none; box-sizing: border-box;"><section style="margin: 10px 0px; padding: 0px; text-align: center; font-family: 微软雅黑; box-sizing: border-box;"><section class="_brush 96wx-bdrc" style="margin: 0px; padding: 0px; height: 24px; border-right: 1px solid rgb(245, 189, 209); border-left: 1px solid rgb(245, 189, 209); box-sizing: border-box;"></section><section class="_brush" style="margin-top: -12px; margin-bottom: -12px; padding: 0px; border-bottom: 1px solid rgb(245, 189, 209); box-sizing: border-box;"></section><section style="margin: 0px; padding: 0px; display: inline-block; box-sizing: border-box;"><section class="96wx-bdrc" style="margin: 0px; padding: 0px; border-right: 15px solid rgb(245, 189, 209); border-top: 12px solid transparent; border-bottom: 12px solid transparent; height: 0px; width: 0px; float: left; box-sizing: border-box;"></section><section class="96_bgc" style="margin: 0px; padding: 0px; height: 24px; min-width: 4em; color: rgb(255, 255, 255); line-height: 24px; float: left; background-color: rgb(245, 189, 209); box-sizing: border-box;"><span style="color:inherit;font-size:12px">END</span></section><section class="_brush" style="margin: 0px; padding: 0px; border-left: 15px solid rgb(245, 189, 209); border-top: 12px solid transparent; height: 0px; width: 0px; float: left; border-bottom: 12px solid transparent; box-sizing: border-box;"></section></section></section></section></section><p style="text-indent: 0em;">这篇文章只是介绍了下正则表达式的简单用法，可以用来入门正则，下一篇文章讲正则表达式高级点的用法。</p><p style="text-indent: 0em;"><br></p><p style="text-indent: 0em;"><br></p><p style="text-indent: 0em;"><br></p><p style="text-indent: 0em;">留个小练习：写一个正则来匹配生日，字符串为：</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><ul style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px 0px 0px 30px; margin: 0px;" class=" list-paddingleft-2"><li><p><span style="font-size: inherit; color: inherit; line-height: inherit;">2005-06-09</span></p></li><li><p><span style="font-size: inherit; color: inherit; line-height: inherit;">2005-6-9</span></p></li><li><p><span style="font-size: inherit; color: inherit; line-height: inherit;">2005 6 9</span></p></li><li><p><span style="font-size: inherit; color: inherit; line-height: inherit;">2005，06，09</span></p></li></ul><p>可以把答案写在留言区哈！</p><p><br></p><p>上述文章如有错误欢迎在留言区指出，如果这篇文章对你有用，点个赞，转个发如何？</p><p><br></p><section class="_editor"><section><br></section></section></section><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; letter-spacing: 0px; white-space: normal; line-height: 1.6; word-break: normal !important;"><section class="_editor" style="max-width: 100%; word-break: normal !important;"><section style="word-break: normal !important;"><section style="padding-right: 8px; padding-left: 8px; height: 35px; display: inline-block; border-top: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); border-bottom: 1px solid rgb(0, 0, 0); font-weight: bold; line-height: 35px; vertical-align: middle; word-break: normal !important; box-sizing: border-box;">MORE</section><section style="padding-right: 8px; padding-left: 8px; height: 35px; display: inline-block; border-top: 1px solid rgb(0, 0, 0); border-bottom: 1px solid rgb(0, 0, 0); line-height: 35px; vertical-align: middle; word-break: normal !important; box-sizing: border-box;">延伸阅读</section><section style="padding-right: 15px; padding-left: 15px; line-height: 2em; word-break: normal !important; box-sizing: border-box;"><p style="word-break: normal !important;"><span style="text-decoration-line: underline; word-break: normal !important;">◐◑<a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483720&amp;idx=1&amp;sn=4567a228e1bcca2dcb4c23f0feac39b3&amp;chksm=fb4a7be4cc3df2f234c5b7102f107e72df42a24575dd5d735fb203dddf02ca6e2d3b2b41ce28&amp;scene=21#wechat_redirect" target="_blank" style="word-break: normal !important;" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483720&amp;idx=1&amp;sn=4567a228e1bcca2dcb4c23f0feac39b3&amp;chksm=fb4a7be4cc3df2f234c5b7102f107e72df42a24575dd5d735fb203dddf02ca6e2d3b2b41ce28&amp;scene=21#wechat_redirect">python爬虫常用库之requests详解</a><span style="color: rgb(79, 129, 189); font-size: 16px; word-break: normal !important;"></span></span></p><p style="word-break: normal !important;"><span style="text-decoration-line: underline; word-break: normal !important;">◐◑&nbsp;<a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483653&amp;idx=1&amp;sn=7ce8f8fd19e408157937e219075f977b&amp;chksm=fb4a7ba9cc3df2bfca92eb5f53a79fbd9716f81df96070232a37919e6b83d020a470892d3b40&amp;scene=21#wechat_redirect" target="_blank" style="word-break: normal !important;" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483653&amp;idx=1&amp;sn=7ce8f8fd19e408157937e219075f977b&amp;chksm=fb4a7ba9cc3df2bfca92eb5f53a79fbd9716f81df96070232a37919e6b83d020a470892d3b40&amp;scene=21#wechat_redirect">python使用requests+re简单入门爬虫</a></span></p><p style="word-break: normal !important;"><span style="text-decoration-line: underline; word-break: normal !important;">◐◑<a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483712&amp;idx=1&amp;sn=56ba3e5559bace77583492e7ac2d84cf&amp;chksm=fb4a7beccc3df2fa51260d5aa99918d45c63a753da68a3882a8c3d005777800212736637c50c&amp;scene=21#wechat_redirect" target="_blank" style="word-break: normal !important;" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483712&amp;idx=1&amp;sn=56ba3e5559bace77583492e7ac2d84cf&amp;chksm=fb4a7beccc3df2fa51260d5aa99918d45c63a753da68a3882a8c3d005777800212736637c50c&amp;scene=21#wechat_redirect">python爬虫常用库之urllib详解</a></span></p></section></section></section></section><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; text-align: center; word-break: normal !important;"><img src="http://newcdn.96weixin.com/mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWibk74yshaibAJSsAyOqweS8j9QMoNNocZY6wxvibicjWWu2rsZSNYGnCyJ93hZia9KtodsOrkyaA0z0bg/0?wx_fmt=png" height="auto" border="0" alt="1803114089.png" title="undefined" data-ratio="1.023076923076923" data-w="130" data-type="png" style="margin-bottom: 1.4px; border-radius: 5px; border-width: 1px; border-style: dashed; border-color: rgb(168, 164, 171); box-shadow: rgba(0, 0, 0, 0.33) 6px 6px 5px 0px; word-break: normal !important; visibility: visible !important; width: 111.297px !important;" _src="http://newcdn.96weixin.com/mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWibk74yshaibAJSsAyOqweS8j9QMoNNocZY6wxvibicjWWu2rsZSNYGnCyJ93hZia9KtodsOrkyaA0z0bg/0?wx_fmt=png"><br style="word-break: normal !important;"></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; text-align: center; word-break: normal !important;"><span style="font-size: 14px; word-break: normal !important;">日常学python<br style="word-break: normal !important;"></span></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; text-align: center; word-break: normal !important;"><span style="font-size: 14px; word-break: normal !important;">代码不止bug,还有美和乐趣</span></p><p></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;section class=&quot;_editor&quot;&gt;&lt;p class=&quot;_brush&quot; style=&quot;margin: 0px auto; max-width: 600px; word-wrap: normal; min-height: 1em; border: 1px sol
      
    
    </summary>
    
      <category term="python" scheme="http://sergiojune.com/categories/python/"/>
    
    
      <category term="爬虫" scheme="http://sergiojune.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="正则表达式" scheme="http://sergiojune.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>老司机带你用python来爬取妹子图</title>
    <link href="http://sergiojune.com/2018/08/07/%E8%80%81%E5%8F%B8%E6%9C%BA%E5%B8%A6%E4%BD%A0%E7%94%A8python%E6%9D%A5%E7%88%AC%E5%8F%96%E5%A6%B9%E5%AD%90%E5%9B%BE/"/>
    <id>http://sergiojune.com/2018/08/07/老司机带你用python来爬取妹子图/</id>
    <published>2018-08-07T00:43:41.675Z</published>
    <updated>2018-08-06T08:53:50.927Z</updated>
    
    <content type="html"><![CDATA[<p><section class="_editor" data-mpa-powered-by="yiban.io" style="max-width: 100%; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><p class="_brush" style="margin-right: auto; margin-left: auto; max-width: 600px; word-wrap: normal; border-width: 1px; border-style: solid; border-color: rgb(95, 170, 255); font-family: 微软雅黑; font-size: 12px; border-radius: 2em; text-align: center; word-break: normal !important;"><span style="color: rgb(255, 0, 0); word-break: normal !important;">这是日常学python的第14篇原创文章</span></p></section></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">我前几篇文章都是说一些python爬虫库的用法，还没有说怎样利用好这些知识玩一些好玩的东西。那我今天带大家玩好玩又刺激的，嘻嘻！对了，requests库和正则表达式很重要的，一定要学会！一定要学会！！一定要学会！！！我现在的爬虫基本都是用这两样东西来爬的。所以学不学你看着办吧。</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">来到今天的重点，我今天发现一个网站很好爬的，非常适合新手，我没有设置请求头什么的爬了很多遍很没有封我ip和给我返回403之类的，所以他对我们第一次玩爬虫的人来说很友好。这个网站就是<strong style="word-break: normal !important;">今日头条</strong>。最重要的是这里面有很多美女图片，我们可以把它们爬下来！！！是不是想想都要流鼻血啊？</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">文章首发于公众号「日常学python」</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">我们今天要爬的就是他的图集，先看看网站。搜索美女，然后点击图集，可以看到下面这些内容<img data-s="300,640" data-type="png" src="https://mmbiz.qlogo.cn/mmbiz_png/BIPpxEvceWichEKjwpicG8pJJ8ghegTVvr1BxvCQiau0ehK8aenHF6ye4vhJEpY1icVyhAl8wl9B4ia5eMY06XiaM3Dw/0?wx_fmt=png" data-ratio="0.628482972136223" data-w="969" style="word-break: normal !important;" _src="https://mmbiz.qlogo.cn/mmbiz_png/BIPpxEvceWichEKjwpicG8pJJ8ghegTVvr1BxvCQiau0ehK8aenHF6ye4vhJEpY1icVyhAl8wl9B4ia5eMY06XiaM3Dw/0?wx_fmt=png"></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">我们要做的就是把上面的图片给爬下来。</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">那开始分析网站。按下f12，然后点击network，刷新下你可以看到这些<img data-s="300,640" data-type="png" src="https://mmbiz.qlogo.cn/mmbiz_png/BIPpxEvceWichEKjwpicG8pJJ8ghegTVvrrQEdXOhlznSLQLll2FKFgDAb9Kxjr86U5G7YIdibrc1jVajdibqGnFNg/0?wx_fmt=png" data-ratio="0.2916666666666667" data-w="1752" style="word-break: normal !important;" _src="https://mmbiz.qlogo.cn/mmbiz_png/BIPpxEvceWichEKjwpicG8pJJ8ghegTVvrrQEdXOhlznSLQLll2FKFgDAb9Kxjr86U5G7YIdibrc1jVajdibqGnFNg/0?wx_fmt=png"></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">进行寻找哪个请求返回这些图片的，在网页上可以看到图片会随着你下拉网页而进行显示更多的图片，这是动态加载的，所以可以轻松知道这个可以在xhr文件中找到，果然，你看<img data-s="300,640" data-type="png" src="https://mmbiz.qlogo.cn/mmbiz_png/BIPpxEvceWichEKjwpicG8pJJ8ghegTVvrm2ndblibZKric4PHFuG6l4McF80iaO8EMg4UScx1M0liaQsNxMPEvCgPfw/0?wx_fmt=png" data-ratio="0.1457725947521866" data-w="686" style="word-break: normal !important;" _src="https://mmbiz.qlogo.cn/mmbiz_png/BIPpxEvceWichEKjwpicG8pJJ8ghegTVvrm2ndblibZKric4PHFuG6l4McF80iaO8EMg4UScx1M0liaQsNxMPEvCgPfw/0?wx_fmt=png"></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">不断往下拉，不断地发送请求，点击这个请求看看是返回什么数据<img data-s="300,640" data-type="png" src="https://mmbiz.qlogo.cn/mmbiz_png/BIPpxEvceWichEKjwpicG8pJJ8ghegTVvrk4uibZTrW2byE363HWSxIbX0yVJWtRicME9DcQwhEPngBicO9BPlicu2Iw/0?wx_fmt=png" data-ratio="0.362874251497006" data-w="835" style="word-break: normal !important;" _src="https://mmbiz.qlogo.cn/mmbiz_png/BIPpxEvceWichEKjwpicG8pJJ8ghegTVvrk4uibZTrW2byE363HWSxIbX0yVJWtRicME9DcQwhEPngBicO9BPlicu2Iw/0?wx_fmt=png"><img data-s="300,640" data-type="png" src="https://mmbiz.qlogo.cn/mmbiz_png/BIPpxEvceWichEKjwpicG8pJJ8ghegTVvr8VkFeVicguqEBEOicGkdrzhsSicx60TRoQlk3ns7mLUfJoH8VNGX4fa9g/0?wx_fmt=png" data-ratio="0.21882640586797067" data-w="818" style="word-break: normal !important;" _src="https://mmbiz.qlogo.cn/mmbiz_png/BIPpxEvceWichEKjwpicG8pJJ8ghegTVvr8VkFeVicguqEBEOicGkdrzhsSicx60TRoQlk3ns7mLUfJoH8VNGX4fa9g/0?wx_fmt=png"></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">可以看到这是个json，里面有图片的url，这个就是我们要找的东西，那我们可以用json库来解析，还有这个网站是get请求，这样就可以用requests库来发送然后解析下就可以了，非常简单。</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">那么分析就到这里，直接上代码</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; letter-spacing: 0px; white-space: normal; line-height: 1.6; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; padding: 0.5em; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); word-wrap: normal !important; word-break: normal !important; display: block !important; overflow: auto !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> requests, os<br style="word-break: normal !important;">path_a = os.path.abspath(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘.’</span>)<br style="word-break: normal !important;">kw = <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘’</span><br style="word-break: normal !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">while</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">True</span>:<br style="word-break: normal !important;"> &nbsp; &nbsp;kw = input(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘请输入你要获取的图片(若想结束请输入1)’</span>)<br style="word-break: normal !important;"> &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">if</span> kw == <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘1’</span>:<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘已退出，你下载的图片已保存在’</span>+path_a+<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘,请查看！’</span>)<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">break</span><br style="word-break: normal !important;"> &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">for</span> x <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">in</span> range(<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">0</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">1000</span>, <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">20</span>):<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;url = <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="https://www.toutiao.com/search_content/?offset=&#39;" target="_blank" rel="noopener">https://www.toutiao.com/search_content/?offset=&#39;</a></span>+str(x)+<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘&amp;format=json&amp;keyword=%s&amp;autoload=true&amp;count=20&amp;cur_tab=3&amp;from=gallery’</span> % kw<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;response = requests.get(url)<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;data = response.json()[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘data’</span>]<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">if</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">not</span> data:<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘下载’</span>+kw+<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘图片完毕，请换个关键词继续’</span>)<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">break</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;n = <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">1</span> &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 记录文章数</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">for</span> atlas <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">in</span> data:<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 创建目录</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;title = atlas[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘title’</span>]<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;print(atlas)<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">try</span>:<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">if</span> title <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">not</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">in</span> os.listdir(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘.’</span>): &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 防止文件名已经存在</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;os.mkdir(title)<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">except</span> OSError <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">as</span> e:<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘文件名出错，创建目录失败，重新创建一个随机名字’</span>)<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;title = kw + <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘文件名出错’</span>+str(x)<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">if</span> title <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">not</span> <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">in</span> os.listdir(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘.’</span>):<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;os.mkdir(title)<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;k = <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">1</span> &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 记录下载的图片数</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;path = os.path.join(path_a, title)<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 转进图片目录</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;os.chdir(path)<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">for</span> image <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">in</span> atlas[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘image_list’</span>]: &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 这个链接获取的图片是小张的，看着不够爽，所以下面替换成大的图片</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;image_url = image[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘url’</span>].replace(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘list’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘large’</span>) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 改个链接获取大的图片</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;atlas = requests.get(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘http:’</span>+image_url).content<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">with</span> open(str(k)+<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘.jpg’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘wb’</span>) <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">as</span> f: &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 把图片写入文件内</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;f.write(atlas)<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘下载完第%d个文章的%d幅图完成’</span> % (x+n, k))<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;k += <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">1</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;n += <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">1</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 转出图片目录</span><br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;os.chdir(path_a)<br style="word-break: normal !important;"></code></pre></section><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">这个只用了requests库基本就能完成了，os库是用来操作文件目录的，这里就不详细说了。可以看到，代码量非常少，除开注释就大概四十行吧，是不是比其他语言简洁多了？是不是requests库很好用？这里可以充分体现了人生苦短，我用python的真理。</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">而且，他还可换关键字继续搜，你想搜什么照片都可以。</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">下篇文章写个requests库和正则来爬内容的文章，让你们感受下正则的强大！</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">最后给你们看下结果<img data-s="300,640" data-type="png" src="https://mmbiz.qlogo.cn/mmbiz_png/BIPpxEvceWichEKjwpicG8pJJ8ghegTVvrzqhB19fjFC3pbTF4fuumOUpLrha9mX2dTnwqwQlLKCdwpblpy2L7Bg/0?wx_fmt=png" data-ratio="0.6289104638619202" data-w="927" style="word-break: normal !important;" _src="https://mmbiz.qlogo.cn/mmbiz_png/BIPpxEvceWichEKjwpicG8pJJ8ghegTVvrzqhB19fjFC3pbTF4fuumOUpLrha9mX2dTnwqwQlLKCdwpblpy2L7Bg/0?wx_fmt=png"></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">不说那么多了，我要去买营养快线了。</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;">上述文章如有错误欢迎在留言区指出，如果这篇文章对你有用，点个赞，转个发如何？</p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><br></p><section style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><section style="word-break: normal !important;"><section style="padding-right: 8px; padding-left: 8px; height: 35px; display: inline-block; border-top: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); border-bottom: 1px solid rgb(0, 0, 0); font-weight: bold; line-height: 35px; vertical-align: middle; word-break: normal !important; box-sizing: border-box;">MORE</section><section style="padding-right: 8px; padding-left: 8px; height: 35px; display: inline-block; border-top: 1px solid rgb(0, 0, 0); border-bottom: 1px solid rgb(0, 0, 0); line-height: 35px; vertical-align: middle; word-break: normal !important; box-sizing: border-box;">延伸阅读</section><section style="padding-right: 15px; padding-left: 15px; line-height: 2em; word-break: normal !important; box-sizing: border-box;"><p style="word-break: normal !important;"><span style="text-decoration-line: underline; word-break: normal !important;">◐◑<a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483725&amp;idx=1&amp;sn=82eccd84b4f23745427e1c6e963e1b37&amp;chksm=fb4a7be1cc3df2f7ec707f24ff7952b7558ea4cbb79b9bb533a5297977c808327728d3f23106&amp;scene=21#wechat_redirect" target="_blank" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483725&amp;idx=1&amp;sn=82eccd84b4f23745427e1c6e963e1b37&amp;chksm=fb4a7be1cc3df2f7ec707f24ff7952b7558ea4cbb79b9bb533a5297977c808327728d3f23106&amp;scene=21#wechat_redirect" style="word-break: normal !important;">爬虫必学知识之正则表达式上篇</a><span style="color: rgb(79, 129, 189); word-break: normal !important;"></span></span></p><p style="word-break: normal !important;"><span style="text-decoration-line: underline; word-break: normal !important;">◐◑&nbsp;<a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483720&amp;idx=1&amp;sn=4567a228e1bcca2dcb4c23f0feac39b3&amp;chksm=fb4a7be4cc3df2f234c5b7102f107e72df42a24575dd5d735fb203dddf02ca6e2d3b2b41ce28&amp;scene=21#wechat_redirect" target="_blank" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483720&amp;idx=1&amp;sn=4567a228e1bcca2dcb4c23f0feac39b3&amp;chksm=fb4a7be4cc3df2f234c5b7102f107e72df42a24575dd5d735fb203dddf02ca6e2d3b2b41ce28&amp;scene=21#wechat_redirect" style="word-break: normal !important;">python爬虫常用库之requests详解</a></span></p><p style="word-break: normal !important;"><span style="text-decoration-line: underline; word-break: normal !important;">◐◑&nbsp;<a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483729&amp;idx=1&amp;sn=3af71892e67f9dd93e8e4dabc98c76b1&amp;chksm=fb4a7bfdcc3df2eb60858642aa905b5b5fccdafd100e9af1099b268e4ccb5b72170e19299423&amp;scene=21#wechat_redirect" target="_blank" style="word-break: normal !important;" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483729&amp;idx=1&amp;sn=3af71892e67f9dd93e8e4dabc98c76b1&amp;chksm=fb4a7bfdcc3df2eb60858642aa905b5b5fccdafd100e9af1099b268e4ccb5b72170e19299423&amp;scene=21#wechat_redirect">爬虫必学知识之正则表达式下篇</a></span></p><p style="word-break: normal !important;"><br></p><p style="word-break: normal !important;"><br></p></section></section></section><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; text-align: center; word-break: normal !important;"><img border="0" data-ratio="1.023076923076923" data-type="png" data-w="130" height="auto" title="undefined" _width="111.297px" src="https://mmbiz.qlogo.cn/mmbiz_png/BIPpxEvceWic7kTqqWcYlc513VaLSgic5P9bIBwdybZBf6KpAX6nhqeHkC0cW2KfQgGCiaREUD1uxt6nLhSO2bWsg/640" data-fail="0" style="margin-bottom: 1.4px; border-radius: 5px; border-width: 1px; border-style: dashed; border-color: rgb(168, 164, 171); box-shadow: rgba(0, 0, 0, 0.33) 6px 6px 5px 0px; word-break: normal !important; visibility: visible !important; width: 111.297px !important;" _src="https://mmbiz.qlogo.cn/mmbiz_png/BIPpxEvceWic7kTqqWcYlc513VaLSgic5P9bIBwdybZBf6KpAX6nhqeHkC0cW2KfQgGCiaREUD1uxt6nLhSO2bWsg/640"><br style="word-break: normal !important;"></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; text-align: center; word-break: normal !important;"><br></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; text-align: center; word-break: normal !important;"><span style="font-size: 14px; word-break: normal !important;">日常学python</span></p><p style="color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; text-align: center; word-break: normal !important;"><span style="font-size: 14px; word-break: normal !important;">代码不止bug，还有美和乐趣</span></p><p><br></p><p></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;section class=&quot;_editor&quot; data-mpa-powered-by=&quot;yiban.io&quot; style=&quot;max-width: 100%; color: rgb(0, 0, 0); font-family: &#39;Helvetica Neue&#39;, Helve
      
    
    </summary>
    
      <category term="python" scheme="http://sergiojune.com/categories/python/"/>
    
    
      <category term="爬虫" scheme="http://sergiojune.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="requestst" scheme="http://sergiojune.com/tags/requestst/"/>
    
  </entry>
  
  <entry>
    <title>教你用python登陆豆瓣并爬取影评</title>
    <link href="http://sergiojune.com/2018/08/07/%E6%95%99%E4%BD%A0%E7%94%A8python%E7%99%BB%E9%99%86%E8%B1%86%E7%93%A3%E5%B9%B6%E7%88%AC%E5%8F%96%E5%BD%B1%E8%AF%84/"/>
    <id>http://sergiojune.com/2018/08/07/教你用python登陆豆瓣并爬取影评/</id>
    <published>2018-08-07T00:43:41.654Z</published>
    <updated>2018-08-06T08:53:50.881Z</updated>
    
    <content type="html"><![CDATA[<section class="96edit" label="Powered by bj.96weixin.com" style="font-size:16px;"><section class="editor"><section editor="bj.96weixin.com" style="margin:0 auto;padding:0;box-sizing:border-box"><section class="yead_bgc wx-bg" style="border-style: solid; -webkit-border-image: url(&quot;https://mmbiz.qpic.cn/mmbiz_png/v4vz52CcB13JzTTXXg3mC439fK28gxRK85c5jJicI6ia4ibEOx5DTicoiciamOZc6hcaLFy9S1AfhJzm8kUAHJnv4jtQ/0&quot;) 15 5 5 fill stretch; color: rgb(51, 51, 51); border-width: 10px 4px 4px; padding: 0px; box-sizing: border-box; background-color: rgb(51, 184, 108);"><section style="width: 100%; font-size: 14px; margin: 0px; line-height: 30px; padding: 0px 5px; box-sizing: border-box;" data-width="100%"><p style="padding:0;margin:0;text-align:justify">在上篇文章爬取豆瓣电影top250后，想想既然爬了电影，干脆就连影评也爬了，这样可以看看人们评价的电影，再加上刚出不久的移动迷官3好像挺热的，干脆就爬他吧，爬完看看好不好看！</p></section></section></section><p><br></p></section><section class="editor"><section style="margin:10px auto;"><section style="width: 100%; font-size: 18px; height: 40px; line-height: 40px; border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: rgb(30, 28, 28); text-align: center; box-sizing: border-box;" data-width="100%">进入主题</section><section style="width: 100%; margin-top: 1px; border-top-style: solid; border-top-width: 1px; border-top-color: rgb(30, 28, 28); box-sizing: border-box;" data-width="100%"></section></section></section><p><br></p><p><strong>1.去找目标网页并找到所要找的数据</strong><br></p><p><br></p><p>一进去网页就条件反射打开开发者工具，很容易就看到了这个<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802067651.png" title="1802067651.png" _src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802067651.png" alt=""></p><p><br></p><p>鼠标所点的就是我接下来要爬的网站，先看看他的response和请求头之类的信息，他的请求方式时get，response是一个网页结构，这就好办了，我们就可以用正则来匹配出所要的数据，正则还是个很好用的东西，请大家务必要学会啊。那接下来就动手敲代码咯！</p><p><br></p><p>2.<strong>用re+requests获取数据</strong></p><p><br></p><p>获取信息<br></p><p><strong><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802067256.png" title="1802067256.png" _src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802067256.png" alt=""></strong></p><p>先把数据写入txt文件中（打开的文件要指定编码为utf-8，要不会出现编码问题，因为window的默认编码方式是gbk，而你的编码为utf-8）<br></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802062970.png" title="1802062970.png" _src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802062970.png" alt=""></p><p>正则表达式和网址<br></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802063224.png" title="1802063224.png" _src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802063224.png" alt=""></p><p><br></p><p>一点击运行，只运行了两页，就出了问题，因为这个评论不止两页</p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802061824.png" title="1802061824.png" _src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802061824.png" alt=""></p><p><br></p><p>调试了下，在获取完第二页的时候他返回了个不存在的网页，导致我的正则表达式捕捉不到数据，出现了个空的page，所以就只下载了两页，这应该是被反爬了，继续回网页看看需要加什么请求头，然而我把全部的请求头的信息都加了，还是没用，这就触及到我的盲区了（尴尬脸），但是我可以百度啊，百度一看，看见有人说模拟登陆就可以了，那好，我就来模拟登陆一波！！！</p><p><br></p><p><strong>3.模拟登陆豆瓣</strong></p><p><br></p><p>首先需要看看登陆需要什么参数，这个参数是在豆瓣的登陆网址，先打开登陆，打开开发者工具(要不会看不到后面这个所需要的网页)，填好信息点击登陆，然后点击这个login网页，往下拉就会看到From Data 这个框，这个就是登陆所要的参数<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802069594.png" title="1802069594.png" _src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802069594.png" alt=""></p><p><br></p><p>直接把他们复制过来即可</p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802067548.png" title="1802067548.png" _src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802067548.png" alt=""></p><p><br></p><p>然后就用post把信息发到服务器完成登陆，但是这有个问题，怎么保存登陆信息呢？这就需要用到<strong>Session()</strong>来保留了，但是注意，只需要建立一个会话信息就可以了，不是每个都用这个方法，我初学时就是犯这个错误以至于我搞了很久还没有登陆成功。代码如下</p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802066457.png" title="1802066457.png" _src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802066457.png" alt=""></p><p>然后用这个post上去，注意！注意！注意！post的网址是登陆网址，不是你要爬的网址，我刚学时也是被这个坑了很久(怎么感觉我很多问题)，还有其他用requests的都需要替换成<strong>self.ssession()</strong></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802067203.png" title="1802067203.png" _src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802067203.png" alt=""></p><p>​</p><p>最后这样<br></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802068961.png" title="1802068961.png" _src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802068961.png" alt=""></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802066811.png" title="1802066811.png" _src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802066811.png" alt=""></p><p>大功告成，由于只能获取500条这是因为豆瓣只开放了500条评论信息，多一条都不肯给</p><p><br></p><p><strong>4.登陆多了需要填验证码</strong></p><p><br></p><p>由于我多次登陆注销，然后我就需要填验证码了，然而这还是难不到我，还是分析网页找出验证码图片然后下载下来自己填写，还没有那些大佬那么厉害可以用人工智能来填写，代码如下<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802064517.png" title="1802064517.png" _src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802064517.png" alt=""></p><p><br></p><p>还有将数据保留到数据库，我就不贴了，代码和上篇文章的差不多</p><p><br></p><section class="editor"><p><img src="https://mmbiz.qlogo.cn/mmbiz/QKDxrVYehicdAibIVUpquF6TQUwXFg6dYCrLBEiasLaVyObib9LjK08qQ7IzkYKROO93uxoEnMSl8zRCWiaY7JwgZWg/0?wx_fmt=jpeg" style="margin: 0px; padding: 0px; max-width: 100%;"></p></section><p>通过这个我学会了使用session来保存会话信息来登陆简单网页，还可以填写验证码，自己还是觉得有点高大上的，嘻嘻。由于本人还没学数据分析，就只能到这里，而生成词云也有点不会，直接复制粘贴来无趣，所以就先不写了，等大神你来写吧！</p><p><br></p><p>最后非常感谢你看完了我的文章，如果觉得有用可以点赞，转发哈！若需要完整代码在微信公众号<strong>日常学python</strong>后台回复<strong>影评</strong>即可，若需要python相关的电子书也可以回复<strong>pdf</strong>获得，日后还会有更多福利发给你</p><p><br></p><p><br></p><p style="text-align: center;"><span style="font-size: 14px;">日常学python</span></p><p><br></p><p style="text-align: center;"><img style="border-radius: 5px; border: 1px dashed rgb(168, 164, 171); box-shadow: rgba(0, 0, 0, 0.329412) 6px 6px 5px 0px; margin-bottom: 1.4px; visibility: visible !important; width: 111.297px !important;" src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802054148.png" height="auto" border="0" alt="1802054148.png" _src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802054148.png"></p><p style="text-align: center;"><span style="font-size: 14px;">一个专注于python的公众号</span></p><p><br></p><p><br></p><p><br></p></section>]]></content>
    
    <summary type="html">
    
      
      
        &lt;section class=&quot;96edit&quot; label=&quot;Powered by bj.96weixin.com&quot; style=&quot;font-size:16px;&quot;&gt;&lt;section class=&quot;editor&quot;&gt;&lt;section editor=&quot;bj.96weixin.com&quot;
      
    
    </summary>
    
      <category term="python" scheme="http://sergiojune.com/categories/python/"/>
    
    
      <category term="爬虫" scheme="http://sergiojune.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="requestst" scheme="http://sergiojune.com/tags/requestst/"/>
    
  </entry>
  
  <entry>
    <title>反爬虫与反反爬虫</title>
    <link href="http://sergiojune.com/2018/08/07/%E5%8F%8D%E7%88%AC%E8%99%AB%E4%B8%8E%E5%8F%8D%E5%8F%8D%E7%88%AC%E8%99%AB/"/>
    <id>http://sergiojune.com/2018/08/07/反爬虫与反反爬虫/</id>
    <published>2018-08-07T00:43:41.627Z</published>
    <updated>2018-08-06T08:53:50.858Z</updated>
    
    <content type="html"><![CDATA[<section class="96edit" label="Powered by bj.96weixin.com" style="font-size:16px;"><section class="editor"><section editor="bj.96weixin.com" style="margin:0 auto;padding:0;box-sizing:border-box"><section class="yead_bgc wx-bg" style="border-style: solid; -webkit-border-image: url(&quot;https://mmbiz.qpic.cn/mmbiz_png/v4vz52CcB13JzTTXXg3mC439fK28gxRK85c5jJicI6ia4ibEOx5DTicoiciamOZc6hcaLFy9S1AfhJzm8kUAHJnv4jtQ/0&quot;) 15 5 5 fill stretch; color: rgb(51, 51, 51); border-width: 10px 4px 4px; padding: 0px; box-sizing: border-box; background-color: rgb(51, 184, 108);"><section style="width: 100%; font-size: 14px; margin: 0px; line-height: 30px; padding: 0px 5px; box-sizing: border-box;" data-width="100%"><p style="padding:0;margin:0;text-align:justify">喜欢爬虫的伙伴都知道，在爬网站的内容的时候并不是一爬就可以了，有时候就会遇到一些网站的反爬虫，折回让你爬不到数据，给你返回一些404，403或者500的状态码，这有时候会让人苦不堪言，就如我昨天发的爬网易云音乐评论，在你爬的数据较多时，网站认为你是一个机器，就不让你爬了，网易云就给我返回了一个<strong>{“code”:-460,”msg”:”Cheating”}，</strong>你不看下他的返回内容还不知道自己被反爬虫，不过不用担心，既然网页有反爬虫，可我们也有反反爬虫，今天就给大家说说反爬虫与反反爬虫。</p></section></section></section><p><br></p></section><section class="editor"><section style="border: 0px; margin: 0px auto; padding: 0px; text-align: center; box-sizing: border-box;"><section style="padding: 5px 10px; line-height: 30px; text-align: center; font-size: 14px; border: 3px solid rgb(51, 184, 108); display: inline-block; box-sizing: border-box; background-color: rgb(255, 255, 255);"><section style="padding: 0px; color: rgb(255, 255, 255); height: 30px; width: 30px; line-height: 30px; text-align: center; font-size: 14px; display: inline-block; border-radius: 100%; box-sizing: border-box; background-color: rgb(51, 184, 108);"><p>1</p></section><section style="padding: 0px 0px 0px 10px; color: rgb(51, 184, 108); line-height: 30px; text-align: center; font-size: 14px; border: 0px; display: inline-block; box-sizing: border-box;"><p>网页的反爬虫</p></section></section><section style="padding: 0px; margin: 0px auto; color: rgb(255, 255, 255); width: 0px; height: 0.4rem; text-align: center; border-width: 0.4rem 0.6rem 0px; border-style: solid; border-color: rgb(51, 184, 108) rgb(255, 255, 255) rgb(255, 255, 255); box-sizing: border-box;"></section></section></section><p><br></p><p><strong>1.通过网页的请求头</strong><br></p><p>首先我们先看看网易云音乐评论的请求头<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802099052.png" title="1802099052.png" alt=""><strong><br></strong></p><p><br></p><p><strong>User-Agent：</strong>这个是保存用户访问该网站的浏览器的信息，我上面这个表示的是我通过window的浏览器来访问这个网站的，如果你是用python来直接请求这个网站的时候，这个的信息会带有python的字眼，所以网站管理员可以通过这个来进行反爬虫。</p><p><br></p><p><strong>Referer：</strong>当浏览器发送请求时，一般都会带上这个，这个可以让网站管理者知道我是通过哪个链接访问到这个网站的，上面就说明我是从网易云音乐的主页来访问到这个页面的，若你是用python来直接请求是，就没有访问来源，那么管理者就轻而易举地判断你是机器在操作。</p><p><br></p><p><strong><span style="color: rgb(63, 63, 63); font-family: 'microsoft yahei'; line-height: 27.2px;">authorization</span></strong>:有的网站还会有这个请求头，这个是在用户在访问该网站的时候就会分配一个id给用户，然后在后台验证该id有没有访问权限从而来进行发爬虫。<br></p><p><br></p><p><strong>2.用户访问网站的ip</strong></p><p>当你这个ip在不断地访问一个网站来获取数据时，网页后台也会判断你是一个机器。就比如我昨天爬的网易云音乐评论，我刚开始爬的一首《海阔天空》时，因为评论较少，所以我容易就得到所有数据，但是当我选择爬一首较多评论的《等你下课》时，在我爬到800多页的时候我就爬不了，这是因为你这个ip的用户在不断地访问这个网站，他已经把你视为机器，所以就爬不了，暂时把你的ip给封了。<strong><br></strong></p><p><br></p><section class="editor"><section style="border: 0px; margin: 0px auto; padding: 0px; text-align: center; box-sizing: border-box;"><section style="padding: 5px 10px; line-height: 30px; text-align: center; font-size: 14px; border: 3px solid rgb(51, 184, 108); display: inline-block; box-sizing: border-box; background-color: rgb(255, 255, 255);"><section style="padding: 0px; color: rgb(255, 255, 255); height: 30px; width: 30px; line-height: 30px; text-align: center; font-size: 14px; display: inline-block; border-radius: 100%; box-sizing: border-box; background-color: rgb(51, 184, 108);"><p>2</p></section><section style="padding: 0px 0px 0px 10px; color: rgb(51, 184, 108); line-height: 30px; text-align: center; font-size: 14px; border: 0px; display: inline-block; box-sizing: border-box;"><p>我们的反反爬虫</p></section></section><section style="padding: 0px; margin: 0px auto; color: rgb(255, 255, 255); width: 0px; height: 0.4rem; text-align: center; border-width: 0.4rem 0.6rem 0px; border-style: solid; border-color: rgb(51, 184, 108) rgb(255, 255, 255) rgb(255, 255, 255); box-sizing: border-box;"></section></section></section><p><br></p><p><strong>1.添加请求头</strong></p><p>既然在请求网页的时候需要请求头，那么我们只需要在post或者get的时候把我们的请求头加上就可以了，怎样加？可以使用<strong>requests</strong>库来添加，在post，get或者其他方法是加上<strong>headers</strong>参数就可以了，而请求头不需要复制所有的信息，只需要上面的三个之中一个就可以，至于哪个自己判断，或者直接添加所有也可以，这样我们就可以继续爬了。</p><p><br></p><p><strong>2.使用代理ip</strong></p><p>若是网站把你的ip给封了，你添加什么的请求头也都没有用了，那我们就只有等他解封我们才可以继续爬吗？我可以十分自信告诉你：<strong>不需要</strong>，我们可以使用代理ip来继续爬，我们可以爬取网络上的免费ip来爬，至于免费的代理ip质量怎样你们应该知道，有必要可以买些不免费的，这样好点，我们平时的练习用免费的代理ip就可以了，可以自己爬取一些免费代理ip建成ip池，然后爬的时候就把ip随机取出来，我偷偷告诉你：小编明天的文章就是教你怎样搭建自己的代理ip池。</p><p><br></p><section class="editor"><section style="border: 0px none; box-sizing: border-box;"><section style="margin: 10px 0px; padding: 0px; text-align: center; font-family: 微软雅黑; box-sizing: border-box;"><section class="96wx-bdlc 96wx-bdrc" style="margin: 0px; padding: 0px; height: 24px; border-right-width: 1px; border-right-style: solid; border-right-color: rgb(245, 189, 209); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(245, 189, 209); box-sizing: border-box;"></section><section class="96wx-bdbc" style="margin-top: -12px; margin-bottom: -12px; padding: 0px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(245, 189, 209); box-sizing: border-box;"></section><section style="margin: 0px; padding: 0px; display: inline-block; box-sizing: border-box;"><section class="96wx-bdrc" style="margin: 0px; padding: 0px; border-right-width: 15px; border-right-style: solid; border-right-color: rgb(245, 189, 209); border-top-width: 12px; border-top-style: solid; border-top-color: transparent; border-bottom-width: 12px; border-bottom-style: solid; border-bottom-color: transparent; height: 0px; width: 0px; float: left; box-sizing: border-box;"></section><section class="96wx-bgc" style="margin: 0px; padding: 0px; height: 24px; min-width: 4em; color: rgb(255, 255, 255); line-height: 24px; float: left; box-sizing: border-box; background-color: rgb(245, 189, 209);"><span style="color:inherit; font-size:12px">END</span></section><section class="96wx-bdlc" style="margin: 0px; padding: 0px; border-left-width: 15px; border-left-style: solid; border-left-color: rgb(245, 189, 209); border-top-width: 12px; border-top-style: solid; border-top-color: transparent; height: 0px; width: 0px; float: left; border-bottom-width: 12px; border-bottom-style: solid; border-bottom-color: transparent; box-sizing: border-box;"></section></section></section></section></section><p>结束语：上面的只是个人在爬一些网站时候遇到的一些反爬虫，这只是很简单的，还有那些动态网站的反爬虫自己还没有接触，等到以后接触了，再一 一补充。最后给大家在爬虫上的建议，就是爬取速度不要太快，最好每几个就隔几秒，不要给服务器造成太大的压力，也可以在爬虫的时候选择一些访问量少点的时间段，这是对服务器好，也是对你自己好！</p><section class="editor"><p><br></p></section><p style="text-align: center;"><span style="font-size: 14px;">日常学python</span></p><p><br></p><p style="text-align: center;"><img style="border-radius: 5px; border: 1px dashed rgb(168, 164, 171); box-shadow: rgba(0, 0, 0, 0.329412) 6px 6px 5px 0px; margin-bottom: 1.4px; visibility: visible !important; width: 111.297px !important;" src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802054148.png" height="auto" border="0" alt="1802054148.png"></p><p style="text-align: center;"><span style="font-size: 14px;">一个专注于python的公众号</span></p><p><br></p></section>]]></content>
    
    <summary type="html">
    
      
      
        &lt;section class=&quot;96edit&quot; label=&quot;Powered by bj.96weixin.com&quot; style=&quot;font-size:16px;&quot;&gt;&lt;section class=&quot;editor&quot;&gt;&lt;section editor=&quot;bj.96weixin.com&quot;
      
    
    </summary>
    
      <category term="python" scheme="http://sergiojune.com/categories/python/"/>
    
    
      <category term="爬虫" scheme="http://sergiojune.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="requestst" scheme="http://sergiojune.com/tags/requestst/"/>
    
  </entry>
  
  <entry>
    <title>搭建自己的代理ip池</title>
    <link href="http://sergiojune.com/2018/08/07/%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%BB%A3%E7%90%86ip%E6%B1%A0/"/>
    <id>http://sergiojune.com/2018/08/07/搭建自己的代理ip池/</id>
    <published>2018-08-07T00:43:41.597Z</published>
    <updated>2018-08-06T08:53:50.876Z</updated>
    
    <content type="html"><![CDATA[<section class="96edit" label="Powered by bj.96weixin.com" style="font-size:16px;"><section class="editor"><section editor="bj.96weixin.com" style="margin:0 auto;padding:0;box-sizing:border-box"><section class="yead_bgc wx-bg" style="border-style: solid; -webkit-border-image: url(&quot;https://mmbiz.qpic.cn/mmbiz_png/v4vz52CcB13JzTTXXg3mC439fK28gxRK85c5jJicI6ia4ibEOx5DTicoiciamOZc6hcaLFy9S1AfhJzm8kUAHJnv4jtQ/0&quot;) 15 5 5 fill stretch; color: rgb(51, 51, 51); border-width: 10px 4px 4px; padding: 0px; box-sizing: border-box; background-color: rgb(51, 184, 108);"><section style="width: 100%; font-size: 14px; margin: 0px; line-height: 30px; padding: 0px 5px; box-sizing: border-box;" data-width="100%"><p style="padding:0;margin:0;text-align:justify">​继上一篇说了反爬虫之后，我说今天这篇文章会搭建一个属于自己的代理ip池，所以，为了不食言，就写了这篇文章，那好废话不多说，进入正题<br></p></section></section></section><p><br></p></section><section class="editor"><section style="margin:20px auto 16px;text-align:center;"><section style="border-top-style: solid; border-top-width: 1px; border-top-color: rgb(137, 137, 137); box-sizing: border-box;"><section style="border: 1px solid rgb(137, 137, 137); height: 30px; width: 30px; border-radius: 50%; margin-left: 50px; display: block; text-align: left; margin-top: -15px; box-sizing: border-box; background-color: rgb(255, 255, 255);"><section style="height: 24px; width: 24px; line-height: 24px; border-radius: 50%; margin: 2px auto 0px; text-align: center; color: rgb(255, 255, 255); box-sizing: border-box; background-color: rgb(233, 131, 109);"><p style="line-height:1.5em;"><span style="color: #FFFFFF;vertical-align:middle;" class="autonum">1</span></p></section></section><section style="display: block; padding: 0px 8px; line-height: 24px; font-size: 18px; margin-top: -30px; text-align: center; box-sizing: border-box;"><section style="display: inline-block; padding: 0px 8px; box-sizing: border-box; background-color: rgb(254, 254, 254);"><p><span style="font-family: 微软雅黑; font-size: 16px;">目标网站</span></p></section></section></section></section></section><p>爬取代理ip，这也需要找网页，这就得看看哪个网页提供这些代理ip了，本人知道了几个免费提供代理ip的网站，如下：</p><p><br></p><ul class=" list-paddingleft-2" style="list-style-type: disc; margin: 0px; padding: 0px 0px 0px 30px;"><li><p>无忧代理ip</p></li><li><p>芝麻代理ip</p></li><li><p>西刺代理ip</p></li><li><p>云连代理ip</p></li></ul><p><br></p><p>我选择了爬取西刺代理的网站。</p><p><br></p><section class="editor"><section style="margin:20px auto 16px;text-align:center;"><section style="border-top-style: solid; border-top-width: 1px; border-top-color: rgb(137, 137, 137); box-sizing: border-box;"><section style="border: 1px solid rgb(137, 137, 137); height: 30px; width: 30px; border-radius: 50%; margin-left: 50px; display: block; text-align: left; margin-top: -15px; box-sizing: border-box; background-color: rgb(255, 255, 255);"><section style="height: 24px; width: 24px; line-height: 24px; border-radius: 50%; margin: 2px auto 0px; text-align: center; color: rgb(255, 255, 255); box-sizing: border-box; background-color: rgb(233, 131, 109);"><p style="line-height:1.5em;">2</p></section></section><section style="display: block; padding: 0px 8px; line-height: 24px; margin-top: -30px; text-align: center; box-sizing: border-box;"><section style="display: inline-block; padding: 0px 8px; box-sizing: border-box; background-color: rgb(254, 254, 254);"><p><span style="font-family:微软雅黑">分析网站结构</span></p></section></section></section></section></section><p>我们需要获取的高匿代理，按下F12打开开发者工具<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802106756.png" title="1802106756.png" alt=""></p><p><br></p><p>上面我们要获取的数据是ip地址，端口和类型这三个就可以了，可以看到，这些数据都在一个<strong>tr</strong>标签里，但是有两个不同的tr标签，这样可以用正则表达式，利用相隔的html结构先把整个内容匹配下来，再把重要信息匹配下来，最后就把他弄成这个样子<strong>{‘https’: ‘<a href="https://ip:端口&#39;}" target="_blank" rel="noopener">https://ip:端口&#39;}</a></strong><span style="line-height: 25.6px;">存入列表即可，最后就随机获取一个ip，然后可以先判断是否有用，再拿来做你此时项目的代理ip，<strong>判断是否用的方法就是随便拿一个百度获取别的网站，加上代理ip发送get请求，看看status_code()的返回码是不是200，</strong>即可，就如下面这样<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802107109.png" title="1802107109.png" alt=""></span></p><p><br></p><section class="editor"><section style="margin:20px auto 16px;text-align:center;"><section style="border-top-style: solid; border-top-width: 1px; border-top-color: rgb(137, 137, 137); box-sizing: border-box;"><section style="border: 1px solid rgb(137, 137, 137); height: 30px; width: 30px; border-radius: 50%; margin-left: 50px; display: block; text-align: left; margin-top: -15px; box-sizing: border-box; background-color: rgb(255, 255, 255);"><section style="height: 24px; width: 24px; line-height: 24px; border-radius: 50%; margin: 2px auto 0px; text-align: center; color: rgb(255, 255, 255); box-sizing: border-box; background-color: rgb(233, 131, 109);"><p style="line-height:1.5em;">3</p></section></section><section style="display: block; padding: 0px 8px; line-height: 24px; margin-top: -30px; text-align: center; box-sizing: border-box;"><section style="display: inline-block; padding: 0px 8px; box-sizing: border-box; background-color: rgb(254, 254, 254);"><p style=""><span style="font-family:微软雅黑">代码部分</span></p></section></section></section></section></section><p><span style="line-height: 25.6px;"></span><strong>1.匹配数据，并挑选数据存入列表</strong><br></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802105349.png" title="1802105349.png" alt=""></p><p><br></p><p><strong>2.随机获取ip，并写好ip格式</strong></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802105063.png" title="1802105063.png" alt=""></p><p><br></p><p>我这里是把他存入列表，现抓现用，是因为我现在的爬虫项目都是很小的，只需要这些就可以了。</p><p><br></p><section class="editor"><section style="border: 0px none; box-sizing: border-box;"><section style="margin: 10px 0px; padding: 0px; text-align: center; font-family: 微软雅黑; box-sizing: border-box;"><section class="96wx-bdlc 96wx-bdrc" style="margin: 0px; padding: 0px; height: 24px; border-right-width: 1px; border-right-style: solid; border-right-color: rgb(245, 189, 209); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(245, 189, 209); box-sizing: border-box;"></section><section class="96wx-bdbc" style="margin-top: -12px; margin-bottom: -12px; padding: 0px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(245, 189, 209); box-sizing: border-box;"></section><section style="margin: 0px; padding: 0px; display: inline-block; box-sizing: border-box;"><section class="96wx-bdrc" style="margin: 0px; padding: 0px; border-right-width: 15px; border-right-style: solid; border-right-color: rgb(245, 189, 209); border-top-width: 12px; border-top-style: solid; border-top-color: transparent; border-bottom-width: 12px; border-bottom-style: solid; border-bottom-color: transparent; height: 0px; width: 0px; float: left; box-sizing: border-box;"></section><section class="96wx-bgc" style="margin: 0px; padding: 0px; height: 24px; min-width: 4em; color: rgb(255, 255, 255); line-height: 24px; float: left; box-sizing: border-box; background-color: rgb(245, 189, 209);"><span style="color:inherit; font-size:12px">END</span></section><section class="96wx-bdlc" style="margin: 0px; padding: 0px; border-left-width: 15px; border-left-style: solid; border-left-color: rgb(245, 189, 209); border-top-width: 12px; border-top-style: solid; border-top-color: transparent; height: 0px; width: 0px; float: left; border-bottom-width: 12px; border-bottom-style: solid; border-bottom-color: transparent; box-sizing: border-box;"></section></section></section></section></section><p>以上就是我简单搭建的代理ip池了，等到以后慢慢完善，你可以把他们存入你的数据库，然后要用的时候，就随机拿出来，先看看有没有用，没用的话就删除，有用就拿来用即可。</p><p><br></p><p style="text-align: center;"><span style="font-size: 14px;">日常学python</span></p><p style="text-align: center;"><img style="border-radius: 5px; border: 1px dashed rgb(168, 164, 171); box-shadow: rgba(0, 0, 0, 0.329412) 6px 6px 5px 0px; margin-bottom: 1.4px; visibility: visible !important; width: 111.297px !important;" src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802109804.png" height="auto" border="0" alt="1802109804.png"></p><p style="text-align: center;"><span style="font-size: 14px;">一个专注于python的公众号</span></p></section>]]></content>
    
    <summary type="html">
    
      
      
        &lt;section class=&quot;96edit&quot; label=&quot;Powered by bj.96weixin.com&quot; style=&quot;font-size:16px;&quot;&gt;&lt;section class=&quot;editor&quot;&gt;&lt;section editor=&quot;bj.96weixin.com&quot;
      
    
    </summary>
    
      <category term="python" scheme="http://sergiojune.com/categories/python/"/>
    
    
      <category term="爬虫" scheme="http://sergiojune.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="requestst" scheme="http://sergiojune.com/tags/requestst/"/>
    
  </entry>
  
  <entry>
    <title>利用python爬取豆瓣电影Top250，并把数据放入MySQL数据库</title>
    <link href="http://sergiojune.com/2018/08/07/python%E7%88%AC%E5%8F%96%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1Top250/"/>
    <id>http://sergiojune.com/2018/08/07/python爬取豆瓣电影Top250/</id>
    <published>2018-08-07T00:43:41.580Z</published>
    <updated>2018-08-06T08:53:50.847Z</updated>
    
    <content type="html"><![CDATA[<section class="editor" label="Powered by bj.96weixin.com" style="font-size:16px;"><section class="editor"><section style="margin:10px auto;text-align:center"><section style="margin: 0px auto; text-align: center; padding: 0px 10px; box-sizing: border-box;"><p><br></p><span style="display:inline-block;float:left;transform-origin:right bottom;margin-left:-28px;margin-bottom:8px;transform: rotate(-65deg);-webkit-transform: rotate(-65deg);-moz-transform: rotate(-65deg);-ms-transform: rotate(-65deg);-o-transform: rotate(-65deg);"><em class="yead_bgc" style="display:block;width:40px;height:1px;background-color:#33b86c;margin-left:8px"></em></span><section style="display:inline-block;overflow:hidden;width:100%" data-width="100%"><span class="yead_bgc" style="display:inline-block;height:3px;width:80%;float:left;background-color:#33b86c" data-width="80%"></span><section style="margin: 0px auto; font-size: 14px; line-height: 30px; clear: both; padding: 10px; text-align: left; color: rgb(51, 51, 51); box-sizing: border-box;"><p style="padding:0;margin:0"><br></p><p style="padding:0;margin:0">在<span style="line-height: 25.6px; white-space: pre-wrap;">学习了python基础后，一心想着快速入门爬虫，因为我就是为爬虫而学的python,所以就找了这个豆瓣电影来爬取。好了，废话不多说，进入正题</span></p></section><span class="yead_bgc" style="display:inline-block;height:3px;width:80%;float:right;background-color:#33b86c" data-width="80%"></span></section><span style="display:inline-block;float:right;transform-origin:right top;margin-right:17px;margin-top:10px;transform: rotate(120deg);-webkit-transform: rotate(120deg);-moz-transform: rotate(120deg);-ms-transform: rotate(120deg);-o-transform: rotate(120deg);"><em class="yead_bgc" style="display:block;width:20px;height:1px;background-color:#33b86c"></em><em class="yead_bgc" style="display:block;width:40px;height:1px;background-color:#33b86c;margin-left:8px;margin-top:5px"><br></em></span></section></section></section><p><strong>1.找到网页并分析网页结构</strong><br></p><p><br></p><p>首先进入<a href="https://movie.douban.com/top250" target="_blank" title="豆瓣电影Top250">豆瓣电影Top250</a>这个网页，按下f12打开开发者工具，如下图</p><p><br></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802039651.png" title="1802039651.png" alt=""></p><p><br></p><p>然后开始分析网页，点击开发者工具左上角的有个箭头的东西去找你需要找的数据，在这里我发现每个电影的信息都是在&lt;li&gt;的标签内，所以可以用正则表达式来先提取每一个电影，然后在分别提取每个电影中的数据。每个电影现在的数据都可以获取了，但是这个url只有25个电影，怎样获取下一页的呢？这里我们可以在每个页面获取下一页的链接，然后通过循环来继续获取下一页的电影数据即可</p><p><br></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802039785.png" title="1802039785.png" alt=""></p><p>我们可以先用开发者工具的箭头点一下后页，然后就显示右边的箭头数据出来，这里我们也可以用正则表达式来获取下一页的链接，然后接下来的工作就是循环了，好了分析结束，开始敲代码吧！</p><p><br></p><p><strong>2.用面向对象的方法进行爬取数据</strong></p><p><br></p><ul class=" list-paddingleft-2" style="list-style-type: disc; margin: 0px; padding: 0px 0px 0px 30px;"><li><p>先用requests对网页进行请求，获取网页的html结构，在这里，为了防止网页的反爬虫技术，我加了个请求头</p><p>（记得使用requests库之前先导入，没有的可以在命令行通过 <strong>pip install requests</strong> 进行下载）</p><p><strong><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802035432.png" title="1802035432.png" alt=""></strong></p><p><br></p><p>请求头在开发者工具中查看，如下图所示</p><p><br></p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802037188.png" title="1802037188.png" alt="" style="z-index: -1; cursor: pointer; line-height: 25.6px; white-space: pre-wrap;"></p><p><br></p></li><li><p>接下用正则表达式进行获取数据</p><p><br></p><p>先匹配每一个电影和每一页数据（使用正则表达式的库是re）</p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802033229.png" title="1802033229.png" alt=""><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802034633.png" title="1802034633.png" alt=""></p><p><br></p><p>接下来获取每个电影的数据<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802036920.png" title="1802036920.png" alt=""><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802034583.png" title="1802034583.png" alt=""></p><p><br></p><p>注意：获取到上面的数据，有的是空的，所以还需要进行判断是否为空，为了好看，我用了三元表达式进行判断，完成之后把他们存入字典<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802038436.png" title="1802038436.png" alt=""></p><p><br></p></li><li><p>接下来就是进行循环取下一页的数据了<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802039430.png" title="1802039430.png" alt=""></p><p><br></p></li></ul><p>3.如果你有点数据库基础的话，还可以把他们存入数据库，在这里我把这些数据存入MySQL数据库，代码如下，需要自己先建好数据库好表格</p><p><br></p><ul class=" list-paddingleft-2" style="list-style-type: disc; margin: 0px; padding: 0px 0px 0px 30px;"><li><p>这是操作数据库的类（使用的库为pymysql）<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802034586.png" title="1802034586.png" alt=""><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802036544.png" title="1802036544.png" alt=""></p><p><br></p></li><li><p>然后回到爬虫类进行把数据存入数据库</p><p><img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802033864.png" title="1802033864.png" alt=""><br></p></li></ul><p><br></p><p>4.<strong>成功后你就会在数据库中查到以下数据<img src="http://pic.96weixin.com/upload/image2/vip/881679/1802/1802032445.png" title="1802032445.png" alt=""></strong><br></p><p><br></p><section class="editor"><section style="border: 0px none; box-sizing: border-box;"><section style="margin: 10px 0px; padding: 0px; text-align: center; font-family: 微软雅黑; box-sizing: border-box;"><section class="96wx-bdlc 96wx-bdrc" style="margin: 0px; padding: 0px; height: 24px; border-right-width: 1px; border-right-style: solid; border-right-color: rgb(245, 189, 209); border-left-width: 1px; border-left-style: solid; border-left-color: rgb(245, 189, 209); box-sizing: border-box;"></section><section class="96wx-bdbc" style="margin-top: -12px; margin-bottom: -12px; padding: 0px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(245, 189, 209); box-sizing: border-box;"></section><section style="margin: 0px; padding: 0px; display: inline-block; box-sizing: border-box;"><section class="96wx-bdrc" style="margin: 0px; padding: 0px; border-right-width: 15px; border-right-style: solid; border-right-color: rgb(245, 189, 209); border-top-width: 12px; border-top-style: solid; border-top-color: transparent; border-bottom-width: 12px; border-bottom-style: solid; border-bottom-color: transparent; height: 0px; width: 0px; float: left; box-sizing: border-box;"></section><section class="96wx-bgc" style="margin: 0px; padding: 0px; height: 24px; min-width: 4em; color: rgb(255, 255, 255); line-height: 24px; float: left; box-sizing: border-box; background-color: rgb(245, 189, 209);"><span style="color:inherit; font-size:12px">END</span></section><section class="96wx-bdlc" style="margin: 0px; padding: 0px; border-left-width: 15px; border-left-style: solid; border-left-color: rgb(245, 189, 209); border-top-width: 12px; border-top-style: solid; border-top-color: transparent; height: 0px; width: 0px; float: left; border-bottom-width: 12px; border-bottom-style: solid; border-bottom-color: transparent; box-sizing: border-box;"></section></section></section></section></section><p>最后，非常感谢你看完了这篇文章，喜欢的话，或者有什么问题的话欢迎去我的微信公众号<strong>日常学python</strong>后台回复我，我会认真回答的。</p><p><br></p><section class="editor">ps:如果需要完整代码的话可以在微信公众号<strong>日常学python</strong>后台回复top250即可，或者想要什么学习资源也可以后台找我哦</section><p><br></p><p><br></p><p><br></p></section>]]></content>
    
    <summary type="html">
    
      
      
        &lt;section class=&quot;editor&quot; label=&quot;Powered by bj.96weixin.com&quot; style=&quot;font-size:16px;&quot;&gt;&lt;section class=&quot;editor&quot;&gt;&lt;section style=&quot;margin:10px auto;
      
    
    </summary>
    
      <category term="python" scheme="http://sergiojune.com/categories/python/"/>
    
    
      <category term="爬虫" scheme="http://sergiojune.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="requestst" scheme="http://sergiojune.com/tags/requestst/"/>
    
  </entry>
  
  <entry>
    <title>python爬虫常用库之requests详解</title>
    <link href="http://sergiojune.com/2018/08/07/python%E7%88%AC%E8%99%AB%E5%B8%B8%E7%94%A8%E5%BA%93%E4%B9%8Brequests%E8%AF%A6%E8%A7%A3/"/>
    <id>http://sergiojune.com/2018/08/07/python爬虫常用库之requests详解/</id>
    <published>2018-08-07T00:43:41.532Z</published>
    <updated>2018-08-06T08:53:50.933Z</updated>
    
    <content type="html"><![CDATA[<section class="96edit" label="Powered by bj.96weixin.com" style="font-size:16px;"><p>在使用了urllib库之后，感觉很麻烦，比如获取个cookie都需要分几步，代码又多，这和python的风格好像有点不太像哈，那有没有更加容易点的请求库呢？答案是有的，那就是第三方库<strong>requests</strong>,这个库的作者是大名鼎鼎的<strong>kennethreitz</strong>，创作这个库的原因就是想让python开发者更加容易地发起请求，处理请求。里面还有个名字：<strong>HTTP for Humans</strong>,顾名思义，就是用来请求http的。想看源代码的可以在github上搜索他的名字就可以看到了。</p><p><br></p><p>接下来介绍下怎样用这个库吧！</p><p><br></p><p>因为这是第三方库，所以我们需要下载，需要在命令行输入<br></p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;">pip install requests<br></code></pre></section><p>如果你装的是anacoda可以忽略这条</p><p><br></p><p>安装好了就来进行使用吧</p><p><br></p><section class="editor"><section style="margin: 10px auto; padding: 2px; box-sizing: border-box;"><section style="width: 60px;height: 40px;text-align: center;font-size: 2em;color: rgb(255, 255, 255);float: left;line-height: 40px;background: linear-gradient(-45deg, transparent 14.14px, rgb(139,183,72) 0px) right bottom / 50% 50% no-repeat, linear-gradient(45deg, transparent 14.14px, rgb(139,183,72) 0px) left bottom / 50% 50% no-repeat, linear-gradient(135deg, transparent 14.14px, rgb(139,183,72) 0px) left top / 50% 50% no-repeat, linear-gradient(-135deg, transparent 14.14px, rgb(139,183,72) 0px) right top / 50% 50% no-repeat;"><section class="autonum">1</section></section><section style="word-wrap: break-word; border-bottom: 2px dashed rgb(128, 177, 53); min-height: 36px; display: inline-block; line-height: 36px; margin-top: 0px; margin-left: 10px; box-sizing: border-box;"><span style="color: #80B135; font-size: 18px; margin-top: 0px; display: inline-block;">进行简单的操作</span></section></section></section><p>发送一个get请求<br></p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 发送请求<br>import requests</span><br>response = requests.get(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="http://httpbin.org/get&#39;" target="_blank" rel="noopener">http://httpbin.org/get&#39;</a></span>)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取返回的html信息</span><br>print(response.text)<br></code></pre></section><p>这样就发送了一个get请求，并且还打印了返回的内容，这个不再需要知道网页是哪个编码的，不过有时会出现编码问题，但是你也可以指定编码类型，如：</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;">response.encoding = <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘utf-8’</span><br></code></pre></section><p>指定完成后就可以正常编码了，前提你得知道网页的编码类型。</p><p><br></p><p>出了上面这些，我们还可以获取下面的信息<br></p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;">print(response.headers)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 请求状态码</span><br>print(response.status_code)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取网页的二进制内容</span><br>print(response.content)<br>print(response.url) <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取请求的url</span><br>print(response.cookies) <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取cookie</span><br></code></pre></section><p>是不是觉得很容易，一行代码就可以了。不再需要几步代码什么的了。</p><p><br></p><p>接下来被发爬的话带上个请求头来进行请求</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 还可以添加请求头进行请求</span><br>headers = {<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘User-Agent’</span>:<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36’</span>}<br>response = requests.get(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="http://httpbin.org/get'," _src="http://httpbin.org/get'," target="_blank" rel="noopener">http://httpbin.org/get’,</a> headers=headers </span>)<br>print(response.headers)<br>print(response.text)<br></code></pre></section><p>加个请求头也就是加个关键字参数而已</p><p><br></p><p>还可以进行带参数的get请求<br></p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 进行带参数的get请求</span><br>data = {<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘name’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘june’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘password’</span>: <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">123456</span>}<br>response = requests.get(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="http://httpbin.org/get&#39;" target="_blank" rel="noopener">http://httpbin.org/get&#39;</a></span>, params=data)<br>print(response.text)<br></code></pre></section><p><br></p><p><br></p><p>那如果需要登陆呢？post请求怎样发？告诉你，照样很简单<br></p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 进行post请求</span><br>data = {<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘name’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘june’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘password’</span>: <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">123456</span>}<br>response = requests.post(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="http://httpbin.org/post&#39;" target="_blank" rel="noopener">http://httpbin.org/post&#39;</a></span>, data=data, headers=headers)<br>print(response.text)<br></code></pre></section><p>是不是很简单，也是加个data关键字参数，把要提交的登陆参数进行post上去。</p><p><br></p><p>那除了上面的两个请求，还能进行别的请求吗？我可以非常开心地告诉你，可以的。比如，你要发个put请求，如这样</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;">requests.put()<br>requests.delete()<br></code></pre></section><p>这个就是发送put请求和delete请求的，其他的请求也是这样发送，就不一 一说了。</p><p><br></p><p><br></p><section class="editor"><section style="margin: 10px auto; padding: 2px; box-sizing: border-box;"><section style="width: 60px;height: 40px;text-align: center;font-size: 2em;color: rgb(255, 255, 255);float: left;line-height: 40px;background: linear-gradient(-45deg, transparent 14.14px, rgb(139,183,72) 0px) right bottom / 50% 50% no-repeat, linear-gradient(45deg, transparent 14.14px, rgb(139,183,72) 0px) left bottom / 50% 50% no-repeat, linear-gradient(135deg, transparent 14.14px, rgb(139,183,72) 0px) left top / 50% 50% no-repeat, linear-gradient(-135deg, transparent 14.14px, rgb(139,183,72) 0px) right top / 50% 50% no-repeat;"><section class="autonum">2</section></section><section style="word-wrap: break-word; border-bottom: 2px dashed rgb(128, 177, 53); min-height: 36px; display: inline-block; line-height: 36px; margin-top: 0px; margin-left: 10px; box-sizing: border-box;"><span style="color: #80B135; font-size: 18px; margin-top: 0px; display: inline-block;">进行复杂点的请求</span></section></section></section><p><br></p><p>在登陆的时候我们有时候需要输入验证码，那怎样输呢？爬虫的看不了网页，最简单的做法就是把这个验证码的图片下载下来然后手动输入，那么我们怎样下载呢？我们可以向这个图片的url发送请求，然后把返回内容以二进制方法存入文件里面就可以了。<br></p><p><br></p><p>代码如下：</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 从网上读取二进制数据，比如图片</span><br>response = requests.get(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="https://www.baidu.com/img/bd_logo1.png&#39;" target="_blank" rel="noopener">https://www.baidu.com/img/bd_logo1.png&#39;</a></span>, headers=headers)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 这个是直接获取字节码，这个是要保存的文件</span><br>print(response.content)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 这个是获取解码后的返回内容，这个是乱码</span><br>print(response.text)<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 用文件来把图片下载下来</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">with</span> open(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘baidu.png’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘wb’</span>) <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">as</span> f: <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 注意写的方式是以二进制方式写入</span><br> f.write(response.content)<br> print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘下载完毕’</span>)<br></code></pre></section><p><br></p><p>还是很简单，不得不说，这个库太好用了。<br></p><p><br></p><p>当我们需要上传文件的时候，比如图片，我们还可以用post方法把他发送出去<br></p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 上传文件</span><br>files = {<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘picture’</span>: open(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘baidu.png’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘rb’</span>)}<br>response = requests.post(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="http://httpbin.org/post&#39;" target="_blank" rel="noopener">http://httpbin.org/post&#39;</a></span>, files=files)<br>print(response.text)<br></code></pre></section><p><br></p><p>获取cookie并简单处理一下<br></p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取cookie</span><br>response = requests.get(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="https://www.baidu.com&#39;" target="_blank" rel="noopener">https://www.baidu.com&#39;</a></span>)<br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">for</span> k, v <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">in</span> response.cookies.items():<br> print(k, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘=’</span>, v)<br></code></pre></section><p><br></p><p>当网页返回内容是json格式是，我们不需要用json库来解析，我们可以直接利用requests的方法进行解析，两者的效果是一样的</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 解析json</span><br>j = response.json() <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 可以用json库来解析，结果一样</span><br></code></pre></section><p><br></p><p><br></p><p>在urllib库时保存登陆信息需要把cookie保存下来，但是在requests库里面，我们只需要用<strong>requests.session()</strong>来保存信息就可以了。<br></p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 用会话来保持登陆信息</span><br>session = requests.session()<br>response = session.get(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="http://httpbin.org/cookies/set/number/123456&#39;" target="_blank" rel="noopener">http://httpbin.org/cookies/set/number/123456&#39;</a></span>)<br>print(response.text)<br></code></pre></section><p><br></p><p><strong>这样就可以保存登陆了，不需要为cookie操心了，但是每次获取一个session就可以了，然后用来请求或者其他操作。不需要每次请求或者操作都创建一个sesion出来，这样是保存不了登陆信息的</strong></p><p><br></p><p><br></p><p>当一个网站不安全，需要你用证书验证的，比如这个网站</p><pre style="background-color:#2b2b2b;color:#a9b7c6;font-family:'宋体';font-size:15.0pt;"><a href="https://www.12306.cn" target="_blank" rel="noopener">https://www.12306.cn</a><br></pre><p><br></p><p><strong><img src="http://pic.96weixin.com/upload/image2/vip/881679/1803/1803131549.png" title="1803131549.png" _src="http://pic.96weixin.com/upload/image2/vip/881679/1803/1803131549.png" alt=""></strong></p><p><br></p><p>这时要访问里面的网站内容，我们就需要进行验证，代码如下</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 证书验证</span><br>response = requests.get(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="https://www.12306.cn&#39;" target="_blank" rel="noopener">https://www.12306.cn&#39;</a></span>, verify=<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">False</span>) <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 不加这个关键字参数的话会出现验证错误问题，因为这个网站的协议不被信任</span><br></code></pre></section><p>这样就可以进行访问了，但是会有一条警告<strong><br></strong></p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;">E:\anaconda\lib\site-packages\urllib3\connectionpool.py:<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">858</span>: InsecureRequestWarning: Unverified HTTPS request <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">is</span> being made. Adding certificate verification <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">is</span> strongly advised. See: <a href="https://urllib3.readthedocs.io/en/latest/advanced-usage.html" target="_blank" rel="noopener">https://urllib3.readthedocs.io/en/latest/advanced-usage.html</a><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#ssl-warnings</span><br> InsecureRequestWarning)<br></code></pre></section><p>觉得不美观的，我们还可以在请求时加个cert关键字参数，值为可信任的证书，为一个元组，写上账号和密码之类的，这里就不演示了</p><p><br></p><p>遇到需要认证的网站，我们也可以这样<br></p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">from requests.auth import HTTPBasicAuth<br># 设置认证</span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># requests.get(‘需要认证的网址’, auth=HTTPBasicAuth(‘user’, ‘passwd’)) # 由于找不到需要认证的网址，所以先写个主体</span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 还可以这样认证</span><br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># requests.get(‘需要认证的网址’, auth=(‘user’, ‘passwd’)) # 这样就简单点</span><br></code></pre></section><p>由于我找不到需要认证的网站，所以就不演示了。</p><p><br></p><p>requests还可以用代理ip来进行请求网站来防止ip被封以至于自己爬不了的尴尬。使用代理ip也比urllib库简单得多，代码如下：<br></p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 设置代理</span><br>proxies = {<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘http’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="http://122.114.31.177:808&#39;" target="_blank" rel="noopener">http://122.114.31.177:808&#39;</a></span>,<br>   <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘https’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="https://119.28.223.103:8088&#39;" target="_blank" rel="noopener">https://119.28.223.103:8088&#39;</a></span>}<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 在请求时添加上列代理</span><br>response = requests.get(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="http://httpbin.org/get&#39;" target="_blank" rel="noopener">http://httpbin.org/get&#39;</a></span>, proxies=proxies)<br>print(response.text)<br></code></pre></section><p>上面的字典格式需要一 一对应，然后在请求时加上个关键字参数proxies就可以了。</p><p><br></p><section class="editor"><section style="margin: 10px auto; padding: 2px; box-sizing: border-box;"><section style="width: 60px;height: 40px;text-align: center;font-size: 2em;color: rgb(255, 255, 255);float: left;line-height: 40px;background: linear-gradient(-45deg, transparent 14.14px, rgb(139,183,72) 0px) right bottom / 50% 50% no-repeat, linear-gradient(45deg, transparent 14.14px, rgb(139,183,72) 0px) left bottom / 50% 50% no-repeat, linear-gradient(135deg, transparent 14.14px, rgb(139,183,72) 0px) left top / 50% 50% no-repeat, linear-gradient(-135deg, transparent 14.14px, rgb(139,183,72) 0px) right top / 50% 50% no-repeat;"><section class="autonum">3</section></section><section style="word-wrap: break-word; border-bottom: 2px dashed rgb(128, 177, 53); min-height: 36px; display: inline-block; line-height: 36px; margin-top: 0px; margin-left: 10px; box-sizing: border-box;"><span style="color: #80B135; font-size: 18px; margin-top: 0px; display: inline-block;">请求异常处理</span></section></section></section><p><br></p><p>在程序运行时，遇到错误时程序就会被强行停止，如果想要继续运行，就需要进行捕捉异常来让程序继续运行。<strong><br></strong></p><p><br></p><p>在requests库中有个处理异常的库requests.exceptions</p><p><br></p><p>这里简单地处理下请求超时的处理情况</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> requests<br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">from</span> requests.exceptions <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> ReadTimeout, ConnectTimeout, HTTPError, ConnectionError, RequestException<br><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 捕捉异常</span><br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">try</span>:<br> response = requests.get(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="http://httpbin.org/get&#39;" target="_blank" rel="noopener">http://httpbin.org/get&#39;</a></span>, timeout=<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">0.1</span>) <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 规定时间内未响应就抛出异常</span><br> print(response.text)<br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">except</span> ReadTimeout <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">as</span> e:<br> print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘请求超时’</span>)<br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">except</span> ConnectionError <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">as</span> e:<br> print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘连接失败’</span>)<br><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">except</span> RequestException <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">as</span> e:<br> print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘请求失败’</span>)<br></code></pre></section><p><br></p><p>这里捕捉了三个异常，因为ReadTimeout是ConnectionError的子类，所以先捕捉ReadTimeout,再捕捉父类的。而ConnectionError 和 RequestException 同理</p><p><br></p><p>更多的异常处理可以查看文档哈。</p><p><br></p><section class="editor"><section style="margin: 10px auto; padding: 2px; box-sizing: border-box;"><section style="width: 60px;height: 40px;text-align: center;font-size: 2em;color: rgb(255, 255, 255);float: left;line-height: 40px;background: linear-gradient(-45deg, transparent 14.14px, rgb(139,183,72) 0px) right bottom / 50% 50% no-repeat, linear-gradient(45deg, transparent 14.14px, rgb(139,183,72) 0px) left bottom / 50% 50% no-repeat, linear-gradient(135deg, transparent 14.14px, rgb(139,183,72) 0px) left top / 50% 50% no-repeat, linear-gradient(-135deg, transparent 14.14px, rgb(139,183,72) 0px) right top / 50% 50% no-repeat;"><section class="autonum">4</section></section><section style="word-wrap: break-word; border-bottom: 2px dashed rgb(128, 177, 53); min-height: 36px; display: inline-block; line-height: 36px; margin-top: 0px; margin-left: 10px; box-sizing: border-box;"><span style="color: #80B135; font-size: 18px; margin-top: 0px; display: inline-block;">最后</span></section></section></section><p>以上均是我在学习时的笔记和个人在运用时遇到的一些坑都简单地记载了上去，希望对你有用哈，如果想看更多的用法可以去官方文档查看。还有代码我放在了github上，要的话可以上去查看。</p><p><br></p><p>GitHub：<a href="https://github.com/SergioJune/gongzhonghao_code/tree/master/python3_spider" _src="https://github.com/SergioJune/gongzhonghao_code/tree/master/python3_spider" target="_blank" rel="noopener">https://github.com/SergioJune/gongzhonghao_code/tree/master/python3_spider</a></p><p>官方文档：<a href="http://docs.python-requests.org/zh_CN/latest/index.html" _src="http://docs.python-requests.org/zh_CN/latest/index.html" target="_blank" rel="noopener">http://docs.python-requests.org/zh_CN/latest/index.html</a></p><p>学习参考资料：<a href="https://edu.hellobi.com/course/157" target="_blank" rel="noopener">https://edu.hellobi.com/course/157</a>  </p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p><p><br></p></section>]]></content>
    
    <summary type="html">
    
      
      
        &lt;section class=&quot;96edit&quot; label=&quot;Powered by bj.96weixin.com&quot; style=&quot;font-size:16px;&quot;&gt;&lt;p&gt;在使用了urllib库之后，感觉很麻烦，比如获取个cookie都需要分几步，代码又多，这和python的风格
      
    
    </summary>
    
      <category term="python" scheme="http://sergiojune.com/categories/python/"/>
    
    
      <category term="爬虫" scheme="http://sergiojune.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="requests" scheme="http://sergiojune.com/tags/requests/"/>
    
  </entry>
  
  <entry>
    <title>python爬虫常用库之BeautifulSoup详解</title>
    <link href="http://sergiojune.com/2018/08/07/python%E7%88%AC%E8%99%AB%E5%B8%B8%E7%94%A8%E5%BA%93%E4%B9%8BBeautifulSoup%E8%AF%A6%E8%A7%A3/"/>
    <id>http://sergiojune.com/2018/08/07/python爬虫常用库之BeautifulSoup详解/</id>
    <published>2018-08-07T00:43:41.510Z</published>
    <updated>2018-08-06T08:53:50.975Z</updated>
    
    <content type="html"><![CDATA[<section class="_editor" data-mpa-powered-by="yiban.io" style="max-width: 100%; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; word-break: normal !important;"><p style="margin-right: auto; margin-left: auto; padding-right: 5px; padding-left: 5px; max-width: 600px; word-wrap: normal; border-width: 1px; border-style: solid; border-color: rgb(95, 170, 255); font-family: 微软雅黑; font-size: 12px; border-radius: 2em; text-align: center; letter-spacing: 2px; word-break: normal !important;"><span style="color: rgb(255, 0, 0); word-break: normal !important;">这是日常学python的第16篇原创文章</span><br style="word-break: normal !important;"></p></section><section class="_editor" data-width="100%" style="margin-right: auto; margin-left: auto; max-width: 100%; color: rgb(0, 0, 0); font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; font-size: medium; white-space: normal; width: 100%; word-break: normal !important;"><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">经过了前面几篇文章的学习，估计你已经会爬不少中小型网站了。但是有人说，前面的正则很难唉，学不好。正则的确很难，有人说过：如果一个问题用正则解决，那么就变成了两个问题。所以说学不会是很正常的，不怕，除了正则，我们还可以用另外一个强大的库来解析html。所以，今天的主题就是来学习这个强大的库–<strong style="word-break: normal !important;">BeautifulSoup</strong>，不过正则还是需要多多练习下的。</p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">因为是第三方库所以我们需要下载，在命令行敲下以下代码进行下载<br style="word-break: normal !important;"></p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;">pip install beautifulsoup4<br style="word-break: normal !important;"></p></pre></section><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">安装第三方解析库<br style="word-break: normal !important;"></p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;">pip install lxml<br style="word-break: normal !important;"></p></pre></section><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;">pip install html5lib<br style="word-break: normal !important;"></p></pre></section><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">如果不知道有什么用请往下看</p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><strong style="word-break: normal !important;">1.相关解析库的介绍</strong></p><p style="word-break: normal !important;"><img data-s="300,640" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWibdSEM4LzQ6XUOYybwibjibtEJQjJWgdwMzRdFN24ar8Yz8Nbc9y6Jn4iaezXHY4YWZEUZn90KWU5OSw/0?wx_fmt=png" style="word-break: normal !important;" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWibdSEM4LzQ6XUOYybwibjibtEJQjJWgdwMzRdFN24ar8Yz8Nbc9y6Jn4iaezXHY4YWZEUZn90KWU5OSw/0?wx_fmt=png"></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">这里官方推荐解析库为lxml,因为它的效率高。下面都是用lxml解析库来进行解析的。</p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><strong style="word-break: normal !important;">2.详细语法介绍</strong></p><p style="padding-right: 5px; padding-left: 5px; letter-spacing: 2px; word-break: normal !important;">本文是进行解析豆瓣图书首页<a href="https://book.douban.com/" _src="https://book.douban.com/" _href="https://book.douban.com/" style="word-break: normal !important;" target="_blank" rel="noopener">https://book.douban.com/</a></p><p style="word-break: normal !important;"><br></p><p style="padding-right: 5px; padding-left: 5px; letter-spacing: 2px; word-break: normal !important;">1)创建bs对象</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">from</span> bs4 <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> BeautifulSoup<br style="word-break: normal !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> requests<br style="word-break: normal !important;">response = requests.get(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="https://book.douban.com/&#39;" target="_blank" rel="noopener">https://book.douban.com/&#39;</a></span>).text<br style="word-break: normal !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># print(response)</span><br style="word-break: normal !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 创建bs对象</span><br style="word-break: normal !important;">soup = BeautifulSoup(response, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘lxml’</span>) &nbsp;# 使用到了lxml解析库<br style="word-break: normal !important;"></p></pre></section><p style="word-break: normal !important;"><br></p><p style="padding-right: 5px; padding-left: 5px; letter-spacing: 2px; word-break: normal !important;">2)获取相关标签</p><p style="padding-right: 5px; padding-left: 5px; letter-spacing: 2px; word-break: normal !important;">标签：</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span> <span class="hljs-attr" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">data-moreurl-dict</span>=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘{“from”:”top-nav-click-main”,”uid”:”0”}’</span> <span class="hljs-attr" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">href</span>=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“<a href="https://www.douban.com&quot;" target="_blank" rel="noopener">https://www.douban.com&quot;</a></span> <span class="hljs-attr" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">target</span>=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“_blank”</span>&gt;</span>豆瓣<span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;/<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span>&gt;</span><br style="word-break: normal !important;"></p></pre></section><p style="padding-right: 5px; padding-left: 5px; letter-spacing: 2px; word-break: normal !important;">上面的<strong style="word-break: normal !important;">a</strong>就是一个标签名字，最简单的就是&lt;a&gt;&lt;/a&gt;这样，可以简单理解为&lt;&gt;里面的第一个单词就是标签名</p><p style="word-break: normal !important;"><br></p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取标签</span><br style="word-break: normal !important;">print(soup.li) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 这个只是获取第一个li标签</span><br style="word-break: normal !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br style="word-break: normal !important;">&lt;li <span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">class</span>=””&gt;<br style="word-break: normal !important;">&lt;<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">a</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">data</span>-<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">moreurl</span>-<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">dict</span>=’{“<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">from</span>“:</span><span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“top-nav-click-main”</span>,<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“uid”</span>:<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“0”</span>}<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘ href=”<a href="https://www.douban.com&quot;" target="_blank" rel="noopener">https://www.douban.com&quot;</a> target=”_blank”&gt;豆瓣&lt;/a&gt;<br style="word-break: normal !important;">&lt;/li&gt;<br style="word-break: normal !important;"></span></p></pre></section><p style="word-break: normal !important;"><br></p><p style="padding-right: 5px; padding-left: 5px; letter-spacing: 2px; word-break: normal !important;">3)获取标签的名字和内容</p><p style="padding-right: 5px; padding-left: 5px; letter-spacing: 2px; word-break: normal !important;">标签的名字和内容：</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span> &gt;</span>豆瓣<span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;/<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span>&gt;</span><br style="word-break: normal !important;"></p></pre></section><p style="padding-right: 5px; padding-left: 5px; letter-spacing: 2px; word-break: normal !important;">如上面所说，a就是标签名字，而两个标签之中所夹杂的内容就是我们所说的内容，如上，<strong style="word-break: normal !important;">豆瓣</strong>就是该标签的内容</p><p style="word-break: normal !important;"><br></p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取标签名字</span><br style="word-break: normal !important;">print(soup.li.name)<br style="word-break: normal !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取标签内容</span><br style="word-break: normal !important;">print(soup.li.string) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 这个只能是这个标签没有子标签才能正确获取，否则会返回None</span><br style="word-break: normal !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br style="word-break: normal !important;">li<br style="word-break: normal !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">None</span><br style="word-break: normal !important;"></p></pre></section><p style="word-break: normal !important;"><br></p><p style="padding-right: 5px; padding-left: 5px; letter-spacing: 2px; word-break: normal !important;">由于这个<strong style="word-break: normal !important;">li标签</strong>里面还有个子标签，所以它的文本内容为None</p><p style="word-break: normal !important;"><br></p><p style="padding-right: 5px; padding-left: 5px; letter-spacing: 2px; word-break: normal !important;">下面这个就可以获取它的文本内容</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取标签内的标签</span><br style="word-break: normal !important;">print(soup.li.a)<br style="word-break: normal !important;">print(soup.li.a.string) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 这个标签没有子标签所以可以获取到内容</span><br style="word-break: normal !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br style="word-break: normal !important;">&lt;a data-moreurl-dict=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘{“from”:”top-nav-click-main”,”uid”:”0”}’</span> href=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“<a href="https://www.douban.com&quot;" target="_blank" rel="noopener">https://www.douban.com&quot;</a></span> target=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“_blank”</span>&gt;豆瓣&lt;/a&gt;<br style="word-break: normal !important;">豆瓣<br style="word-break: normal !important;"></p></pre></section><p style="word-break: normal !important;"><br></p><p style="word-break: normal !important;"><br></p><p style="padding-right: 5px; padding-left: 5px; letter-spacing: 2px; word-break: normal !important;">4)获取标签属性，有两种方法</p><p style="padding-right: 5px; padding-left: 5px; letter-spacing: 2px; word-break: normal !important;">标签属性：</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span> <span class="hljs-attr" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">href</span>=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“<a href="https://www.douban.com&quot;" target="_blank" rel="noopener">https://www.douban.com&quot;</a></span> <span class="hljs-attr" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">target</span>=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“_blank”</span>&gt;</span>豆瓣<span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;/<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span>&gt;</span><br style="word-break: normal !important;"></p></pre></section><p style="padding-right: 5px; padding-left: 5px; letter-spacing: 2px; word-break: normal !important;">可以简单理解为属性就是<strong style="word-break: normal !important;">在标签名字旁边而且在前一个&lt;&gt;符号里面的，还有是有等号来进行体现的。</strong>所以上面的<strong style="word-break: normal !important;">href</strong>就是标签属性名字，<strong style="word-break: normal !important;">等号右边的就是属性的值</strong>，上面的值是个网址</p><p style="word-break: normal !important;"><br></p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取标签属性</span><br style="word-break: normal !important;">print(soup.li.a[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘href’</span>]) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 第一种</span><br style="word-break: normal !important;">print(soup.li.a.attrs[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘href’</span>]) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 第二种</span><br style="word-break: normal !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br style="word-break: normal !important;"><a href="https://www.douban.com" target="_blank" rel="noopener">https://www.douban.com</a><br style="word-break: normal !important;"><a href="https://www.douban.com" target="_blank" rel="noopener">https://www.douban.com</a><br style="word-break: normal !important;"></p></pre></section><p style="word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">5)获取标签内的子标签</p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">子标签：</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">li</span>&gt;</span><span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span>&gt;</span>豆瓣<span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;/<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span>&gt;</span><span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;/<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">li</span>&gt;</span><br style="word-break: normal !important;"></p></pre></section><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">比如我们现在获取的<strong style="word-break: normal !important;">li标签</strong>，所以<strong style="word-break: normal !important;">a标签</strong>就是<strong style="word-break: normal !important;">li标签</strong>的<strong style="word-break: normal !important;">子标签</strong></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取标签内的标签</span><br style="word-break: normal !important;">print(soup.li.a)<br style="word-break: normal !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br style="word-break: normal !important;">&lt;a data-moreurl-dict=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘{“from”:”top-nav-click-main”,”uid”:”0”}’</span> href=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“<a href="https://www.douban.com&quot;" target="_blank" rel="noopener">https://www.douban.com&quot;</a></span> target=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“_blank”</span>&gt;豆瓣&lt;/a&gt;<br style="word-break: normal !important;"></p></pre></section><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">6)获取所有子节点</p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">子节点：这个和子标签是差不多的，只不过这里是获取一个标签下的所有子标签，上面的只是获取最接近该标签的子标签</p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取子节点</span><br style="word-break: normal !important;">print(soup.div.contents) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 返回一个列表 第一种方法</span><br style="word-break: normal !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">for</span> n, tag <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">in</span> enumerate(soup.div.contents):<br style="word-break: normal !important;"> &nbsp; &nbsp;print(n, tag)<br style="word-break: normal !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br style="word-break: normal !important;">[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘\n’</span>, &lt;div <span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">class</span>=”<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">bd</span>“&gt;<br style="word-break: normal !important;">&lt;<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">div</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">class</span>=”<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">top</span>-<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">nav</span>-<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">info</span>“&gt;<br style="word-break: normal !important;">&lt;<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">a</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">class</span>=”<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">nav</span>-<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">login</span>“ <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">href</span>=”<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">https</span>:</span>//<a href="http://www.douban.com/accounts/login?source=book" target="_blank" rel="noopener">www.douban.com/accounts/login?source=book</a><span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“ rel=”</span>nofollow<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“&gt;登录&lt;/a&gt;<br style="word-break: normal !important;">…<br style="word-break: normal !important;">0 <br style="word-break: normal !important;"><br style="word-break: normal !important;">1 &lt;div class=”</span>bd<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“&gt;<br style="word-break: normal !important;">&lt;div class=”</span>top-nav-info<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“&gt;<br style="word-break: normal !important;">…<br style="word-break: normal !important;"></span></p></pre></section><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">这个是获取div下的所有子节点，<strong style="word-break: normal !important;">.content</strong>就是获取子节点的属性</p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">7)第二种方法获取所有子节点</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 第二种方法</span><br style="word-break: normal !important;">print(soup.div.children) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 返回的是一个迭代器</span><br style="word-break: normal !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">for</span> n, tag <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">in</span> enumerate(soup.div.children):<br style="word-break: normal !important;"> &nbsp; &nbsp;print(n, tag)<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;"><br style="word-break: normal !important;"></span></p></pre></section><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">这个是用<strong style="word-break: normal !important;">.children</strong>获取所有的子节点，这个方法返回的是一个迭代器</p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">8)获取标签的子孙节点，就是所有后代<br style="word-break: normal !important;"></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">子孙节点：</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">ul</span>&gt;</span><br style="word-break: normal !important;"><span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">li</span>&gt;</span><br style="word-break: normal !important;"><span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span>&gt;</span>豆瓣<span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;/<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span>&gt;</span><br style="word-break: normal !important;"><span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;/<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">li</span>&gt;</span><br style="word-break: normal !important;"><span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;/<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">ul</span>&gt;</span><br style="word-break: normal !important;"></p></pre></section><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">从上面知道，<strong style="word-break: normal !important;">li标签</strong>是<strong style="word-break: normal !important;">ul标签</strong>的<strong style="word-break: normal !important;">子标签</strong>，<strong style="word-break: normal !important;">a标签</strong>是<strong style="word-break: normal !important;">li标签</strong>的<strong style="word-break: normal !important;">子标签</strong>，若此时我们获取的是<strong style="word-break: normal !important;">ul标签</strong>，所以<strong style="word-break: normal !important;">li标签和a标签都是ul标签的子孙节点</strong></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取标签的子孙节点</span><br style="word-break: normal !important;">print(soup.div.descendants) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 返回的是一个迭代器</span><br style="word-break: normal !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">for</span> n, tag <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">in</span> enumerate(soup.div.descendants):<br style="word-break: normal !important;"> &nbsp; &nbsp;print(n, tag)<br style="word-break: normal !important;"># 结果<br style="word-break: normal !important;">…<br style="word-break: normal !important;">&lt;generator object descendants at <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">0x00000212C1A1E308</span>&gt;<br style="word-break: normal !important;"><span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">0</span> <br style="word-break: normal !important;"><br style="word-break: normal !important;"><span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">1</span> &lt;div <span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">class</span>=”<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">bd</span>“&gt;<br style="word-break: normal !important;">&lt;<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">div</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">class</span>=”<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">top</span>-<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">nav</span>-<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">info</span>“&gt;<br style="word-break: normal !important;">&lt;<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">a</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">class</span>=”<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">nav</span>-<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">login</span>“ <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">href</span>=”<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">https</span>:</span>//<a href="http://www.douban.com/accounts/login?source=book" target="_blank" rel="noopener">www.douban.com/accounts/login?source=book</a><span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“ rel=”</span>nofollow<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“&gt;登录&lt;/a&gt;<br style="word-break: normal !important;">…<br style="word-break: normal !important;"></span></p></pre></section><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">这里用到了<strong style="word-break: normal !important;">.descendants属性</strong>，获取的是div标签的子孙节点，而且返回结果是一个迭代器</p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">9)获取父节点和所有祖先节点</p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">既然有了子节点和子孙节点，反过来也是有父节点和祖先节点的，所以都很容易理解的</p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取父节点</span><br style="word-break: normal !important;">print(soup.li.parent) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 返回整个父节点</span><br style="word-break: normal !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取祖先节点</span><br style="word-break: normal !important;">print(soup.li.parents) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 返回的是一个生成器</span><br style="word-break: normal !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">for</span> n, tag <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">in</span> enumerate(soup.li.parents):<br style="word-break: normal !important;"> &nbsp; &nbsp;print(n, tag)<br style="word-break: normal !important;"></p></pre></section><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><strong style="word-break: normal !important;">.parent</strong>属性是获取父节点，返回来的是整个父节点，里面包含该子节点。<strong style="word-break: normal !important;">.parents</strong>就是获取所有的祖先节点，返回的是一个生成器</p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">10)获取兄弟节点<br style="word-break: normal !important;"></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">兄弟节点：</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">ul</span>&gt;</span><br style="word-break: normal !important;"><span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">li</span>&gt;</span><br style="word-break: normal !important;"><span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span>&gt;</span>豆瓣1<span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;/<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span>&gt;</span><br style="word-break: normal !important;"><span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;/<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">li</span>&gt;</span><br style="word-break: normal !important;"><span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">li</span>&gt;</span><br style="word-break: normal !important;"><span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span>&gt;</span>豆瓣2<span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;/<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span>&gt;</span><br style="word-break: normal !important;"><span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;/<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">li</span>&gt;</span><br style="word-break: normal !important;"><span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">li</span>&gt;</span><br style="word-break: normal !important;"><span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span>&gt;</span>豆瓣3<span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;/<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">a</span>&gt;</span><br style="word-break: normal !important;"><span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;/<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">li</span>&gt;</span><br style="word-break: normal !important;"><span class="hljs-tag" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;">&lt;/<span class="hljs-name" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">ul</span>&gt;</span><br style="word-break: normal !important;"></p></pre></section><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">比如上面的html代码，里面的li标签都是ul标签的子节点，而li标签都是处于同级的，所以上面的li标签都是各自的兄弟。这就是兄弟节点。</p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取兄弟节点</span><br style="word-break: normal !important;">print(soup.li.next_siblings) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取该标签的所有同级节点，不包括本身 &nbsp;返回的是一个生成器</span><br style="word-break: normal !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">for</span> x <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">in</span> soup.li.next_siblings:<br style="word-break: normal !important;"> &nbsp; &nbsp;print(x)<br style="word-break: normal !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br style="word-break: normal !important;">&lt;generator object next_siblings at <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">0x000002A04501F308</span>&gt;<br style="word-break: normal !important;">&lt;li <span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">class</span>=”<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">on</span>“&gt;<br style="word-break: normal !important;">&lt;<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">a</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">data</span>-<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">moreurl</span>-<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">dict</span>=’{“<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">from</span>“:</span><span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“top-nav-click-book”</span>,<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“uid”</span>:<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“0”</span>}<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘ href=”<a href="https://book.douban.com&quot;&gt;读书&lt;/a" target="_blank" rel="noopener">https://book.douban.com&quot;&gt;读书&lt;/a</a>&gt;<br style="word-break: normal !important;">&lt;/li&gt;<br style="word-break: normal !important;">…<br style="word-break: normal !important;"></span></p></pre></section><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">.next_siblings属性是获取该标签的所有在他后面的兄弟节点，不包括他本身。同时返回结果也是一个迭代器</p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">同理，既然有获取他的下一个所有兄弟标签，也有获取他前面的所有兄弟标签</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;">soup.li.previous_siblings<br style="word-break: normal !important;"></p></pre></section><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">如果只是获取一个即可，可以选择把上面的属性后面的<strong style="word-break: normal !important;">s字母去掉</strong>即可，如下</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;">soup.li.previous_sibling &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取前一个兄弟节点</span><br style="word-break: normal !important;">soup.li.next_sibling &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取后一个兄弟节点</span><br style="word-break: normal !important;"></p></pre></section><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><strong style="word-break: normal !important;">3.bs库的更高级的用法</strong><br style="word-break: normal !important;"></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">在前面我们可以获取标签的名字、属性、内容和所有的祖孙标签。但是当我们需要获取任意一个指定属性的标签还是有点困难的，所以，此时有了下面这个方法：</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;">soup.find_all( name , attrs , recursive , text , **kwargs )<br style="word-break: normal !important;"></p></pre></section><ul class=" list-paddingleft-2" style="width: 530.094px; word-break: normal !important; margin: 0px; padding: 0px 0px 0px 30px;"><li><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><strong style="word-break: normal !important;">name：</strong>需要获取的标签名</p></li><li><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><strong style="word-break: normal !important;">attrs：</strong>接收一个字典，为属性的键值，或者直接用关键字参数来替代也可以，下面</p></li><li><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><strong style="word-break: normal !important;">recursive：</strong>设置是否搜索直接子节点</p></li><li><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><strong style="word-break: normal !important;">text：</strong>对应的字符串内容</p></li><li><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><strong style="word-break: normal !important;">limit：</strong>设置搜索的数量</p></li></ul><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">1)先使用name参数来进行搜索</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 先使用name参数</span><br style="word-break: normal !important;">print(soup.find_all(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘li’</span>)) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 返回一个列表，所有的li标签名字</span><br style="word-break: normal !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br style="word-break: normal !important;">[&lt;li <span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">class</span>=””&gt;<br style="word-break: normal !important;">&lt;<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">a</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">data</span>-<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">moreurl</span>-<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">dict</span>=’{“<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">from</span>“:</span><span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“top-nav-click-main”</span>,<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“uid”</span>:<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“0”</span>}<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘ href=”<a href="https://www.douban.com&quot;" target="_blank" rel="noopener">https://www.douban.com&quot;</a> target=”_blank”&gt;豆瓣&lt;/a&gt;<br style="word-break: normal !important;">&lt;/li&gt;, &lt;li class=”on”&gt;<br style="word-break: normal !important;">…<br style="word-break: normal !important;"></span></p></pre></section><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">这里获取了所有标签名字为<strong style="word-break: normal !important;">li</strong>的标签</p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">2)使用name和attrs参数<br style="word-break: normal !important;"></p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 使用name和attrs参数</span><br style="word-break: normal !important;">print(soup.find_all(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘div’</span>, {<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘class’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘more-meta’</span>})) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 这个对上个进行了筛选,属性参数填的是一个字典类型的</span><br style="word-break: normal !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br style="word-break: normal !important;">[&lt;div <span class="hljs-class" style="font-size: inherit; color: inherit; line-height: inherit; word-wrap: inherit !important; word-break: inherit !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">class</span>=”<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">more</span>-<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">meta</span>“&gt;<br style="word-break: normal !important;">&lt;<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">h4</span> <span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">class</span>=”<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">title</span>“&gt;<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;刺<br style="word-break: normal !important;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;/<span class="hljs-title" style="font-size: inherit; line-height: inherit; color: rgb(165, 218, 45); word-wrap: inherit !important; word-break: inherit !important;">h4</span>&gt;<br style="word-break: normal !important;">…<br style="word-break: normal !important;"></span></p></pre></section><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">这里搜索了具有属性为<strong style="word-break: normal !important;">class=’more-meta’的div标签</strong></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">3)根据关键字参数来搜索<br style="word-break: normal !important;"></p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 对相关属性进行进行查找也可以这样</span><br style="word-break: normal !important;">print(soup.find_all(class_=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘more-meta’</span>)) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 使用关键字参数，因为class是python关键字，所以关键字参数时需要加多一个下划线来进行区别</span><br style="word-break: normal !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 结果</span><br style="word-break: normal !important;">和上面的结果一样<br style="word-break: normal !important;">…<br style="word-break: normal !important;"></p></pre></section><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">这里注意，我们找的是<strong style="word-break: normal !important;">class属性为more-meta的标签</strong>，用了关键字参数，但是python里面有class关键字，所以为了不使语法出错，所以需要在<strong style="word-break: normal !important;">class加个下划线</strong></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">其他参数的就不再介绍了，可以自行去官网查看</p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">4)find()方法</p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">此方法与find_all()方法一样，只不过这个方法只是查找一个标签而已，后者是查找所有符合条件的标签。</p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">还有很多类似的方法，用法都差不多，就不再一一演示了，需要的可以去官网查看</p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">5)select()方法</p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">这个方法是使用css选择器来进行筛选标签的。<br style="word-break: normal !important;"></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">css选择器：就是根据标签的名字，id和class属性来选择标签。</p><ul class=" list-paddingleft-2" style="width: 530.094px; word-break: normal !important; margin: 0px; padding: 0px 0px 0px 30px;"><li><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><strong style="word-break: normal !important;">通过标签名</strong>：直接写该标签名，如<strong style="word-break: normal !important;">&nbsp;li a</strong>&nbsp; ,这个就是找li标签下的a标签</p></li><li><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><strong style="word-break: normal !important;">通过class属性</strong>：用. 符号加class属性值，如&nbsp;<strong style="word-break: normal !important;">.title .time</strong>&nbsp;这个就是找class值为title下的class值为time的标签</p></li><li><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><strong style="word-break: normal !important;">通过id属性</strong>：用# 加id属性值来进行查找，如&nbsp;<strong style="word-break: normal !important;">#img #width&nbsp;</strong>这个就是找id值为img下的id值为width的标签</p></li><li><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">上面三者可以混合使用，如&nbsp;<strong style="word-break: normal !important;">ul .title #width</strong></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p></li></ul><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">如果还不太会的话，可以直接在浏览器上按下f12来查看</p><p style="word-break: normal !important;"><img data-s="300,640" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWibdSEM4LzQ6XUOYybwibjibtEw9BPssozfQwBMEmhzcdgbrkH8EpulrfwLIiczIhfCIsiceu3HoY6HsZA/0?wx_fmt=png" style="word-break: normal !important;" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWibdSEM4LzQ6XUOYybwibjibtEw9BPssozfQwBMEmhzcdgbrkH8EpulrfwLIiczIhfCIsiceu3HoY6HsZA/0?wx_fmt=png"></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><span style="word-break: normal !important;">位置在</span>箭头所指的位置就是选择器的表达</p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">代码如下</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 还可以用标签选择器来进行筛选元素, 返回的都是一个列表</span><br style="word-break: normal !important;">print(soup.select(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘ul li div’</span>)) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 这个是根据标签名进行筛选</span><br style="word-break: normal !important;">print(soup.select(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘.info .title’</span>)) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 这个是根据class来进行筛选</span><br style="word-break: normal !important;">print(soup.select(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘#footer #icp’</span>)) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 这个是根据id来进行筛选</span><br style="word-break: normal !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 上面的可以进行混合使用</span><br style="word-break: normal !important;">print(soup.select(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘ul li .cover a img’</span>))<br style="word-break: normal !important;"></p></pre></section><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">这里的获取属性和文本内容</p><section class="output_wrapper" id="output_wrapper_id" style="line-height: 1.6; letter-spacing: 0px; word-break: normal !important;"><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: inherit; color: inherit; line-height: inherit; word-break: normal !important;"><p style="margin-right: 2px; margin-left: 2px; padding: 0.5em 5px; line-height: 18px; font-size: 14px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); letter-spacing: 2px; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取属性</span><br style="word-break: normal !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">for</span> attr <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">in</span> soup.select(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘ul li .cover a img’</span>):<br style="word-break: normal !important;"> &nbsp; &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># print(attr.attrs[‘alt’])</span><br style="word-break: normal !important;"> &nbsp; &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 也可以这样</span><br style="word-break: normal !important;"> &nbsp; &nbsp;print(attr[<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘alt’</span>])<br style="word-break: normal !important;"><br style="word-break: normal !important;"><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取标签的内容</span><br style="word-break: normal !important;"><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">for</span> tag <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">in</span> soup.select(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘li’</span>):<br style="word-break: normal !important;"> &nbsp; &nbsp;print(tag.get_text()) &nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 里面可以包含子标签，会将子标签的内容连同输出</span><br style="word-break: normal !important;"></p></pre></section><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><strong style="word-break: normal !important;">.get_tex()方法和前面的.string属性有点不一样哈，这里的他会获取该标签的所有文本内容，不管有没有子标签</strong></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><span style="font-size: 18px; word-break: normal !important;"><strong style="word-break: normal !important;">写在最后</strong></span></p><p style="padding-right: 5px; padding-left: 5px; letter-spacing: 2px; word-break: normal !important;">以上的这些都是个人在学习过程中做的一点笔记。还有点不足，如果有错误的话欢迎大佬指出哈。如果想要查看更多相关用法可以去官方文档查看：<a href="http://beautifulsoup.readthedocs.io/zh_CN/latest/" _src="http://beautifulsoup.readthedocs.io/zh_CN/latest/" _href="http://beautifulsoup.readthedocs.io/zh_CN/latest/" style="word-break: normal !important;" target="_blank" rel="noopener">http://beautifulsoup.readthedocs.io/zh_CN/latest/</a></p><p style="word-break: normal !important;"><br></p><p style="padding-right: 5px; padding-left: 5px; letter-spacing: 2px; word-break: normal !important;">学习参考资料：<a href="https://edu.hellobi.com/course/157" target="_blank" rel="noopener">https://edu.hellobi.com/course/157</a></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">如果这篇文章对你有用，点个赞，转个发如何？</p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;"><br></p><p style="margin-bottom: 5px; padding-right: 5px; padding-left: 5px; line-height: 1.5em; letter-spacing: 2px; word-break: normal !important;">还有，祝大家今天愚人节快乐</p><section style="word-break: normal !important;"><p style="padding-right: 5px; padding-left: 5px; letter-spacing: 2px; word-break: normal !important;"><br></p><section style="padding-right: 8px; padding-left: 8px; height: 35px; display: inline-block; border-top: 1px solid rgb(0, 0, 0); border-right: 1px solid rgb(0, 0, 0); border-bottom: 1px solid rgb(0, 0, 0); font-weight: bold; line-height: 35px; vertical-align: middle; word-break: normal !important; box-sizing: border-box;">MORE</section><section style="padding-right: 8px; padding-left: 8px; height: 35px; display: inline-block; border-top: 1px solid rgb(0, 0, 0); border-bottom: 1px solid rgb(0, 0, 0); line-height: 35px; vertical-align: middle; word-break: normal !important; box-sizing: border-box;">延伸阅读</section><p style="word-break: normal !important;"><br></p><section style="padding-right: 15px; padding-left: 15px; line-height: 2em; word-break: normal !important; box-sizing: border-box;"><p style="padding-right: 5px; padding-left: 5px; letter-spacing: 2px; word-break: normal !important;"><span style="text-decoration-line: underline; word-break: normal !important;">◐◑<a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483760&amp;idx=1&amp;sn=3e08dbc95596839abe1c84752453415f&amp;chksm=fb4a7bdccc3df2cae9f3b4df5b410017b72d62a4c26a70d8d7afb4294024928bc5d53572368a&amp;scene=21#wechat_redirect" target="_blank" style="word-break: normal !important;" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483760&amp;idx=1&amp;sn=3e08dbc95596839abe1c84752453415f&amp;chksm=fb4a7bdccc3df2cae9f3b4df5b410017b72d62a4c26a70d8d7afb4294024928bc5d53572368a&amp;scene=21#wechat_redirect">爬取《The Hitchhiker’s Guide to Python!》python进阶书并制成pdf</a><span style="color: rgb(79, 129, 189); word-break: normal !important;"></span></span></p><p style="padding-right: 5px; padding-left: 5px; letter-spacing: 2px; word-break: normal !important;"><span style="text-decoration-line: underline; word-break: normal !important;">◐◑&nbsp;<a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483720&amp;idx=1&amp;sn=4567a228e1bcca2dcb4c23f0feac39b3&amp;chksm=fb4a7be4cc3df2f234c5b7102f107e72df42a24575dd5d735fb203dddf02ca6e2d3b2b41ce28&amp;scene=21#wechat_redirect" target="_blank" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483720&amp;idx=1&amp;sn=4567a228e1bcca2dcb4c23f0feac39b3&amp;chksm=fb4a7be4cc3df2f234c5b7102f107e72df42a24575dd5d735fb203dddf02ca6e2d3b2b41ce28&amp;scene=21#wechat_redirect" style="word-break: normal !important;">python爬虫常用库之requests详解</a></span></p><p style="padding-right: 5px; padding-left: 5px; letter-spacing: 2px; word-break: normal !important;"><span style="text-decoration-line: underline; word-break: normal !important;">◐◑&nbsp;<a href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483740&amp;idx=1&amp;sn=9c62ebf1b4d284159a0500f060cb4527&amp;chksm=fb4a7bf0cc3df2e6d504c4a32d9a6e51828b5961b31ef6da81fcab8cf1b6df64bb8a99894fe3&amp;scene=21#wechat_redirect" target="_blank" style="word-break: normal !important;" _href="http://mp.weixin.qq.com/s?__biz=MzU0NzY0NzQyNw==&amp;mid=2247483740&amp;idx=1&amp;sn=9c62ebf1b4d284159a0500f060cb4527&amp;chksm=fb4a7bf0cc3df2e6d504c4a32d9a6e51828b5961b31ef6da81fcab8cf1b6df64bb8a99894fe3&amp;scene=21#wechat_redirect">老司机带你用python来爬取妹子图</a></span></p><p style="word-break: normal !important;"><br></p><p style="word-break: normal !important;"><br></p></section></section><p style="padding-right: 5px; padding-left: 5px; text-align: center; letter-spacing: 2px; word-break: normal !important;"><img border="0" height="auto" title="undefined" width="111.297px" _width="111.297px" src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWic7kTqqWcYlc513VaLSgic5P9bIBwdybZBf6KpAX6nhqeHkC0cW2KfQgGCiaREUD1uxt6nLhSO2bWsg/640" data-fail="0" style="margin-bottom: 1.4px; border-radius: 5px; border-width: 1px; border-style: dashed; border-color: rgb(168, 164, 171); box-shadow: rgba(0, 0, 0, 0.33) 6px 6px 5px 0px; word-break: normal !important; visibility: visible !important; width: 111.297px !important;" _src="https://mmbiz.qpic.cn/mmbiz_png/BIPpxEvceWic7kTqqWcYlc513VaLSgic5P9bIBwdybZBf6KpAX6nhqeHkC0cW2KfQgGCiaREUD1uxt6nLhSO2bWsg/640"><br style="word-break: normal !important;"></p><p style="text-align: center; word-break: normal !important;"><br></p><p style="padding-right: 5px; padding-left: 5px; text-align: center; letter-spacing: 2px; word-break: normal !important;"><span style="font-size: 14px; word-break: normal !important;">日常学python</span></p><p style="padding-right: 5px; padding-left: 5px; text-align: center; letter-spacing: 2px; word-break: normal !important;"><span style="font-size: 14px; word-break: normal !important;">代码不止bug，还有美和乐趣</span></p></section><section class="_editor"><p><br></p></section>]]></content>
    
    <summary type="html">
    
      
      
        &lt;section class=&quot;_editor&quot; data-mpa-powered-by=&quot;yiban.io&quot; style=&quot;max-width: 100%; color: rgb(0, 0, 0); font-family: &#39;Helvetica Neue&#39;, Helvetic
      
    
    </summary>
    
      <category term="python" scheme="http://sergiojune.com/categories/python/"/>
    
    
      <category term="爬虫" scheme="http://sergiojune.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="requests" scheme="http://sergiojune.com/tags/requests/"/>
    
  </entry>
  
  <entry>
    <title>谈谈今晚以及在跑步时的一些随想</title>
    <link href="http://sergiojune.com/2018/05/24/%E8%B0%88%E8%B0%88%E4%BB%8A%E6%99%9A%E4%BB%A5%E5%8F%8A%E5%9C%A8%E8%B7%91%E6%AD%A5%E6%97%B6%E7%9A%84%E4%B8%80%E4%BA%9B%E9%9A%8F%E6%83%B3/"/>
    <id>http://sergiojune.com/2018/05/24/谈谈今晚以及在跑步时的一些随想/</id>
    <published>2018-05-24T14:11:38.000Z</published>
    <updated>2018-08-06T08:53:50.843Z</updated>
    
    <content type="html"><![CDATA[<p>今天可以算是我的第一次在讲台上分享我的技术，准备了两天左右吧，其实也没那么长，就是做了个ppt而已，由于第一次做，有很多地方都没有做好，比如字体太小了，背景和字体颜色混合了导致看不清字等等此类的问题。如果下次再做的话一定要做得好一点。<br>还有就是我的分享有点垃圾哈，讲的内容自我感觉不是很好，也不知道需要讲什么地方，以后还是多观察下别人怎么分享吧。<br>这次需要表扬自己的是上讲台讲台没有预料中的那么紧张，虽然讲话不是很自如，不过也比以前好多了，希望下次能更进一步吧！加油！</p><h4 id="说说跑步的感想！"><a href="#说说跑步的感想！" class="headerlink" title="说说跑步的感想！"></a>说说跑步的感想！</h4><p>这两星期我经常跑步，跑完步还会做50个俯卧撑，虽然不太标准，不过也好过没有做吧。在跑步时会跑多几圈就会很累，就想放弃，不过我最后还是咬牙就挺着过去了。这两天跑步呢，我就想，追逐梦想就和跑步一样吧。就比如我把梦想都分成很多个小目标，跑步的圈数或者步数就是这些小小的目标。在刚开始的时候，你跑步会很顺利，小目标也是这样子，刚开始的小目标也是很容易就可以实现的。可是当你跑步的步数多了，也就是小目标实现多了，之后的每一步或每一个小目标都会显得举步维艰，这时候就需要你自己的意志力去支持着自己继续跑下去。所以说梦想也需要用自己的一生去实现，后面可能会越来越难，可你每实现的一个小目标都会把很多人甩在身后面，这些人就相当于你在跑步过程中的路人。</p><h4 id="人生是一场永无止尽的跑步！"><a href="#人生是一场永无止尽的跑步！" class="headerlink" title="人生是一场永无止尽的跑步！"></a>人生是一场永无止尽的跑步！</h4><p>还有这几天会经常不知道干嘛，然而还有很多事情没做，先把这些事列下来吧！<br>线性代数课程补上</p><ul><li>离散数学课程及作业补上</li><li>高等数学课程补上</li><li>scrapy的学习</li><li>马蜂窝网站的全站抓取</li><li>淘宝商品抓取</li><li>亚马逊模拟登陆</li><li>爬虫面试题</li><li>看 图解http</li><li>看 网络是怎样连接</li><li>了解下各种排序</li></ul><p>不列出来都不知道有这么多事情没做，以后觉得没事的时候可以找这些事情做了。</p><p>写完，睡觉！晚安！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天可以算是我的第一次在讲台上分享我的技术，准备了两天左右吧，其实也没那么长，就是做了个ppt而已，由于第一次做，有很多地方都没有做好，比如字体太小了，背景和字体颜色混合了导致看不清字等等此类的问题。如果下次再做的话一定要做得好一点。&lt;br&gt;还有就是我的分享有点垃圾哈，讲的
      
    
    </summary>
    
      <category term="个人随想" scheme="http://sergiojune.com/categories/%E4%B8%AA%E4%BA%BA%E9%9A%8F%E6%83%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>python爬虫常用库之urllib详解</title>
    <link href="http://sergiojune.com/2018/03/12/python%E7%88%AC%E8%99%AB%E5%B8%B8%E7%94%A8%E5%BA%93%E4%B9%8Burllib%E8%AF%A6%E8%A7%A3/"/>
    <id>http://sergiojune.com/2018/03/12/python爬虫常用库之urllib详解/</id>
    <published>2018-03-11T16:00:19.000Z</published>
    <updated>2018-08-06T08:53:50.968Z</updated>
    
    <content type="html"><![CDATA[<section class="96edit" label="Powered by bj.96weixin.com" style="font-size:16px;"><p><strong>以下为个人在学习过程中做的笔记总结之爬虫常用库urllib</strong></p><p><br></p><p>urlib库为python3的HTTP内置请求库</p><p><br></p><p>urilib的四个模块：</p><ul class=" list-paddingleft-2" style="list-style-type: disc; margin: 0px; padding: 0px 0px 0px 30px;"><li><p>urllib.request:用于获取网页的响应内容</p></li><li><p>urllib.error:异常处理模块，用于处理异常的模块</p></li><li><p>urllib.parse:用于解析url</p></li><li><p>urllib.robotparse:用于解析robots.txt，主要用于看哪些网站不能进行爬取，不过少用</p></li></ul><p><br></p><section class="editor"><section style="margin: 10px auto; padding: 2px; box-sizing: border-box;"><section style="width: 60px;height: 40px;text-align: center;font-size: 2em;color: rgb(255, 255, 255);float: left;line-height: 40px;background: linear-gradient(-45deg, transparent 14.14px, rgb(139,183,72) 0px) right bottom / 50% 50% no-repeat, linear-gradient(45deg, transparent 14.14px, rgb(139,183,72) 0px) left bottom / 50% 50% no-repeat, linear-gradient(135deg, transparent 14.14px, rgb(139,183,72) 0px) left top / 50% 50% no-repeat, linear-gradient(-135deg, transparent 14.14px, rgb(139,183,72) 0px) right top / 50% 50% no-repeat;"><section class="autonum">1</section></section><section style="word-wrap: break-word; border-bottom: 2px dashed rgb(128, 177, 53); min-height: 36px; display: inline-block; line-height: 36px; margin-top: 0px; margin-left: 10px; box-sizing: border-box;"><span style="color: #80B135; font-size: 18px; margin-top: 0px; display: inline-block;">urllib.request</span></section></section></section><p><br></p><p>urllib.request.urlopen(url,data=None,[timeout,]<em>,cafile=None,cadefault=False,context=None)<br></em></p><ul class=" list-paddingleft-2" style="list-style-type: disc; margin: 0px; padding: 0px 0px 0px 30px;"><li><p>url:为请求网址</p></li><li><p>data:请求时需要发送的参数</p></li><li><p>timeout:超时设置，在该时间范围内返回请求内容就不会报错</p></li></ul><p><br></p><p>示例代码：</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 1</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">from</span> urllib <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> request<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 2</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 3</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 请求获取网页返回内容</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 4</span>response = request.urlopen(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="https://movie.douban.com/&#39;" target="_blank" rel="noopener">https://movie.douban.com/&#39;</a></span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 5</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取网页返回内容</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 6</span>print(response.read().decode(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘utf-8’</span>))<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 7</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取状态码</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 8</span>print(response.status)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 9</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取请求头</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">10</span>print(response.getheaders())<br></code></pre></section><p><br></p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">1</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 对请求头进行遍历</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">2</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">for</span> k, v <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">in</span> response.getheaders():<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">3</span> print(k, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘=’</span>, v)<br></code></pre></section><p><br></p><p><br></p><p>可以使用上面的代码对一些网站进行请求了，但是当需要一些反爬网站时，这就不行了，这时我们需要适当地增加请求头进行请求，这时就需要使用复杂一点的代码了，这时我们需要用到<strong>Request</strong>对象</p><p><br></p><p>代码示例：</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">1</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 请求头</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">2</span>headers = {<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘User-Agent’</span>:<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.221 Safari/537.36 SE 2.X MetaSr 1.0’</span>}<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">3</span>requests = request.Request(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="https://movie.douban.com/&#39;" target="_blank" rel="noopener">https://movie.douban.com/&#39;</a></span>, headers=headers) <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 加入自己的请求头更加接近浏览器</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">4</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 进行请求,把Request对象传入urlopen参数中</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">5</span>response = request.urlopen(requests)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">6</span>print(response.read().decode(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘utf-8’</span>))<br></code></pre></section><p>这个我添加了请求头进行请求，使我发送的请求更加接近浏览器的行为。可以对应一些反爬网站了</p><p><br></p><p>如果网站需要进行登陆，这时需要用到post方法，用上面的也是可以的。代码如下：</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 1</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">from</span> urllib <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> request, parse<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 2</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 使用post方法来进行模拟登陆豆瓣</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 3</span>data = {<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘source’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘None’</span>,<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 4</span> <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘redir’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="https://www.douban.com/&#39;" target="_blank" rel="noopener">https://www.douban.com/&#39;</a></span>,<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 5</span> <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘form_email’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘user’</span>,<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 6</span> <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘form_password’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘passwd’</span>,<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 7</span> <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘remember’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘on’</span>,<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 8</span> <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘login’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘登录’</span>}<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 9</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 将data的字典类型转换为get请求方式</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">10</span>data = bytes(parse.urlencode(data), encoding=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘utf-8’</span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">11</span>requests = request.Request(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="https://accounts.douban.com/login&#39;" target="_blank" rel="noopener">https://accounts.douban.com/login&#39;</a></span>, headers=headers, data=data, method=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘POST’</span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">12</span>response = request.urlopen(requests)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">13</span>print(response.read().decode(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘utf-8’</span>))</code></pre></section><p>这里我用到了<strong>data</strong>的参数把登陆需要的参数传进去，还加了个请求方法<strong>Method</strong></p><p><br></p><p><strong>parse.urlencode()</strong>后面有讲</p><p><br></p><p>这里还有另外一种添加请求头的方法<br></p><p><strong>Request.add_header():</strong> 参数有两个，分别为请求头对应的键和值，这种方法一次只能添加一个请求头，添加多个需要用到循环或者直接用前面的方法添加多个请求头</p><p><br></p><p>在登陆了网站之后，我们需要用到cookie来保存登陆信息，这时就需要获取cookie了。urllib获取cookie比较麻烦。</p><p>代码示例如下：</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 1</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">from</span> http <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> cookiejar<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 2</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取cookie</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 3</span>cookie = cookiejar.CookieJar()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 4</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取助手把cookie传进去</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 5</span>handler = request.HTTPCookieProcessor(cookie)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 6</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 获取opener进行请求网站</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 7</span>opener = request.build_opener(handler)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 8</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 请求网页</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 9</span>response = opener.open(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="https://movie.douban.com/&#39;" target="_blank" rel="noopener">https://movie.douban.com/&#39;</a></span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">10</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 打印cookie</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">11</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">for</span> c <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">in</span> cookie:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">12</span> print(c.name, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘=’</span>, c.value)<br></code></pre></section><p><br></p><p>单纯地打印没什么用，我们需要把他存入文件来保存，下次使用时再次加载cookie来登陆</p><p><br></p><p>保存cookie为文件：</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">1</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">from</span> http <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> cookiejar<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">2</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 将cookie保存在文件中</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">3</span>filename = <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘cookie.txt’</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">4</span>cookie = cookiejar.MozillaCookieJar(filename) # 表示使用Mozilla的cookie方式存储和读取<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">5</span>handler = request.HTTPCookieProcessor(cookie)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">6</span>opener = request.build_opener(handler)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">7</span>opener.open(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="https://movie.douban.com/&#39;" target="_blank" rel="noopener">https://movie.douban.com/&#39;</a></span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">8</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 保存文件</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">9</span>cookie.save(ignore_discard=<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">True</span>, ignore_expires=<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">True</span>)<br></code></pre></section><p><br></p><p>另一种保存方法：</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">1</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">from</span> http <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> cookiejar<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">2</span>cookie = cookiejar.LWPCookieJar(filename) # 表示 Set-Cookie3 文件格式存储和读取<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">3</span>handler = request.HTTPCookieProcessor(cookie)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">4</span>opener = request.build_opener(handler)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">5</span>opener.open(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="https://movie.douban.com/&#39;" target="_blank" rel="noopener">https://movie.douban.com/&#39;</a></span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">6</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 保存文件</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">7</span>cookie.save(ignore_discard=<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">True</span>, ignore_expires=<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">True</span>)<br></code></pre></section><p><br></p><p><strong>这两种保存格式都是不一样的，需要保存的内容一样。</strong></p><p><br></p><p>保存可以了，这时就需要用到加载了，当然也可以。代码如下：</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">1</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">from</span> http <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> cookiejar<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">2</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 从cookie文件加载到网页上实现记住登陆</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">3</span>cookie = cookiejar.LWPCookieJar()<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">4</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 加载文件</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">5</span>cookie.load(filename, ignore_discard=<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">True</span>, ignore_expires=<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">True</span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">6</span>handler = request.HTTPCookieProcessor(cookie)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">7</span>opener = request.build_opener(handler)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">8</span>opener.open(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="https://movie.douban.com/&#39;" target="_blank" rel="noopener">https://movie.douban.com/&#39;</a></span>)<br></code></pre></section><p>这样就可以实现不用密码进行登陆了。</p><p><br></p><p>cookie小总结：在操作cookie时，都是分五步，如下：</p><ol class=" list-paddingleft-2" style="list-style-type: decimal; margin: 0px; padding: 0px 0px 0px 30px;"><li><p>进行导包，至关重要的一步，不导包直接出错。</p></li><li><p>获取cookie处理对象，使用cookiejar包</p></li><li><p>创建cookie处理器，使用request.HTTPCookieJarProcessor()</p></li><li><p>利用cookie处理器构建opener，使用request.build_opener()</p></li><li><p><strong>进行请求网站，用opener.open(),这个不能用request.urlopen()</strong><br></p></li></ol><p><br></p><p>如果有时你在同一ip连续多次发送请求，会有被封ip的可能，这时我们还需要用到代理ip进行爬取，代码如下：</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">1</span>proxy = request.ProxyHandler({<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">2</span> <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘https’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="https://106.60.34.111:80&#39;" target="_blank" rel="noopener">https://106.60.34.111:80&#39;</a></span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">3</span>})<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">4</span>opener = request.build_opener(proxy)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">5</span>opener.open(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="https://movie.douban.com/&#39;" target="_blank" rel="noopener">https://movie.douban.com/&#39;</a></span>, timeout=<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">1</span>)<br></code></pre></section><p>可以看到越复杂的请求都需要用到request.build_opener(),这个方法有点重要，请记住哈</p><p><br></p><section class="editor"><section style="margin: 10px auto; padding: 2px; box-sizing: border-box;"><section style="width: 60px;height: 40px;text-align: center;font-size: 2em;color: rgb(255, 255, 255);float: left;line-height: 40px;background: linear-gradient(-45deg, transparent 14.14px, rgb(139,183,72) 0px) right bottom / 50% 50% no-repeat, linear-gradient(45deg, transparent 14.14px, rgb(139,183,72) 0px) left bottom / 50% 50% no-repeat, linear-gradient(135deg, transparent 14.14px, rgb(139,183,72) 0px) left top / 50% 50% no-repeat, linear-gradient(-135deg, transparent 14.14px, rgb(139,183,72) 0px) right top / 50% 50% no-repeat;"><section class="autonum">2</section></section><section style="word-wrap: break-word; border-bottom: 2px dashed rgb(128, 177, 53); min-height: 36px; display: inline-block; line-height: 36px; margin-top: 0px; margin-left: 10px; box-sizing: border-box;"><span style="color: #80B135; font-size: 18px; margin-top: 0px; display: inline-block;">urllib.error</span></section></section></section><p><br></p><p>将上面的使用代理ip的请求进行异常处理，如下：<br></p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 1</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">from</span> urllib <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> request, error<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 2</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">try</span>:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 3</span> proxy = request.ProxyHandler({<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 4</span> <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘https’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="https://106.60.34.111:80&#39;" target="_blank" rel="noopener">https://106.60.34.111:80&#39;</a></span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 5</span> })<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 6</span> opener = request.build_opener(proxy)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 7</span> opener.open(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="https://movie.douban.com/&#39;" target="_blank" rel="noopener">https://movie.douban.com/&#39;</a></span>, timeout=<span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">1</span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 8</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">except</span> error.HTTPError <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">as</span> e:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;"> 9</span> print(e.reason(), e.code(), e.headers())<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">10</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">except</span> error.URLError <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">as</span> e:<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">11</span> print(e.reason)<br></code></pre></section><p>因为有时这个ip或许也被封了，有可能会抛出异常，所以我们为了让程序运行下去进而进行捕捉程序</p><p><br></p><ul class=" list-paddingleft-2" style="list-style-type: disc; margin: 0px; padding: 0px 0px 0px 30px;"><li><p><span style="white-space: pre-wrap;">error.URLError: 这个是url的一些问题，这个异常只有一个<strong>reason属性</strong></span><br></p></li><li><p><span style="white-space: pre-wrap;">error.HTTPError:这个是error.URLError的子类，所以在与上面的混合使用时需要将这个异常放到前面，这个异常是一些请求错误，有三个方法，<strong>.reason(), .code(), .headers()</strong>,所以在捕捉异常时通常先使用这个</span></p></li></ul><p><br></p><section class="editor"><section style="margin: 10px auto; padding: 2px; box-sizing: border-box;"><section style="width: 60px;height: 40px;text-align: center;font-size: 2em;color: rgb(255, 255, 255);float: left;line-height: 40px;background: linear-gradient(-45deg, transparent 14.14px, rgb(139,183,72) 0px) right bottom / 50% 50% no-repeat, linear-gradient(45deg, transparent 14.14px, rgb(139,183,72) 0px) left bottom / 50% 50% no-repeat, linear-gradient(135deg, transparent 14.14px, rgb(139,183,72) 0px) left top / 50% 50% no-repeat, linear-gradient(-135deg, transparent 14.14px, rgb(139,183,72) 0px) right top / 50% 50% no-repeat;"><section class="autonum">3</section></section><section style="word-wrap: break-word; border-bottom: 2px dashed rgb(128, 177, 53); min-height: 36px; display: inline-block; line-height: 36px; margin-top: 0px; margin-left: 10px; box-sizing: border-box;"><span style="color: #80B135; font-size: 18px; margin-top: 0px; display: inline-block;">urllib.parse</span></section></section></section><p><br></p><p>解析url:urllib.parse.urlparse(url, scheme=’’, allow_fragments=True)</p><p><br></p><p>简单的使用：</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">1</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">from</span> urllib <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> request, parse<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">2</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 解析url</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">3</span>print(parse.urlparse(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="https://movie.douban.com/&#39;" target="_blank" rel="noopener">https://movie.douban.com/&#39;</a></span>))<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">4</span>print(parse.urlparse(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="https://movie.douban.com/&#39;" target="_blank" rel="noopener">https://movie.douban.com/&#39;</a></span>, scheme=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘http’</span>))<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">5</span>print(parse.urlparse(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘movie.douban.com/‘</span>, scheme=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘http’</span>))<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">6</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 下面是结果</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">7</span>ParseResult(scheme=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘https’</span>, netloc=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘movie.douban.com’</span>, path=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘/‘</span>, params=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘’</span>, query=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘’</span>, fragment=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘’</span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">8</span>ParseResult(scheme=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘https’</span>, netloc=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘movie.douban.com’</span>, path=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘/‘</span>, params=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘’</span>, query=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘’</span>, fragment=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘’</span>)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">9</span>ParseResult(scheme=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘http’</span>, netloc=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘’</span>, path=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘movie.douban.com/‘</span>, params=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘’</span>, query=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘’</span>, fragment=<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘’</span>)<br></code></pre></section><p>可以看出加了scheme参数和没加的返回结果是有区别的。而当scheme协议加了，而前面的url也包含协议，一般会忽略后面的scheme参数</p><p><br></p><p>既然后解析url，那当然也有反解析url，就是把元素串连成一个url</p><p><br></p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">1</span><span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">from</span> urllib <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">import</span> parse<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">2</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 将列表元素拼接成url</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">3</span>url = [<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘http’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘www’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘baidu’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘com’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘dfdf’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘eddffa’</span>] <span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 这里至少需要6个元素（我乱写的，请忽视）</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">4</span>print(parse.urlunparse(url))<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">5</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 下面是结果</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">6</span><a href="http://www/baidu;com?dfdf" target="_blank" rel="noopener">http://www/baidu;com?dfdf</a><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;">#eddffa</span><br></code></pre></section><p>urlparse()接收一个列表的参数，而且列表的长度是有要求的，是必须六个参数以上，要不会抛出异常</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">1</span>Traceback (most recent call last):<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">2</span> File <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“E:/anaconda/python_project/python3_spider/urllib_test.py”</span>, line <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">107</span>, <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">in</span> &lt;module&gt;<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">3</span> print(parse.urlunparse(url))<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">4</span> File <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">“E:\anaconda\lib\urllib\parse.py”</span>, line <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">454</span>, <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">in</span> urlunparse<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">5</span> _coerce_args(components))<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">6</span>ValueError: <span class="hljs-keyword" style="font-size: inherit; line-height: inherit; color: rgb(248, 35, 117); word-wrap: inherit !important; word-break: inherit !important;">not</span> enough values to unpack (expected <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">7</span>, got <span class="hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); word-wrap: inherit !important; word-break: inherit !important;">6</span>)<br></code></pre></section><p><br></p><p>urllib.parse.urljoin():这个是将第二个参数的url缺少的部分用第一个参数的url补齐</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">1</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 连接两个参数的url, 将第二个参数中缺的部分用第一个参数的补齐</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">2</span>print(parse.urljoin(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="https://movie.douban.com/&#39;" target="_blank" rel="noopener">https://movie.douban.com/&#39;</a></span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘index’</span>))<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">3</span>print(parse.urljoin(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="https://movie.douban.com/&#39;" target="_blank" rel="noopener">https://movie.douban.com/&#39;</a></span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="https://accounts.douban.com/login&#39;" target="_blank" rel="noopener">https://accounts.douban.com/login&#39;</a></span>))<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">4</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 下面是结果</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">5</span><a href="https://movie.douban.com/index" target="_blank" rel="noopener">https://movie.douban.com/index</a><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">6</span><a href="https://accounts.douban.com/login" target="_blank" rel="noopener">https://accounts.douban.com/login</a><br></code></pre></section><p><br></p><p><br></p><p>urllib.parse.urlencode():这个方法是将字典类型的参数转为请求为get方式的字符串</p><section class="output_wrapper" id="output_wrapper_id" style="color: rgb(62, 62, 62); line-height: 1.6; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><pre style="font-size: inherit; color: inherit; line-height: inherit; margin-top: 0px; margin-bottom: 0px; padding: 0px;"><code class="python language-python hljs" style="margin-right: 2px; margin-left: 2px; line-height: 18px; font-size: 14px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; color: rgb(169, 183, 198); background: rgb(40, 43, 46); padding: 0.5em; display: block !important; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important;"><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">1</span>data = {<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘name’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘sergiojuue’</span>, <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘sex’</span>: <span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘boy’</span>}<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">2</span>data = parse.urlencode(data)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">3</span>print(<span class="hljs-string" style="font-size: inherit; line-height: inherit; color: rgb(238, 220, 112); word-wrap: inherit !important; word-break: inherit !important;">‘<a href="https://accounts.douban.com/login&#39;" target="_blank" rel="noopener">https://accounts.douban.com/login&#39;</a></span>+data)<br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">4</span><span class="hljs-comment" style="font-size: inherit; line-height: inherit; color: rgb(128, 128, 128); word-wrap: inherit !important; word-break: inherit !important;"># 下面是结果</span><br><span class="linenum hljs-number" style="font-size: inherit; line-height: inherit; color: rgb(174, 135, 250); padding-right: 20px; word-wrap: inherit !important; word-break: inherit !important;">5</span><a href="https://accounts.douban.com/loginname=sergiojuue&amp;sex=boy" target="_blank" rel="noopener">https://accounts.douban.com/loginname=sergiojuue&amp;sex=boy</a><br></code></pre></section><p><br></p><p><br></p><section class="editor"><section style="margin: 10px auto; padding: 2px; box-sizing: border-box;"><section style="width: 60px;height: 40px;text-align: center;font-size: 2em;color: rgb(255, 255, 255);float: left;line-height: 40px;background: linear-gradient(-45deg, transparent 14.14px, rgb(139,183,72) 0px) right bottom / 50% 50% no-repeat, linear-gradient(45deg, transparent 14.14px, rgb(139,183,72) 0px) left bottom / 50% 50% no-repeat, linear-gradient(135deg, transparent 14.14px, rgb(139,183,72) 0px) left top / 50% 50% no-repeat, linear-gradient(-135deg, transparent 14.14px, rgb(139,183,72) 0px) right top / 50% 50% no-repeat;"><section class="autonum">4</section></section><section style="word-wrap: break-word; border-bottom: 2px dashed rgb(128, 177, 53); min-height: 36px; display: inline-block; line-height: 36px; margin-top: 0px; margin-left: 10px; box-sizing: border-box;"><span style="color: #80B135; font-size: 18px; margin-top: 0px; display: inline-block;">结语</span></section></section></section><p>还有个urllib.robotparse库少用，就不说了，留给以后需要再去查文档吧。</p><p>上面的只是我在学习过程中的总结，如果有什么错误的话，欢迎在留言区指出，还有就是需要查看更多用法的请查看文档<a href="https://docs.python.org/3/library/urllib.html" _src="https://docs.python.org/3/library/urllib.html" target="_blank" rel="noopener">https://docs.python.org/3/library/urllib.html</a></p><p><br></p><p>需要代码的可以去我的github上面fork，给个star也行！</p><p>github:<a href="https://github.com/SergioJune/gongzhonghao_code/blob/master/python3_spider/urllib_test.py" target="_blank" rel="noopener">https://github.com/SergioJune/gongzhonghao_code/blob/master/python3_spider/urllib_test.py</a> </p><p><br></p><p>学习过程中看的大多是崔庆才大佬的视屏：<a href="https://edu.hellobi.com/course/157" _src="https://edu.hellobi.com/course/157" target="_blank" rel="noopener">https://edu.hellobi.com/course/157</a></p><p><br></p><p><br></p><p><br></p><p><br></p><p style="text-align: center;"><img style="border-radius: 5px; border: 1px dashed rgb(168, 164, 171); box-shadow: rgba(0, 0, 0, 0.33) 6px 6px 5px 0px; margin-bottom: 1.4px; visibility: visible !important; width: 111.297px !important;" src="http://pic.96weixin.com/upload/image2/vip/881679/1803/1803114089.png" height="auto" border="0" alt="undefined" _src="http://pic.96weixin.com/upload/image2/vip/881679/1803/1803114089.png" title="1803114089.png"><br></p><p style="text-align: center;"><br></p><p style="text-align: center;"><span style="font-size: 14px;">日常学python</span></p><p style="text-align: center;"><span style="font-size: 14px;">一个专注于python的公众号</span></p></section>]]></content>
    
    <summary type="html">
    
      
      
        &lt;section class=&quot;96edit&quot; label=&quot;Powered by bj.96weixin.com&quot; style=&quot;font-size:16px;&quot;&gt;&lt;p&gt;&lt;strong&gt;以下为个人在学习过程中做的笔记总结之爬虫常用库urllib&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;
      
    
    </summary>
    
      <category term="python" scheme="http://sergiojune.com/categories/python/"/>
    
    
      <category term="爬虫" scheme="http://sergiojune.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="urllib" scheme="http://sergiojune.com/tags/urllib/"/>
    
  </entry>
  
  <entry>
    <title>2017年终总结</title>
    <link href="http://sergiojune.com/2017/12/31/2017%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    <id>http://sergiojune.com/2017/12/31/2017年终总结/</id>
    <published>2017-12-31T14:11:38.000Z</published>
    <updated>2018-08-06T08:53:50.818Z</updated>
    
    <content type="html"><![CDATA[<p>今天是2017的最后一天了，对于2017，是我至今为止最重要的一年，在这一年中经历了人生的第一场高考，很高兴，这也是最后一场。而在下半年，我也进入了大学，虽然大学不是理想中的大学，但是我也很高兴，因为终于可以不再像高中那样了，在这里我可以学习我想要学的东西！</p><h1 id="上半年"><a href="#上半年" class="headerlink" title="上半年"></a>上半年</h1><p>那时我还在准备高考，每天沉迷于题海之中，那段在一中的时间，是我高中过得最充实的时间，每天早上六点起床，晚上奋斗到差不多一点才睡。<br>但是高三一年的勤奋拉近不了我在高中挥霍了两年的时间所带来的与别人的距离，所以在每次模拟试下来之后都在想，为啥前两年不学多一点呢？这样子在高三就不会这么辛苦，也就不会有这么大的坑让给高三的一年来填。但是我也不会后悔，因为在那两年里，我学会了踢球，懂得了人生有太多的意外，比如我在高二那年的足球班赛，我也认识了一大堆志同道合的人。所以说，对自己走过的路不曾后悔。<br>在这半年，我度过了第一个百日誓师，还记得那天康亚华校长的谈话，还记得我们跑步的激情，还记得那天之后对未来的憧憬。。。</p><pre><code>百日誓师，壮观！！！</code></pre><p><img src="http://oz39yfeyy.bkt.clouddn.com/mmexport1514702564565.jpg" alt="百日誓师"></p><pre><code>下面是我们班在百日誓师的照片</code></pre><p><img src="http://oz39yfeyy.bkt.clouddn.com/null-6ef188b3db149be1.jpg" alt="高三十四班"></p><p>最后放张我们学校的照片吧，离开后才发现学校是真的美！<br><img src="http://oz39yfeyy.bkt.clouddn.com/null-2e688bf1463c76c7.jpg" alt="吴川一中"><br><strong> 最后六月份，走上了考场，离开了学校，最终的结果也对得起我在高三奋斗的一年！ </strong></p><h1 id="下半年"><a href="#下半年" class="headerlink" title="下半年"></a>下半年</h1><p>下半年我走进了大学，大学虽然没有想象的大和好，但这始终会是我在余下四年继续坚持我奋斗的地方，所以我也爱上了这个地方。<br><strong> 看！ </strong><br><img src="http://oz39yfeyy.bkt.clouddn.com/mmexport1511785817443.jpg" alt="我的大学"><br><img src="http://oz39yfeyy.bkt.clouddn.com/mmexport1511785833297.jpg" alt="我的大学"><br>我的大学还是很美的。<br>还有我的班，每个都很帅很漂亮，有木有！！！<br><img src="http://oz39yfeyy.bkt.clouddn.com/mmexport1510329287628.jpg" alt="软件工程4班"><br><img src="http://oz39yfeyy.bkt.clouddn.com/IMG_20170921_202907.jpg.JPG" alt="软件工程4班"><br>在这大学半年里，我学了很多编程知识，比如c语言，python，html+css+javascript和java，学了这么多，都是因为去尝试吧，因为我暂时不知道我要往哪个方向发展，现在我知道了，我准备往爬虫，分析大数据方向，或许还有人工智能，还有就是以python为主的前端<br>在学了这么多，自己模仿了两个网页，也做了一个简单的查看新闻app，总之还没有深入，准备下一年深入学习。<br>不过在学习学校的课程是失败的，很多课都没有认真学习，英语也没有学好，觉得蛮遗憾的，浪费了这么多时间。<br>还有，我也根据了网上的教程自己搭建了一个属于自己的博客，也挺不错的。<br>而在自己博客定的小目标也没有完成多少，可能要完成的东西太多了，所以也没有完成，下一次就知道应该定多少了，嘻嘻！<br>我在最后的一个月还参加了一个打卡活动，里面的早起和坚持锻炼我基本上算是坚持下来了，算是比较欣慰了。</p><p><strong><em> 引用知识星球人里一段话 </em></strong></p><blockquote><p>人生那么长，做着枯燥而无意义的工作，每时每刻都是煎熬。  人生那么短，如果每一步成长都是令人激动的，那你一定不会说:”后悔”。</p></blockquote><blockquote><p>尝试，不断试错，不断碰壁，不断重来，你会发现人生有那么多的可能。会发现世界上有那么美丽的事情让我们满心欢喜。</p></blockquote><blockquote><p>献给现在迷茫，未来成功的你。</p></blockquote><h3 id="不忘初心，方得始终。"><a href="#不忘初心，方得始终。" class="headerlink" title="不忘初心，方得始终。"></a>不忘初心，方得始终。</h3><h3 id="2018，我来了！！！"><a href="#2018，我来了！！！" class="headerlink" title="2018，我来了！！！"></a>2018，我来了！！！</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天是2017的最后一天了，对于2017，是我至今为止最重要的一年，在这一年中经历了人生的第一场高考，很高兴，这也是最后一场。而在下半年，我也进入了大学，虽然大学不是理想中的大学，但是我也很高兴，因为终于可以不再像高中那样了，在这里我可以学习我想要学的东西！&lt;/p&gt;
&lt;h1
      
    
    </summary>
    
      <category term="总结" scheme="http://sergiojune.com/categories/%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="hard" scheme="http://sergiojune.com/tags/hard/"/>
    
  </entry>
  
  <entry>
    <title>html表格和表单</title>
    <link href="http://sergiojune.com/2017/11/30/html%E8%A1%A8%E6%A0%BC%E5%92%8C%E8%A1%A8%E5%8D%95/"/>
    <id>http://sergiojune.com/2017/11/30/html表格和表单/</id>
    <published>2017-11-29T21:07:33.000Z</published>
    <updated>2018-08-06T08:53:50.835Z</updated>
    
    <content type="html"><![CDATA[<h3 id="HTML表格"><a href="#HTML表格" class="headerlink" title="HTML表格"></a>HTML表格</h3><ul><li>表格的组成标签是table，tr，和td，还有一个th标签，th标签和td标签的作用一样，都是用来表示表格中的列，只是th标签多了文字加粗和文字居中样式</li><li>table是表格的标记，tr是代表表格中的行，td是表格的行，格式为：<pre><code>  &lt;table&gt;       &lt;tr&gt;&lt;!--表格的行--&gt;           &lt;td&gt;&lt;/td&gt;&lt;!--表格的列--&gt;    &lt;/tr&gt;   &lt;/table&gt;</code></pre></li><li>caption标签是表格的标题，每个表格只能有一个标题</li><li>当表结构较复杂时，可以使用表结构来进行优化，就是将表格分为三部分，分别为表头，主体内容和脚注<br>  1.thead标签：这个是表头标签，双标记<br>  2.tbody标签：这个是表主体内容的标签，双标记<br>  3.tfoot：这个是脚注标签，表尾部内容，双标记</li><li>表格的属性：<br>  1.width：表格的宽度，单位可以是px或者百分比，height这个高度属性也和他差不多<br>  2.align：表格相对周围元素的对齐方式，有left，right，center三个值可选<br>  3.border;表格边框的宽度，单位是px，不设置时表格没有边框显示<br>  4.BGcolor：表格的背景颜色，可以用rgb（x，x，x）或十六进制或颜色名来写值<br>  5.cellpadding：单元格边缘和他内容之间的宽度，单位是像素和百分比<br>  6.cellspacing：单元格之间的空白距离，单位是像素和百分比<br>  7.frame：规定外侧边框可不可见，有void，above，below，hsides，vsides，lhs，rhs，box和border可选<br>  8.rules：规定内侧边框可不可见，有none，groups，rows，cols和all可选</li><li><p>td列标签的两个重要属性：<br>  1.colspan：跨列属性<br>  <img src="http://oz39yfeyy.bkt.clouddn.com/%5B3%5D%29SC03U5F1%5B$$F~O%29$%60%28X.png" alt="2014年跨列"></p><p>  2.rowspan：跨行属性<br>  <img src="http://oz39yfeyy.bkt.clouddn.com/$E8TSCV$2Z9SUAS8I2KP%5B%28X.png" alt="城市跨行属性"></p></li></ul><p>###用这个表格标签做了个表格<br><img src="http://oz39yfeyy.bkt.clouddn.com/F0BK4%608GHMJ12QZ@SRSI2@8.png" alt="表格"></p><ul><li>步骤：<br>  1.先把这个表格的整体部分写出来，把表格先分成5行5列；<br>  2.把文字的居中，用cellpadding属性，把值改成0就可以；<br>  3.使用跨行跨列属性，记得使用后要把相对应的行或列删除，因为当使用跨行或者跨列后，该行或者该列就变成两行或者两列；<br>  4.最后把相对应的背景颜色设置就可</li></ul><h3 id="HTML表单"><a href="#HTML表单" class="headerlink" title="HTML表单"></a>HTML表单</h3><ul><li>表单一般用来填写注册信息或者登陆信息</li><li>表单用Form标签，双标志</li><li>表单中的元素用input标签，单标志，通过type属性来确定表单的内容，格式为<pre><code>  &lt;Form&gt;       &lt;input type=&quot;属性值&quot;/&gt;   &lt;/Form&gt;</code></pre></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;HTML表格&quot;&gt;&lt;a href=&quot;#HTML表格&quot; class=&quot;headerlink&quot; title=&quot;HTML表格&quot;&gt;&lt;/a&gt;HTML表格&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;表格的组成标签是table，tr，和td，还有一个th标签，th标签和td标签的作用一样，都是用
      
    
    </summary>
    
      <category term="前端" scheme="http://sergiojune.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="HTML" scheme="http://sergiojune.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>HTML基础</title>
    <link href="http://sergiojune.com/2017/11/28/HTML%E5%9F%BA%E7%A1%80/"/>
    <id>http://sergiojune.com/2017/11/28/HTML基础/</id>
    <published>2017-11-27T21:17:44.000Z</published>
    <updated>2018-08-06T08:53:50.823Z</updated>
    
    <content type="html"><![CDATA[<h4 id="这个HTML基础笔记很早就想写的了，由于自己一直拖着，不想写，所以才留到现在写，"><a href="#这个HTML基础笔记很早就想写的了，由于自己一直拖着，不想写，所以才留到现在写，" class="headerlink" title="这个HTML基础笔记很早就想写的了，由于自己一直拖着，不想写，所以才留到现在写，"></a>这个HTML基础笔记很早就想写的了，由于自己一直拖着，不想写，所以才留到现在写，</h4><h4 id="现在我基本把HTML-css-JavaScript学完了，就等着我的笔记了。"><a href="#现在我基本把HTML-css-JavaScript学完了，就等着我的笔记了。" class="headerlink" title="现在我基本把HTML+css+JavaScript学完了，就等着我的笔记了。"></a>现在我基本把HTML+css+JavaScript学完了，就等着我的笔记了。</h4><h4 id="所以我决定今周一天写一篇笔记！！！"><a href="#所以我决定今周一天写一篇笔记！！！" class="headerlink" title="所以我决定今周一天写一篇笔记！！！"></a>所以我决定今周一天写一篇笔记！！！</h4><h4 id="好了，废话不多说了，写下今天所要写的笔记吧。"><a href="#好了，废话不多说了，写下今天所要写的笔记吧。" class="headerlink" title="好了，废话不多说了，写下今天所要写的笔记吧。"></a>好了，废话不多说了，写下今天所要写的笔记吧。</h4><ul><li>HTML是一种描述性的标记语言，并不是一种编程语言，想要装逼的小伙伴要记住了！！！</li><li><p>基本语法为&lt;标记符&gt;中间这里填内容&lt;/标识符&gt;—&gt;前面的标识符为开始标志，后面的标识符为结束标志</p><pre><code>如 &lt;p&gt;基本语法&lt;/p&gt;</code></pre></li><li>记住网页源代码的效果并不是网页的最终效果</li><li><p>html的文档结构如下：  </p><ol><li>html标签：是个双标记，就是有开始和结束标志。它标识网页的开始与结束，所有的HTML元素都要放在这个标记里面</li><li>head标签：双标记，标示网页文件的头部信息，如标题和搜索引擎等等</li><li>title标签：双标记，标识网页的标题，放在head标签里面</li><li>body标签：双标记，网页的主体部分，网页里显示的东西都放在里面</li></ol><p>简单网页就是这样组成的</p><pre><code>  &lt;!DOCTYPE html&gt;&lt;!--这个用于声明文档类型，写在网页的第一行--&gt;&lt;html&gt;    &lt;head&gt;        &lt;title&gt;html网页&lt;/title&gt;        &lt;meta charset=&quot;utf-8&quot;&gt;    &lt;/head&gt;    &lt;body&gt;    &lt;/body&gt;&lt;/html&gt;</code></pre></li><li><p>meta标记：用于定义文件信息，便于搜索引擎查找，放在<head>标记内。可以设置关键字（keywords），描述（description）和作者（author）等，格式如下</head></p><pre><code>1.&lt;meta name=&quot;keywords&quot; content=&quot;关键字&quot;/&gt;&lt;!--这个是设置关键字--&gt;2.&lt;meta name=&quot;description&quot; content=&quot;描述内容&quot;/&gt;&lt;!--这个是设置描述内容--&gt;3.&lt;meta name=&quot;author&quot; content=&quot;SergioJune&quot;/&gt;&lt;!--这个是设置作者--&gt;4.&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html,charset=utf-8&quot;/&gt;&lt;!--这个是设置网站的编码方式--&gt;5.&lt;meta http-equiv=&quot;1refresh&quot; content=&quot;5,URL=跳转地址&quot;/&gt;&lt;!--这个是设置网页自动跳转，由于网页问题，我防止他自动跳转，我在前面的值加了个1，要的时候记得去掉  content的第一个值为开始自动跳转的等待时间，单位为秒--&gt;</code></pre></li><li><p>html的注释：</p><pre><code>&lt;!--注释内容--&gt;</code></pre></li><li><p>pre标记：双标记，保留文本的原来格式，即文本格式原来是怎样，在网页输出也是怎样</p></li><li><p>在网页中输出特殊字符：（只是常用的几个，其他的请自行查文档）</p><pre><code>  &amp;nbsp;&lt;!--表示空格--&gt;&amp;reg;&lt;!--表示商标--&gt;&amp;lt;&lt;!--表示左边尖括号--&gt;&amp;rt;&lt;!--表示右边尖括号--&gt;</code></pre></li><li><p>HTML的列表：分为三种列表，分别是有序列表，无序列表和自定义列表，这三种均放在body标签内<br>   1.无序列表：由<strong> ul和li标记组成 </strong>，下面为格式和图片</p><pre><code>&lt;ul type=&quot;circle&quot;&gt;&lt;!--无序列表--&gt;          &lt;li&gt;&lt;!--每一个小项--&gt;           把C语言给学完，          &lt;/li&gt;          &lt;li &gt;           有空也需要把Java复习一下，要不全忘记了          &lt;/li&gt;          &lt;li&gt;           每天学习两个英语音标（英语渣渣）          &lt;/li&gt;          &lt;li type=&quot;square&quot;&gt;&lt;!--这个单独设置了样式，所以显示图标为正方形--&gt;           有空的话可以把python学完           &lt;/li&gt;   &lt;/ul&gt;</code></pre><p>   <img src="http://oz39yfeyy.bkt.clouddn.com/GB3%5BFWA9COH_S0VM%7D%28PFQ0J.png" alt="无序列表"></p><p>  2.有序列表：由 <strong>o l和li标签组成 </strong>，下面为格式和图片</p><pre><code>    &lt;ol type=&quot;A&quot; start=&quot;26&quot;&gt;&lt;!--有序列表,里面有样式设置，type属性是指按什么排序，start属性是从那个开始--&gt;             &lt;li&gt;&lt;!~--这个是每个小项--&gt;              把C语言给学完，             &lt;/li&gt;             &lt;li &gt;              有空也需要把Java复习一下，要不全忘记了             &lt;/li&gt;             &lt;li&gt;              每天学习两个英语音标（英语渣渣）             &lt;/li&gt;             &lt;li &gt;              有空的话可以把python学完              &lt;/li&gt;&lt;/ol&gt;</code></pre><p>   <img src="http://oz39yfeyy.bkt.clouddn.com/98%280EC6Y%28WK%7D4QSU1J%7D8%604V.png" alt="有序列表"></p><p>  3.自定义列表：有 <strong> dl，dt和dd组成 </strong>，而且这三个标签需要组合起来使用才有效</p><pre><code>    &lt;dl&gt;&lt;!--自定义列表--&gt;          &lt;dt&gt;&lt;!--列表的主项--&gt;           数码          &lt;/dt&gt;            &lt;dd&gt;&lt;!--该列表的仔细分类--&gt;               单反相机               &lt;/dd&gt;            &lt;dd&gt;               CPU            &lt;/dd&gt;            &lt;dd&gt;               笔记本             &lt;/dd&gt;          &lt;dt&gt;           手机          &lt;/dt&gt;            &lt;dd&gt;               小米            &lt;/dd&gt;            &lt;dd&gt;               苹果            &lt;/dd&gt;            &lt;dd&gt;               魅族             &lt;/dd&gt;&lt;/dl&gt;</code></pre><p>   <img src="http://oz39yfeyy.bkt.clouddn.com/M08F85U%5B42%5D%60U%5BZBSY0FTMJ.png" alt="自定义列表"></p></li><li><p>img标签：单标记，属性有src（必写），alt，vspace，align等属性，下面展示格式加效果图</p><pre><code>   &lt;img src=&quot;img/1.jpg&quot; align=&quot;left&quot; hspace=&quot;100&quot; height=&quot;180&quot; width=&quot;180&quot;&gt;&lt;!--src是图片的url地址值，alt是文字，当图片无法加载时显示的文字--&gt;&lt;!--hspace是距离图片的水平像素，width和height是图片的宽和高--&gt;</code></pre><p> <img src="http://oz39yfeyy.bkt.clouddn.com/%5DQYB141%29GG6OB%28SFC_G@N9U.png" alt="图片展示"></p></li><li><p>a标签：超链接标签，双标记，<br>  1.href属性;需要跳转的链接，可以是内部的，也可以是外部的，当该值是<strong> # </strong>时，表示的是空链接，就是点击无效果，用来调试的<br>  2.target属性：表示链接窗口的属性，有_self（在本窗口跳转），_blank（在新窗口跳转），_top，_parent属性<br>  3.title属性：链接提示性文字，当鼠标悬停时可以看到的文字<br>  4.name属性：给链接命名，定义锚时有用<br>  5.锚的用法和定义;使用命名锚记可以在文档中设置标记，这些标记通常放在文档的特定主题处或顶部。然后可以创建到这些命名锚记的链接，这些链接可快速将访问者带到指定位置。<br>  <strong> 创建到命名锚记的链接的过程分为两步。首先，创建命名锚记，然后创建到该命名锚记的链接。 </strong>下面给出代码展示</p><pre><code>   &lt;a href=&quot;#py2&quot;&gt;python进阶 &lt;/a&gt;&lt;!--这个就是锚导航，点击后在本网页跳转，记得格式是 #锚名 --&gt;&lt;a href=&quot;http://coding.imooc.com/class/136.html&quot; target=&quot;_blank&quot; title=&quot;点击跳转到相关课程&quot; name=&quot;py3&quot;&gt;&lt;/a&gt;&lt;!--这个是命名锚记，就是上面点击后跳转的地方--&gt;</code></pre><p> 6.它还可以发送邮件，写什么反馈邮件时可以用到，格式为：</p><pre><code>&lt;a href=&quot;mailto:邮件地址&quot;&gt;&lt;/a&gt;</code></pre><p> 7.也可以下载文件，格式为：</p><pre><code>&lt;a href=&quot;文件名&quot;&gt;&lt;/a&gt;</code></pre></li></ul><h3 id="写了这么点东西用了我几个小时，累啊，感觉写的东西都是很基础的东西，第一次写，还不太会，希望能体谅下，以后慢慢进步！"><a href="#写了这么点东西用了我几个小时，累啊，感觉写的东西都是很基础的东西，第一次写，还不太会，希望能体谅下，以后慢慢进步！" class="headerlink" title="写了这么点东西用了我几个小时，累啊，感觉写的东西都是很基础的东西，第一次写，还不太会，希望能体谅下，以后慢慢进步！"></a>写了这么点东西用了我几个小时，累啊，感觉写的东西都是很基础的东西，第一次写，还不太会，希望能体谅下，以后慢慢进步！</h3><h3 id="加油，明天继续！！！"><a href="#加油，明天继续！！！" class="headerlink" title="加油，明天继续！！！"></a>加油，明天继续！！！</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;这个HTML基础笔记很早就想写的了，由于自己一直拖着，不想写，所以才留到现在写，&quot;&gt;&lt;a href=&quot;#这个HTML基础笔记很早就想写的了，由于自己一直拖着，不想写，所以才留到现在写，&quot; class=&quot;headerlink&quot; title=&quot;这个HTML基础笔记很早
      
    
    </summary>
    
      <category term="前端" scheme="http://sergiojune.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="HTML" scheme="http://sergiojune.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>学习html第一天</title>
    <link href="http://sergiojune.com/2017/11/08/%E5%AD%A6%E4%B9%A0HTML%E7%9A%84%E7%AC%AC%E4%B8%80%E5%A4%A9%20/"/>
    <id>http://sergiojune.com/2017/11/08/学习HTML的第一天 /</id>
    <published>2017-11-08T01:00:19.000Z</published>
    <updated>2018-08-06T08:53:50.839Z</updated>
    
    <content type="html"><![CDATA[<h3 id="其实今天不是学习HTML的第一天，算是第三天了，由于前两天有点忙，又不想写，所以一直搁置到现在，"><a href="#其实今天不是学习HTML的第一天，算是第三天了，由于前两天有点忙，又不想写，所以一直搁置到现在，" class="headerlink" title="其实今天不是学习HTML的第一天，算是第三天了，由于前两天有点忙，又不想写，所以一直搁置到现在，"></a>其实今天不是学习HTML的第一天，算是第三天了，由于前两天有点忙，又不想写，所以一直搁置到现在，</h3><h3 id="不过没事，写了总比没写好一点！"><a href="#不过没事，写了总比没写好一点！" class="headerlink" title="不过没事，写了总比没写好一点！"></a>不过没事，写了总比没写好一点！</h3><h3 id="这三天看的慕课网的视频，学完了html基础，但是HTML的许多元素还没有记住，等以后边写边记吧。"><a href="#这三天看的慕课网的视频，学完了html基础，但是HTML的许多元素还没有记住，等以后边写边记吧。" class="headerlink" title="这三天看的慕课网的视频，学完了html基础，但是HTML的许多元素还没有记住，等以后边写边记吧。"></a>这三天看的慕课网的视频，学完了html基础，但是HTML的许多元素还没有记住，等以后边写边记吧。</h3><h3 id="自己跟着视频做了一个表格和一个表单，最后还模仿了一个网页，虽然有点丑，不过还是感到有点满意"><a href="#自己跟着视频做了一个表格和一个表单，最后还模仿了一个网页，虽然有点丑，不过还是感到有点满意" class="headerlink" title="自己跟着视频做了一个表格和一个表单，最后还模仿了一个网页，虽然有点丑，不过还是感到有点满意"></a>自己跟着视频做了一个表格和一个表单，最后还模仿了一个网页，虽然有点丑，不过还是感到有点满意</h3><ul><li><p>这是我做的表单<br><img src="http://oz39yfeyy.bkt.clouddn.com/FN%5DT1L33%60%5BT~N%297H~WZUTIS.png" alt=""></p></li><li><p>这是我做的注册表单<br><img src="http://oz39yfeyy.bkt.clouddn.com/1O708F39KZUQ%60@$T27L$S%29X.png" alt=""></p></li><li><p>最后是我仿的一个假网页，虽然很丑，但还是很有成就感的！嘻嘻<br><img src="http://oz39yfeyy.bkt.clouddn.com/%5DH6MSJLI%7BG3L0%29R4L%25LDQ%606.png" alt=""><br><img src="http://oz39yfeyy.bkt.clouddn.com/PJ%290%60A4U%28SZMTDHJW~DY~%28J.png" alt=""></p></li></ul><h2 id="我也在这两天学完了简单的HTML，接下来进入css，听说学完之后做的页面会漂亮很多，蛮期待的"><a href="#我也在这两天学完了简单的HTML，接下来进入css，听说学完之后做的页面会漂亮很多，蛮期待的" class="headerlink" title="我也在这两天学完了简单的HTML，接下来进入css，听说学完之后做的页面会漂亮很多，蛮期待的"></a>我也在这两天学完了简单的HTML，接下来进入css，听说学完之后做的页面会漂亮很多，蛮期待的</h2><h2 id="过两天我还要把我学HTML和css所做的笔记做个总结上传上来"><a href="#过两天我还要把我学HTML和css所做的笔记做个总结上传上来" class="headerlink" title="过两天我还要把我学HTML和css所做的笔记做个总结上传上来"></a>过两天我还要把我学HTML和css所做的笔记做个总结上传上来</h2><ul><li><p>你看，满满的笔记（字丑ing）<br><img src="http://oz39yfeyy.bkt.clouddn.com/IMG_20171114_012041.jpg" alt=""><br><img src="http://oz39yfeyy.bkt.clouddn.com/IMG_20171114_012027.jpg" alt=""></p><h3 id="好了，就码这么多了，因为实在不知道说什么了，等想到再补充吧。"><a href="#好了，就码这么多了，因为实在不知道说什么了，等想到再补充吧。" class="headerlink" title="好了，就码这么多了，因为实在不知道说什么了，等想到再补充吧。"></a>好了，就码这么多了，因为实在不知道说什么了，等想到再补充吧。</h3></li><li><p>感觉自己离全栈工程师又近了一步 </p></li></ul><h2 id="做自己喜欢的事是世界上最幸福的人"><a href="#做自己喜欢的事是世界上最幸福的人" class="headerlink" title="做自己喜欢的事是世界上最幸福的人"></a>做自己喜欢的事是世界上最幸福的人</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;其实今天不是学习HTML的第一天，算是第三天了，由于前两天有点忙，又不想写，所以一直搁置到现在，&quot;&gt;&lt;a href=&quot;#其实今天不是学习HTML的第一天，算是第三天了，由于前两天有点忙，又不想写，所以一直搁置到现在，&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
      <category term="随想" scheme="http://sergiojune.com/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
      <category term="HTML" scheme="http://sergiojune.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://sergiojune.com/2017/11/05/helloworld/"/>
    <id>http://sergiojune.com/2017/11/05/helloworld/</id>
    <published>2017-11-04T23:28:16.000Z</published>
    <updated>2018-08-06T08:53:50.831Z</updated>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=29414561&auto=0&height=66"></iframe><p><strong>昨天博客基本搭建完毕，</strong></p><p>搞到10点多，</p><p>只能说身心疲惫，但是觉得都值。</p><p>终于有了自己的后花园，以后发表什么还不是我说了算吗？  哈哈</p><p>这篇文章想了很久，几个小时，总想不出要写什么，</p><p>因为觉得自己拥有了博客，</p><p>总得发个东西装逼一下，</p><p>但细想一下，又没什么好写，</p><p>想一下文采真的烂，不过没事，谁都是这样子过来的，</p><p><strong>以后会变好的！</strong></p><p>最后分享一首美国诗！</p><blockquote><p>纽约时间比加州时间早三个小时，</p></blockquote><blockquote><p>New York is 3 hours ahead of California,</p></blockquote><blockquote><p>但加州时间并没有变慢。</p></blockquote><blockquote><p>but it does not make California slow.</p></blockquote><blockquote><p>有人22岁就毕业了，</p></blockquote><blockquote><p>Someone graduated at the age of 22,</p></blockquote><blockquote><p>但等了五年才找到好的工作！</p></blockquote><blockquote><p>but waited 5 years before securing a good job!</p></blockquote><blockquote><p>有人25岁就当上CEO，</p></blockquote><blockquote><p>Someone became a CEO at 25,</p></blockquote><blockquote><p>却在50岁去世。</p></blockquote><blockquote><p>and died at 50.</p></blockquote><blockquote><p>也有人迟到50岁才当上CEO，</p></blockquote><blockquote><p>While another became a CEO at 50,</p></blockquote><blockquote><p>然后活到90岁。</p></blockquote><blockquote><p>and lived to 90 years.</p></blockquote><blockquote><p>有人依然单身，</p></blockquote><blockquote><p>Someone is still single,</p></blockquote><blockquote><p>同时也有人已婚。</p></blockquote><blockquote><p>while someone else got married.</p></blockquote><blockquote><p>奥巴马55岁就退休，</p></blockquote><blockquote><p>Obama retires at 55,</p></blockquote><blockquote><p>川普70岁才开始当总统。</p></blockquote><blockquote><p>but Trump starts at 70.</p></blockquote><blockquote><p>世上每个人本来就有自己的发展时区。</p></blockquote><blockquote><p>Absolutely everyone in this world works based on their &gt;Time Zone.</p></blockquote><blockquote><p>身边有些人看似走在你前面，</p></blockquote><blockquote><p>People around you might seem to go ahead of you,</p></blockquote><blockquote><p>也有人看似走在你后面。</p></blockquote><blockquote><p>some might seem to be behind you.</p></blockquote><blockquote><p>但其实每个人在自己的时区有自己的步程。</p></blockquote><blockquote><p>But everyone is running their own RACE, in their own&gt;TIME.</p></blockquote><blockquote><p>不用嫉妒或嘲笑他们。</p></blockquote><blockquote><p>Don’t envy them or mock them.</p></blockquote><blockquote><p>他们都在自己的时区里，你也是！</p></blockquote><blockquote><p>They are in their TIME ZONE, and you are in yours!</p></blockquote><blockquote><p>生命就是等待正确的行动时机。</p></blockquote><blockquote><p>Life is about waiting for the right moment to act.</p></blockquote><blockquote><p>所以，放轻松。</p></blockquote><blockquote><p>So, RELAX.</p></blockquote><blockquote><p>你没有落后。</p></blockquote><blockquote><p>You’re not LATE.</p></blockquote><blockquote><p>你没有领先。</p></blockquote><blockquote><p>You’re not EARLY.</p></blockquote><blockquote><p>在命运为你安排的属于自己的时区里，一切都准时。</p></blockquote><blockquote><p>You are very much ON TIME, and in your TIME ZONE Destiny set up for you.</p></blockquote><p><strong>我的全栈之路开启了！！！</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=
      
    
    </summary>
    
      <category term="android" scheme="http://sergiojune.com/categories/android/"/>
    
    
      <category term="run" scheme="http://sergiojune.com/tags/run/"/>
    
  </entry>
  
</feed>
